#[allow(unused_imports)]
use anyhow::Result;
#[allow(unused_imports)]
use pretty_assertions::assert_eq;
#[allow(unused_imports)]
use rust_prettier::PrettyPrinterBuilder;
#[allow(dead_code)]
static INFINITY: usize = usize::MAX;
#[test]
fn test_quotes_css_single_quotetrue_format_1_0f3889ce() -> Result<()> {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("css")
        .print_width(80)
        .single_quote(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@charset \"UTF-8\";\n/* @charset must always have double quotes: https://www.w3.org/TR/css-syntax-3/#determine-the-fallback-encoding */\n/* Also, it has to be the very first thing in the file, but here are some more tests anyway: */\n@charset 'UTF-8'; /* Single quotes are invalid here. Keep them since we don't know what the user is doing. */\n\n@supports (content: one \"two\" three 'four') {\n  a[href=\"foo\" y],\n  abbr[title^='It\\'s a trap!'],\n  img[src=\"\"] {\n    /* Simple strings. */\n    content: \"abc\";\n    content: 'abc';\n\n    /* Escape. */\n    content: '\\A';\n\n    /* Emoji. */\n    content: 'üê∂';\n\n    /* Empty string. */\n    content: \"\";\n    content: '';\n\n    /* Single double quote. */\n    content: \"\\\"\";\n    content: '\"';\n\n    /* Single single quote. */\n    content: \"'\";\n    content: '\\'';\n\n    /* One of each. */\n    content: \"\\\"'\";\n    content: '\"\\'';\n\n    /* One of each with unnecessary escapes. */\n    content: \"\\\"\\'\";\n    content: '\\\"\\'';\n\n    /* More double quotes than single quotes. */\n    content: \"\\\"'\\\"\";\n    content: '\"\\'\"';\n\n    /* More single quotes than double quotes. */\n    content: \"\\\"''\";\n    content: '\"\\'\\'';\n\n    /* Two of each. */\n    content: \"\\\"\\\"''\";\n    content: '\"\"\\'\\'';\n\n    /* Single backslash. */\n    content: '\\\\';\n    content: \"\\\\\";\n\n    /* Backslases. */\n    content: \"\\\"\\\\\\\"\\\\\\\\\\\" '\\'\\\\'\\\\\\'\\\\\\\\'\";\n    content: '\\'\\\\\\'\\\\\\\\\\' \"\\\"\\\\\"\\\\\\\"\\\\\\\\\"';\n\n    /* Somewhat more real-word example. */\n    content: \"He's sayin': \\\"How's it goin'?\\\" Don't ask me why.\";\n    content: 'He\\'s sayin\\': \"How\\'s it goin\\'?\" Don\\'t ask me why.';\n\n    /* Somewhat more real-word example 2. */\n    content: \"var backslash = \\\"\\\\\\\", doubleQuote = '\\\"';\";\n    content: 'var backslash = \"\\\\\", doubleQuote = \\'\"\\';';\n\n    /* Leave all \"escapes\" alone. */\n    content: \"\\Abc4 foo \\n\" /* \"comment\" */ \"\\end\";\n    content: '\\Abc4 foo \\n' /* 'comment' */ '\\end';\n  }\n}\n\n@import \"file.css\";\n@import 'file.css';\n\n@import url(\"foo.css\");\n@import url('foo.css');\n\n@import \"foo.css\" screen and (orientation: landscape);\n@import 'foo.css' screen and (orientation: landscape);\n\n@foo \"one\";\n@foo 'one';\n@foo \"one\" two 'three';\n@foo (\"one\");\n@foo ('one');\n@foo (\"one\" two 'three');\n\none \"two\" three {}\none 'two' three {}") ? ;
    assert_eq ! (formatted , "@charset \"UTF-8\";\n/* @charset must always have double quotes: https://www.w3.org/TR/css-syntax-3/#determine-the-fallback-encoding */\n/* Also, it has to be the very first thing in the file, but here are some more tests anyway: */\n@charset 'UTF-8'; /* Single quotes are invalid here. Keep them since we don't know what the user is doing. */\n\n@supports (content: one 'two' three 'four') {\n  a[href='foo' y],\n  abbr[title^=\"It's a trap!\"],\n  img[src=''] {\n    /* Simple strings. */\n    content: 'abc';\n    content: 'abc';\n\n    /* Escape. */\n    content: '\\A';\n\n    /* Emoji. */\n    content: 'üê∂';\n\n    /* Empty string. */\n    content: '';\n    content: '';\n\n    /* Single double quote. */\n    content: '\"';\n    content: '\"';\n\n    /* Single single quote. */\n    content: \"'\";\n    content: \"'\";\n\n    /* One of each. */\n    content: '\"\\'';\n    content: '\"\\'';\n\n    /* One of each with unnecessary escapes. */\n    content: '\"\\'';\n    content: '\"\\'';\n\n    /* More double quotes than single quotes. */\n    content: '\"\\'\"';\n    content: '\"\\'\"';\n\n    /* More single quotes than double quotes. */\n    content: \"\\\"''\";\n    content: \"\\\"''\";\n\n    /* Two of each. */\n    content: '\"\"\\'\\'';\n    content: '\"\"\\'\\'';\n\n    /* Single backslash. */\n    content: '\\\\';\n    content: '\\\\';\n\n    /* Backslases. */\n    content: \"\\\"\\\\\\\"\\\\\\\\\\\" ''\\\\'\\\\'\\\\\\\\'\";\n    content: '\\'\\\\\\'\\\\\\\\\\' \"\"\\\\\"\\\\\"\\\\\\\\\"';\n\n    /* Somewhat more real-word example. */\n    content: \"He's sayin': \\\"How's it goin'?\\\" Don't ask me why.\";\n    content: \"He's sayin': \\\"How's it goin'?\\\" Don't ask me why.\";\n\n    /* Somewhat more real-word example 2. */\n    content: 'var backslash = \"\\\\\", doubleQuote = \\'\"\\';';\n    content: 'var backslash = \"\\\\\", doubleQuote = \\'\"\\';';\n\n    /* Leave all \"escapes\" alone. */\n    content: '\\Abc4 foo \\n' /* \"comment\" */ '\\end';\n    content: '\\Abc4 foo \\n' /* 'comment' */ '\\end';\n  }\n}\n\n@import 'file.css';\n@import 'file.css';\n\n@import url('foo.css');\n@import url('foo.css');\n\n@import 'foo.css' screen and (orientation: landscape);\n@import 'foo.css' screen and (orientation: landscape);\n\n@foo \"one\";\n@foo 'one';\n@foo \"one\" two 'three';\n@foo (\"one\");\n@foo ('one');\n@foo (\"one\" two 'three');\n\none 'two' three {\n}\none 'two' three {\n}");
    Ok(())
}
#[test]
fn test_quotes_css_format_1_0f3889ce() -> Result<()> {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("css")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@charset \"UTF-8\";\n/* @charset must always have double quotes: https://www.w3.org/TR/css-syntax-3/#determine-the-fallback-encoding */\n/* Also, it has to be the very first thing in the file, but here are some more tests anyway: */\n@charset 'UTF-8'; /* Single quotes are invalid here. Keep them since we don't know what the user is doing. */\n\n@supports (content: one \"two\" three 'four') {\n  a[href=\"foo\" y],\n  abbr[title^='It\\'s a trap!'],\n  img[src=\"\"] {\n    /* Simple strings. */\n    content: \"abc\";\n    content: 'abc';\n\n    /* Escape. */\n    content: '\\A';\n\n    /* Emoji. */\n    content: 'üê∂';\n\n    /* Empty string. */\n    content: \"\";\n    content: '';\n\n    /* Single double quote. */\n    content: \"\\\"\";\n    content: '\"';\n\n    /* Single single quote. */\n    content: \"'\";\n    content: '\\'';\n\n    /* One of each. */\n    content: \"\\\"'\";\n    content: '\"\\'';\n\n    /* One of each with unnecessary escapes. */\n    content: \"\\\"\\'\";\n    content: '\\\"\\'';\n\n    /* More double quotes than single quotes. */\n    content: \"\\\"'\\\"\";\n    content: '\"\\'\"';\n\n    /* More single quotes than double quotes. */\n    content: \"\\\"''\";\n    content: '\"\\'\\'';\n\n    /* Two of each. */\n    content: \"\\\"\\\"''\";\n    content: '\"\"\\'\\'';\n\n    /* Single backslash. */\n    content: '\\\\';\n    content: \"\\\\\";\n\n    /* Backslases. */\n    content: \"\\\"\\\\\\\"\\\\\\\\\\\" '\\'\\\\'\\\\\\'\\\\\\\\'\";\n    content: '\\'\\\\\\'\\\\\\\\\\' \"\\\"\\\\\"\\\\\\\"\\\\\\\\\"';\n\n    /* Somewhat more real-word example. */\n    content: \"He's sayin': \\\"How's it goin'?\\\" Don't ask me why.\";\n    content: 'He\\'s sayin\\': \"How\\'s it goin\\'?\" Don\\'t ask me why.';\n\n    /* Somewhat more real-word example 2. */\n    content: \"var backslash = \\\"\\\\\\\", doubleQuote = '\\\"';\";\n    content: 'var backslash = \"\\\\\", doubleQuote = \\'\"\\';';\n\n    /* Leave all \"escapes\" alone. */\n    content: \"\\Abc4 foo \\n\" /* \"comment\" */ \"\\end\";\n    content: '\\Abc4 foo \\n' /* 'comment' */ '\\end';\n  }\n}\n\n@import \"file.css\";\n@import 'file.css';\n\n@import url(\"foo.css\");\n@import url('foo.css');\n\n@import \"foo.css\" screen and (orientation: landscape);\n@import 'foo.css' screen and (orientation: landscape);\n\n@foo \"one\";\n@foo 'one';\n@foo \"one\" two 'three';\n@foo (\"one\");\n@foo ('one');\n@foo (\"one\" two 'three');\n\none \"two\" three {}\none 'two' three {}") ? ;
    assert_eq ! (formatted , "@charset \"UTF-8\";\n/* @charset must always have double quotes: https://www.w3.org/TR/css-syntax-3/#determine-the-fallback-encoding */\n/* Also, it has to be the very first thing in the file, but here are some more tests anyway: */\n@charset 'UTF-8'; /* Single quotes are invalid here. Keep them since we don't know what the user is doing. */\n\n@supports (content: one \"two\" three \"four\") {\n  a[href=\"foo\" y],\n  abbr[title^=\"It's a trap!\"],\n  img[src=\"\"] {\n    /* Simple strings. */\n    content: \"abc\";\n    content: \"abc\";\n\n    /* Escape. */\n    content: \"\\A\";\n\n    /* Emoji. */\n    content: \"üê∂\";\n\n    /* Empty string. */\n    content: \"\";\n    content: \"\";\n\n    /* Single double quote. */\n    content: '\"';\n    content: '\"';\n\n    /* Single single quote. */\n    content: \"'\";\n    content: \"'\";\n\n    /* One of each. */\n    content: \"\\\"'\";\n    content: \"\\\"'\";\n\n    /* One of each with unnecessary escapes. */\n    content: \"\\\"'\";\n    content: \"\\\"'\";\n\n    /* More double quotes than single quotes. */\n    content: '\"\\'\"';\n    content: '\"\\'\"';\n\n    /* More single quotes than double quotes. */\n    content: \"\\\"''\";\n    content: \"\\\"''\";\n\n    /* Two of each. */\n    content: \"\\\"\\\"''\";\n    content: \"\\\"\\\"''\";\n\n    /* Single backslash. */\n    content: \"\\\\\";\n    content: \"\\\\\";\n\n    /* Backslases. */\n    content: \"\\\"\\\\\\\"\\\\\\\\\\\" ''\\\\'\\\\'\\\\\\\\'\";\n    content: '\\'\\\\\\'\\\\\\\\\\' \"\"\\\\\"\\\\\"\\\\\\\\\"';\n\n    /* Somewhat more real-word example. */\n    content: \"He's sayin': \\\"How's it goin'?\\\" Don't ask me why.\";\n    content: \"He's sayin': \\\"How's it goin'?\\\" Don't ask me why.\";\n\n    /* Somewhat more real-word example 2. */\n    content: 'var backslash = \"\\\\\", doubleQuote = \\'\"\\';';\n    content: 'var backslash = \"\\\\\", doubleQuote = \\'\"\\';';\n\n    /* Leave all \"escapes\" alone. */\n    content: \"\\Abc4 foo \\n\" /* \"comment\" */ \"\\end\";\n    content: \"\\Abc4 foo \\n\" /* 'comment' */ \"\\end\";\n  }\n}\n\n@import \"file.css\";\n@import \"file.css\";\n\n@import url(\"foo.css\");\n@import url(\"foo.css\");\n\n@import \"foo.css\" screen and (orientation: landscape);\n@import \"foo.css\" screen and (orientation: landscape);\n\n@foo \"one\";\n@foo 'one';\n@foo \"one\" two 'three';\n@foo (\"one\");\n@foo ('one');\n@foo (\"one\" two 'three');\n\none \"two\" three {\n}\none \"two\" three {\n}");
    Ok(())
}
