#[allow(unused_imports)]
use rust_prettier::PrettyPrinterBuilder;
#[allow(dead_code)]
static INFINITY: usize = usize::MAX;
#[test]
fn test_selectors_css_format_1_83131e60() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .print_width(80)
        .parsers(vec!["css"])
        .build()
        .unwrap();
    let formatted = pretty_printer . format (".a,.b,.c {}\n.r { &, &:hover {} }\n\n@media (min-width: 0px) {\n  .a,.b,:not(asdasldaskdhjkashdahsdkjahskdjhakj,asdasldaskdhjkashdahsdkjahskdjhakj) {color: red}\n}\n\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas,\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas {}\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas,\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n{}\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas,\n\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n\n{}\n\n.parent,.another-parent{}\n.parent ,.another-parent{}\n.parent, .another-parent{}\n.parent , .another-parent {}\n.parent  ,  .another-parent  {}\n.parent\n,\n.another-parent\n{}\n\n.parent.child {}\n.parent .child {}\n.parent  .child {}\n.parent {\n  .child-one {}\n  .child-two {}\n}\n.parent{\n.child-one  {}\n.child-two  {}\n}\n.parent  {\n  .child-one  {}\n  .child-two  {}\n}\n.parent   {\n   .child-one  {}\n   .child-two  {}\n}\n.parent\n{\n  .child-one\n  {}\n  .child-two\n  {}\n}\n.parent\n\n{\n  .child-one\n\n  {}\n  .child-two\n\n  {}\n}\n\n.parent>.child {}\n.parent > .child {}\n.parent  >  .child {}\n.parent>{\n  .child-one {}\n  .child-two {}\n}\n.parent > {\n  .child-one {}\n  .child-two {}\n}\n.parent  >  {\n  .child-one {}\n  .child-two {}\n}\n.parent\n>\n{\n  .child-one\n  {}\n  .child-two\n  {}\n}\n.parent\n\n>\n\n{\n  .child-one\n\n  {}\n  .child-two\n\n  {}\n}\n.parent {\n>.child-one {}\n>.child-two {}\n}\n.parent {\n > .child-one {}\n > .child-two {}\n}\n.parent {\n  > .child-one {}\n  > .child-two {}\n}\n.parent {\n  >  .child-one {}\n  >  .child-two {}\n}\n.parent {\n   >   .child-one {}\n   >   .child-two {}\n}\n\n.parent+.child {}\n.parent + .child {}\n.parent  +  .child {}\n.parent+{\n  .child-one {}\n  .child-two {}\n}\n.parent + {\n  .child-one {}\n  .child-two {}\n}\n.parent  +  {\n  .child-one {}\n  .child-two {}\n}\n.parent\n+\n{\n  .child-one\n  {}\n  .child-two\n  {}\n}\n.parent\n\n+\n\n{\n  .child-one\n\n  {}\n  .child-two\n\n  {}\n}\n.parent {\n+.child-one {}\n+.child-two {}\n}\n.parent {\n + .child-one {}\n + .child-two {}\n}\n.parent {\n  + .child-one {}\n  + .child-two {}\n}\n.parent {\n  +  .child-one {}\n  +  .child-two {}\n}\n.parent {\n   +   .child-one {}\n   +   .child-two {}\n}\n\n.parent~.child {}\n.parent ~ .child {}\n.parent  ~  .child {}\n.parent~{\n  .child-one {}\n  .child-two {}\n}\n.parent ~ {\n  .child-one {}\n  .child-two {}\n}\n.parent  ~  {\n  .child-one {}\n  .child-two {}\n}\n.parent\n~\n{\n  .child-one\n  {}\n  .child-two\n  {}\n}\n.parent\n\n~\n\n{\n  .child-one\n\n  {}\n  .child-two\n\n  {}\n}\n.parent {\n~.child-one {}\n~.child-two {}\n}\n.parent {\n ~ .child-one {}\n ~ .child-two {}\n}\n.parent {\n  ~ .child-one {}\n  ~ .child-two {}\n}\n.parent {\n  ~  .child-one {}\n  ~  .child-two {}\n}\n.parent {\n   ~   .child-one {}\n   ~   .child-two {}\n}\n\n.parent>>>.child {}\n.parent >>> .child {}\n.parent  >>>  .child {}\n.parent>>>{\n  .child-one {}\n  .child-two {}\n}\n.parent >>> {\n  .child-one {}\n  .child-two {}\n}\n.parent  >>>  {\n  .child-one {}\n  .child-two {}\n}\n.parent\n>>>\n{\n  .child-one\n  {}\n  .child-two\n  {}\n}\n.parent\n\n>>>\n\n{\n  .child-one\n\n  {}\n  .child-two\n\n  {}\n}\n.parent {\n>>>.child-one {}\n>>>.child-two {}\n}\n.parent {\n >>> .child-one {}\n >>> .child-two {}\n}\n.parent {\n  >>> .child-one {}\n  >>> .child-two {}\n}\n.parent {\n  >>>  .child-one {}\n  >>>  .child-two {}\n}\n.parent {\n   >>>   .child-one {}\n   >>>   .child-two {}\n}\n\n/* This matches all XHTML <a> elements, as XHTML is the default unprefixed namespace */\na {}\n\n/* This matches all SVG <a> elements */\nsvg|a {}\n\n/* This matches both XHTML and SVG <a> elements */\n*|a {}\n\n|B {}\n\nns|* {}\n\n*|* {}\n\n|* {}") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , ".a,\n.b,\n.c {\n}\n.r {\n  &,\n  &:hover {\n  }\n}\n\n@media (min-width: 0px) {\n  .a,\n  .b,\n  :not(asdasldaskdhjkashdahsdkjahskdjhakj, asdasldaskdhjkashdahsdkjahskdjhakj) {\n    color: red;\n  }\n}\n\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n  .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas,\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n  .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas {\n}\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n  .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas,\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n  .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas {\n}\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n  .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas,\n.asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas\n  .asdasldaskdhjkashdahsdkjahskdjhakjsdkjahsdhkas {\n}\n\n.parent,\n.another-parent {\n}\n.parent,\n.another-parent {\n}\n.parent,\n.another-parent {\n}\n.parent,\n.another-parent {\n}\n.parent,\n.another-parent {\n}\n.parent,\n.another-parent {\n}\n\n.parent.child {\n}\n.parent .child {\n}\n.parent .child {\n}\n.parent {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n\n.parent > .child {\n}\n.parent > .child {\n}\n.parent > .child {\n}\n.parent > {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent > {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent > {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent > {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent > {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  > .child-one {\n  }\n  > .child-two {\n  }\n}\n.parent {\n  > .child-one {\n  }\n  > .child-two {\n  }\n}\n.parent {\n  > .child-one {\n  }\n  > .child-two {\n  }\n}\n.parent {\n  > .child-one {\n  }\n  > .child-two {\n  }\n}\n.parent {\n  > .child-one {\n  }\n  > .child-two {\n  }\n}\n\n.parent + .child {\n}\n.parent + .child {\n}\n.parent + .child {\n}\n.parent + {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent + {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent + {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent + {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent + {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  + .child-one {\n  }\n  + .child-two {\n  }\n}\n.parent {\n  + .child-one {\n  }\n  + .child-two {\n  }\n}\n.parent {\n  + .child-one {\n  }\n  + .child-two {\n  }\n}\n.parent {\n  + .child-one {\n  }\n  + .child-two {\n  }\n}\n.parent {\n  + .child-one {\n  }\n  + .child-two {\n  }\n}\n\n.parent ~ .child {\n}\n.parent ~ .child {\n}\n.parent ~ .child {\n}\n.parent ~ {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent ~ {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent ~ {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent ~ {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent ~ {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  ~ .child-one {\n  }\n  ~ .child-two {\n  }\n}\n.parent {\n  ~ .child-one {\n  }\n  ~ .child-two {\n  }\n}\n.parent {\n  ~ .child-one {\n  }\n  ~ .child-two {\n  }\n}\n.parent {\n  ~ .child-one {\n  }\n  ~ .child-two {\n  }\n}\n.parent {\n  ~ .child-one {\n  }\n  ~ .child-two {\n  }\n}\n\n.parent >>> .child {\n}\n.parent >>> .child {\n}\n.parent >>> .child {\n}\n.parent >>> {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent >>> {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent >>> {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent >>> {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent >>> {\n  .child-one {\n  }\n  .child-two {\n  }\n}\n.parent {\n  >>> .child-one {\n  }\n  >>> .child-two {\n  }\n}\n.parent {\n  >>> .child-one {\n  }\n  >>> .child-two {\n  }\n}\n.parent {\n  >>> .child-one {\n  }\n  >>> .child-two {\n  }\n}\n.parent {\n  >>> .child-one {\n  }\n  >>> .child-two {\n  }\n}\n.parent {\n  >>> .child-one {\n  }\n  >>> .child-two {\n  }\n}\n\n/* This matches all XHTML <a> elements, as XHTML is the default unprefixed namespace */\na {\n}\n\n/* This matches all SVG <a> elements */\nsvg|a {\n}\n\n/* This matches both XHTML and SVG <a> elements */\n*|a {\n}\n\n|B {\n}\n\nns|* {\n}\n\n*|* {\n}\n\n|* {\n}");
}
