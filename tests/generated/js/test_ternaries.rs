use pretty_assertions::assert_eq;
#[allow(unused_imports)]
use rust_prettier::PrettyPrinterBuilder;
#[allow(dead_code)]
static INFINITY: usize = usize::MAX;
#[test]
fn test_binary_js_experimental_ternariestrue_format_1_f002d6a9() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const funnelSnapshotCard = (report === MY_OVERVIEW &&\n  !ReportGK.xar_metrics_active_capitol_v2) ||\n  (report === COMPANY_OVERVIEW &&\n    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)\n  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />\n  : null;\n\nroom = room.map((row, rowIndex) => (\n  row.map((col, colIndex) => (\n    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0\n  ))\n))") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const funnelSnapshotCard =\n  (\n    (report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||\n    (report === COMPANY_OVERVIEW &&\n      !ReportGK.xar_metrics_active_capitol_v2_company_metrics)\n  ) ?\n    <ReportMetricsFunnelSnapshotCard metrics={metrics} />\n  : null;\n\nroom = room.map((row, rowIndex) =>\n  row.map((col, colIndex) =>\n    (\n      rowIndex === 0 ||\n      colIndex === 0 ||\n      rowIndex === height ||\n      colIndex === width\n    ) ?\n      1\n    : 0,\n  ),\n);");
}
#[test]
fn test_binary_js_tab_width_4_format_1_f002d6a9() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const funnelSnapshotCard = (report === MY_OVERVIEW &&\n  !ReportGK.xar_metrics_active_capitol_v2) ||\n  (report === COMPANY_OVERVIEW &&\n    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)\n  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />\n  : null;\n\nroom = room.map((row, rowIndex) => (\n  row.map((col, colIndex) => (\n    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0\n  ))\n))") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const funnelSnapshotCard =\n    (report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||\n    (report === COMPANY_OVERVIEW &&\n        !ReportGK.xar_metrics_active_capitol_v2_company_metrics) ? (\n        <ReportMetricsFunnelSnapshotCard metrics={metrics} />\n    ) : null;\n\nroom = room.map((row, rowIndex) =>\n    row.map((col, colIndex) =>\n        rowIndex === 0 ||\n        colIndex === 0 ||\n        rowIndex === height ||\n        colIndex === width\n            ? 1\n            : 0,\n    ),\n);");
}
#[test]
fn test_binary_js_use_tabstrue_format_1_f002d6a9() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const funnelSnapshotCard = (report === MY_OVERVIEW &&\n  !ReportGK.xar_metrics_active_capitol_v2) ||\n  (report === COMPANY_OVERVIEW &&\n    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)\n  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />\n  : null;\n\nroom = room.map((row, rowIndex) => (\n  row.map((col, colIndex) => (\n    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0\n  ))\n))") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const funnelSnapshotCard =\n\t(report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||\n\t(report === COMPANY_OVERVIEW &&\n\t\t!ReportGK.xar_metrics_active_capitol_v2_company_metrics) ? (\n\t\t<ReportMetricsFunnelSnapshotCard metrics={metrics} />\n\t) : null;\n\nroom = room.map((row, rowIndex) =>\n\trow.map((col, colIndex) =>\n\t\trowIndex === 0 ||\n\t\tcolIndex === 0 ||\n\t\trowIndex === height ||\n\t\tcolIndex === width\n\t\t\t? 1\n\t\t\t: 0,\n\t),\n);");
}
#[test]
fn test_binary_js_format_1_f002d6a9() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const funnelSnapshotCard = (report === MY_OVERVIEW &&\n  !ReportGK.xar_metrics_active_capitol_v2) ||\n  (report === COMPANY_OVERVIEW &&\n    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)\n  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />\n  : null;\n\nroom = room.map((row, rowIndex) => (\n  row.map((col, colIndex) => (\n    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0\n  ))\n))") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const funnelSnapshotCard =\n  (report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||\n  (report === COMPANY_OVERVIEW &&\n    !ReportGK.xar_metrics_active_capitol_v2_company_metrics) ? (\n    <ReportMetricsFunnelSnapshotCard metrics={metrics} />\n  ) : null;\n\nroom = room.map((row, rowIndex) =>\n  row.map((col, colIndex) =>\n    rowIndex === 0 ||\n    colIndex === 0 ||\n    rowIndex === height ||\n    colIndex === width\n      ? 1\n      : 0,\n  ),\n);");
}
#[test]
fn test_func_call_js_experimental_ternariestrue_format_1_54898dab() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("fn(\n  bifornCringerMoshedPerplexSawder,\n  askTrovenaBeenaDependsRowans,\n  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n    anodyneCondosMalateOverateRetinol\n      ? annularCooeedSplicesWalksWayWay\n      : kochabCooieGameOnOboleUnweave\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "fn(\n  bifornCringerMoshedPerplexSawder,\n  askTrovenaBeenaDependsRowans,\n  (\n    glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n      anodyneCondosMalateOverateRetinol\n  ) ?\n    annularCooeedSplicesWalksWayWay\n  : kochabCooieGameOnOboleUnweave,\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.");
}
#[test]
fn test_func_call_js_tab_width_4_format_1_54898dab() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("fn(\n  bifornCringerMoshedPerplexSawder,\n  askTrovenaBeenaDependsRowans,\n  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n    anodyneCondosMalateOverateRetinol\n      ? annularCooeedSplicesWalksWayWay\n      : kochabCooieGameOnOboleUnweave\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "fn(\n    bifornCringerMoshedPerplexSawder,\n    askTrovenaBeenaDependsRowans,\n    glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n        anodyneCondosMalateOverateRetinol\n        ? annularCooeedSplicesWalksWayWay\n        : kochabCooieGameOnOboleUnweave,\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.");
}
#[test]
fn test_func_call_js_use_tabstrue_format_1_54898dab() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("fn(\n  bifornCringerMoshedPerplexSawder,\n  askTrovenaBeenaDependsRowans,\n  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n    anodyneCondosMalateOverateRetinol\n      ? annularCooeedSplicesWalksWayWay\n      : kochabCooieGameOnOboleUnweave\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "fn(\n\tbifornCringerMoshedPerplexSawder,\n\taskTrovenaBeenaDependsRowans,\n\tglimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n\t\tanodyneCondosMalateOverateRetinol\n\t\t? annularCooeedSplicesWalksWayWay\n\t\t: kochabCooieGameOnOboleUnweave,\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.");
}
#[test]
fn test_func_call_js_format_1_54898dab() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("fn(\n  bifornCringerMoshedPerplexSawder,\n  askTrovenaBeenaDependsRowans,\n  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n    anodyneCondosMalateOverateRetinol\n      ? annularCooeedSplicesWalksWayWay\n      : kochabCooieGameOnOboleUnweave\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "fn(\n  bifornCringerMoshedPerplexSawder,\n  askTrovenaBeenaDependsRowans,\n  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&\n    anodyneCondosMalateOverateRetinol\n    ? annularCooeedSplicesWalksWayWay\n    : kochabCooieGameOnOboleUnweave,\n);\n// TODO(rattrayalex): try to indent consequent/alternate here.");
}
#[test]
fn test_indent_js_experimental_ternariestrue_format_1_c8377b93() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\na\n    ? {\n        a: 0\n      }\n    : {\n        a: {\n             a: 0\n           }\n            ? {\n                a: 0\n              }\n            : {\n                y: {\n                    a: 0\n                }\n                    ? {\n                        a: 0\n                    }\n                    : {\n                        a: 0\n                    }\n            }\n      }\n\na\n\t? {\n\t\t\ta: function() {\n\t\t\t\treturn a\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ta: [\n\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\tb: [\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\t\treturn a\n\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t  }\n\t\t\t\t\t: [\n\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t? a(\n\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: []\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t  ):\n\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t: (function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t\t\t\t\t\t  })(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: function() {\n\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t  ];\n\t\t\t}\n\t  }\n    : a;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb\n: ccccccccccccccc ? ddddddddddddddd\n: eeeeeeeeeeeeeee ? fffffffffffffff\n: gggggggggggggggg;\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ?\n  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ?\n    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ?\n      aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n    : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n  : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n\na ?\n  {\n    a: 0,\n  }\n: {\n    a:\n      (\n        {\n          a: 0,\n        }\n      ) ?\n        {\n          a: 0,\n        }\n      : {\n          y:\n            (\n              {\n                a: 0,\n              }\n            ) ?\n              {\n                a: 0,\n              }\n            : {\n                a: 0,\n              },\n        },\n  };\n\na ?\n  {\n    a: function () {\n      return a ?\n          {\n            a: [\n              a ?\n                {\n                  a: 0,\n                  b: [a ? [0, 1] : []],\n                }\n              : [\n                  [\n                    0,\n                    {\n                      a: 0,\n                    },\n                    a ? 0 : 1,\n                  ],\n                  function () {\n                    return a ?\n                        {\n                          a: 0,\n                        }\n                      : [\n                          {\n                            a: 0,\n                          },\n                          {},\n                        ];\n                  },\n                ],\n            ],\n          }\n        : [\n            a ?\n              function () {\n                a ?\n                  a(\n                    a ?\n                      {\n                        a: a({\n                          a: 0,\n                        }),\n                      }\n                    : [\n                        0,\n                        a(),\n                        a(\n                          a(),\n                          {\n                            a: 0,\n                          },\n                          a ? a() : (\n                            a({\n                              a: 0,\n                            })\n                          ),\n                        ),\n                        a() ?\n                          {\n                            a: a(),\n                            b: [],\n                          }\n                        : {},\n                      ],\n                  )\n                : a(\n                    a() ?\n                      {\n                        a: 0,\n                      }\n                    : (function (a) {\n                        return a() ?\n                            [\n                              {\n                                a: 0,\n                                b: a(),\n                              },\n                            ]\n                          : a([\n                              a ?\n                                {\n                                  a: 0,\n                                }\n                              : {},\n                              {\n                                a: 0,\n                              },\n                            ]);\n                      })(\n                        a ?\n                          function (a) {\n                            return function () {\n                              return 0;\n                            };\n                          }\n                        : function (a) {\n                            return function () {\n                              return 1;\n                            };\n                          },\n                      ),\n                  );\n              }\n            : function () {},\n          ];\n    },\n  }\n: a;");
}
#[test]
fn test_indent_js_tab_width_4_format_1_c8377b93() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\na\n    ? {\n        a: 0\n      }\n    : {\n        a: {\n             a: 0\n           }\n            ? {\n                a: 0\n              }\n            : {\n                y: {\n                    a: 0\n                }\n                    ? {\n                        a: 0\n                    }\n                    : {\n                        a: 0\n                    }\n            }\n      }\n\na\n\t? {\n\t\t\ta: function() {\n\t\t\t\treturn a\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ta: [\n\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\tb: [\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\t\treturn a\n\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t  }\n\t\t\t\t\t: [\n\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t? a(\n\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: []\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t  ):\n\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t: (function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t\t\t\t\t\t  })(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: function() {\n\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t  ];\n\t\t\t}\n\t  }\n    : a;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "aaaaaaaaaaaaaaa\n    ? bbbbbbbbbbbbbbbbbb\n    : ccccccccccccccc\n      ? ddddddddddddddd\n      : eeeeeeeeeeeeeee\n        ? fffffffffffffff\n        : gggggggggggggggg;\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n    ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n        ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n            ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n            : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n        : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n    : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n\na\n    ? {\n          a: 0,\n      }\n    : {\n          a: {\n              a: 0,\n          }\n              ? {\n                    a: 0,\n                }\n              : {\n                    y: {\n                        a: 0,\n                    }\n                        ? {\n                              a: 0,\n                          }\n                        : {\n                              a: 0,\n                          },\n                },\n      };\n\na\n    ? {\n          a: function () {\n              return a\n                  ? {\n                        a: [\n                            a\n                                ? {\n                                      a: 0,\n                                      b: [a ? [0, 1] : []],\n                                  }\n                                : [\n                                      [\n                                          0,\n                                          {\n                                              a: 0,\n                                          },\n                                          a ? 0 : 1,\n                                      ],\n                                      function () {\n                                          return a\n                                              ? {\n                                                    a: 0,\n                                                }\n                                              : [\n                                                    {\n                                                        a: 0,\n                                                    },\n                                                    {},\n                                                ];\n                                      },\n                                  ],\n                        ],\n                    }\n                  : [\n                        a\n                            ? function () {\n                                  a\n                                      ? a(\n                                            a\n                                                ? {\n                                                      a: a({\n                                                          a: 0,\n                                                      }),\n                                                  }\n                                                : [\n                                                      0,\n                                                      a(),\n                                                      a(\n                                                          a(),\n                                                          {\n                                                              a: 0,\n                                                          },\n                                                          a\n                                                              ? a()\n                                                              : a({\n                                                                    a: 0,\n                                                                }),\n                                                      ),\n                                                      a()\n                                                          ? {\n                                                                a: a(),\n                                                                b: [],\n                                                            }\n                                                          : {},\n                                                  ],\n                                        )\n                                      : a(\n                                            a()\n                                                ? {\n                                                      a: 0,\n                                                  }\n                                                : (function (a) {\n                                                      return a()\n                                                          ? [\n                                                                {\n                                                                    a: 0,\n                                                                    b: a(),\n                                                                },\n                                                            ]\n                                                          : a([\n                                                                a\n                                                                    ? {\n                                                                          a: 0,\n                                                                      }\n                                                                    : {},\n                                                                {\n                                                                    a: 0,\n                                                                },\n                                                            ]);\n                                                  })(\n                                                      a\n                                                          ? function (a) {\n                                                                return function () {\n                                                                    return 0;\n                                                                };\n                                                            }\n                                                          : function (a) {\n                                                                return function () {\n                                                                    return 1;\n                                                                };\n                                                            },\n                                                  ),\n                                        );\n                              }\n                            : function () {},\n                    ];\n          },\n      }\n    : a;");
}
#[test]
fn test_indent_js_use_tabstrue_format_1_c8377b93() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\na\n    ? {\n        a: 0\n      }\n    : {\n        a: {\n             a: 0\n           }\n            ? {\n                a: 0\n              }\n            : {\n                y: {\n                    a: 0\n                }\n                    ? {\n                        a: 0\n                    }\n                    : {\n                        a: 0\n                    }\n            }\n      }\n\na\n\t? {\n\t\t\ta: function() {\n\t\t\t\treturn a\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ta: [\n\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\tb: [\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\t\treturn a\n\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t  }\n\t\t\t\t\t: [\n\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t? a(\n\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: []\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t  ):\n\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t: (function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t\t\t\t\t\t  })(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: function() {\n\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t  ];\n\t\t\t}\n\t  }\n    : a;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "aaaaaaaaaaaaaaa\n\t? bbbbbbbbbbbbbbbbbb\n\t: ccccccccccccccc\n\t  ? ddddddddddddddd\n\t  : eeeeeeeeeeeeeee\n\t    ? fffffffffffffff\n\t    : gggggggggggggggg;\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\t? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\t\t? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\t\t\t? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\t\t\t: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\t\t: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\t: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n\na\n\t? {\n\t\t\ta: 0,\n\t  }\n\t: {\n\t\t\ta: {\n\t\t\t\ta: 0,\n\t\t\t}\n\t\t\t\t? {\n\t\t\t\t\t\ta: 0,\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\ty: {\n\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t  },\n\t\t\t\t  },\n\t  };\n\na\n\t? {\n\t\t\ta: function () {\n\t\t\t\treturn a\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ta: [\n\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\tb: [a ? [0, 1] : []],\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\ta ? 0 : 1,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\t\treturn a\n\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ];\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t  ],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t  }\n\t\t\t\t\t: [\n\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t? function () {\n\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t? a(\n\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ],\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: (function (a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: a(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  })(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? function (a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: function (a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: function () {},\n\t\t\t\t\t  ];\n\t\t\t},\n\t  }\n\t: a;");
}
#[test]
fn test_indent_js_format_1_c8377b93() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n?\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n:\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\na\n    ? {\n        a: 0\n      }\n    : {\n        a: {\n             a: 0\n           }\n            ? {\n                a: 0\n              }\n            : {\n                y: {\n                    a: 0\n                }\n                    ? {\n                        a: 0\n                    }\n                    : {\n                        a: 0\n                    }\n            }\n      }\n\na\n\t? {\n\t\t\ta: function() {\n\t\t\t\treturn a\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ta: [\n\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\tb: [\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: []\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\t\treturn a\n\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t  }\n\t\t\t\t\t: [\n\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t? a(\n\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: a(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: []\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t  ):\n\t\t\t\t\t\t\t\t\t\ta(\n\t\t\t\t\t\t\t\t\t\t\ta()\n\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t: (function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tb: a()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: a(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta: 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t\t\t\t\t\t  })(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: function(a) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: function() {\n\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t  ];\n\t\t\t}\n\t  }\n    : a;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "aaaaaaaaaaaaaaa\n  ? bbbbbbbbbbbbbbbbbb\n  : ccccccccccccccc\n    ? ddddddddddddddd\n    : eeeeeeeeeeeeeee\n      ? fffffffffffffff\n      : gggggggggggggggg;\n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n  ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n    ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n      ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n      : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n    : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n  : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n\na\n  ? {\n      a: 0,\n    }\n  : {\n      a: {\n        a: 0,\n      }\n        ? {\n            a: 0,\n          }\n        : {\n            y: {\n              a: 0,\n            }\n              ? {\n                  a: 0,\n                }\n              : {\n                  a: 0,\n                },\n          },\n    };\n\na\n  ? {\n      a: function () {\n        return a\n          ? {\n              a: [\n                a\n                  ? {\n                      a: 0,\n                      b: [a ? [0, 1] : []],\n                    }\n                  : [\n                      [\n                        0,\n                        {\n                          a: 0,\n                        },\n                        a ? 0 : 1,\n                      ],\n                      function () {\n                        return a\n                          ? {\n                              a: 0,\n                            }\n                          : [\n                              {\n                                a: 0,\n                              },\n                              {},\n                            ];\n                      },\n                    ],\n              ],\n            }\n          : [\n              a\n                ? function () {\n                    a\n                      ? a(\n                          a\n                            ? {\n                                a: a({\n                                  a: 0,\n                                }),\n                              }\n                            : [\n                                0,\n                                a(),\n                                a(\n                                  a(),\n                                  {\n                                    a: 0,\n                                  },\n                                  a\n                                    ? a()\n                                    : a({\n                                        a: 0,\n                                      }),\n                                ),\n                                a()\n                                  ? {\n                                      a: a(),\n                                      b: [],\n                                    }\n                                  : {},\n                              ],\n                        )\n                      : a(\n                          a()\n                            ? {\n                                a: 0,\n                              }\n                            : (function (a) {\n                                return a()\n                                  ? [\n                                      {\n                                        a: 0,\n                                        b: a(),\n                                      },\n                                    ]\n                                  : a([\n                                      a\n                                        ? {\n                                            a: 0,\n                                          }\n                                        : {},\n                                      {\n                                        a: 0,\n                                      },\n                                    ]);\n                              })(\n                                a\n                                  ? function (a) {\n                                      return function () {\n                                        return 0;\n                                      };\n                                    }\n                                  : function (a) {\n                                      return function () {\n                                        return 1;\n                                      };\n                                    },\n                              ),\n                        );\n                  }\n                : function () {},\n            ];\n      },\n    }\n  : a;");
}
#[test]
fn test_indent_after_paren_js_experimental_ternariestrue_format_1_26da51a3() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("foo7 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfunction foo10() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo11() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo12() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfoo13 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n  return new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n  throw new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n  void new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n  glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).annularCooeedSplicesWalksWayWay\n    .annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n    .annularCooeedSplicesWalksWayWay();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.()?.()?.();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)()()();\n\nfoo =\n  foo.bar.baz[\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ];\n\nconst decorated = (arg, ignoreRequestError) => {\n  return (\n    typeof arg === \"string\" ||\n    (arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n      ? $delegate(arg, ignoreRequestError)\n      : handleAsyncOperations(arg, ignoreRequestError)\n  ).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder = fn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder =\n  fn[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n  fn?.[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn?.[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "foo7 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfunction foo10() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo11() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo12() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfoo13 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n  return new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n  throw new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n  void new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((\n    glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n  ) ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((\n    glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n  ) ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((\n    glimseGlyphsHazardNoopsTieTie === 0 &&\n      kochabCooieGameOnOboleUnweave === Math.PI\n  ) ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n  (\n    glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n  ) ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol).annularCooeedSplicesWalksWayWay\n  .annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n  .annularCooeedSplicesWalksWayWay();\n\nfoo = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.()?.()?.();\n\nfoo = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n    baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)()()();\n\nfoo =\n  foo.bar.baz[\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond ?\n      baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ];\n\nconst decorated = (arg, ignoreRequestError) => {\n  return (\n    (\n      typeof arg === \"string\" ||\n      (arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n    ) ?\n      $delegate(arg, ignoreRequestError)\n    : handleAsyncOperations(arg, ignoreRequestError)).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nfn(\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nbifornCringerMoshedPerplexSawder = fn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nfn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nbifornCringerMoshedPerplexSawder =\n  fn[\n    (glimseGlyphsHazardNoopsTieTie === 0 ?\n      averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn[\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n  fn?.[\n    (glimseGlyphsHazardNoopsTieTie === 0 ?\n      averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn?.[\n  (glimseGlyphsHazardNoopsTieTie === 0 ?\n    averredBathersBoxroomBuggyNurl\n  : anodyneCondosMalateOverateRetinol\n  ).prop\n];");
}
#[test]
fn test_indent_after_paren_js_tab_width_4_format_1_26da51a3() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("foo7 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfunction foo10() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo11() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo12() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfoo13 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n  return new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n  throw new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n  void new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n  glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).annularCooeedSplicesWalksWayWay\n    .annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n    .annularCooeedSplicesWalksWayWay();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.()?.()?.();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)()()();\n\nfoo =\n  foo.bar.baz[\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ];\n\nconst decorated = (arg, ignoreRequestError) => {\n  return (\n    typeof arg === \"string\" ||\n    (arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n      ? $delegate(arg, ignoreRequestError)\n      : handleAsyncOperations(arg, ignoreRequestError)\n  ).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder = fn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder =\n  fn[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n  fn?.[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn?.[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "foo7 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)[Fooooooooooo];\n\nfunction foo10() {\n    return (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )[Fooooooooooo];\n}\n\nfunction foo11() {\n    throw (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )[Fooooooooooo];\n}\n\nfunction foo12() {\n    void (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )[Fooooooooooo];\n}\n\nfoo13 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n    return (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n    throw (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n    void (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    ).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n    return (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n    throw (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n    void (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n    return (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n    throw (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n    void (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n    yield (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )?.(Fooooooooooo.Fooooooooooo);\n    yield (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )(Fooooooooooo.Fooooooooooo);\n    yield (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    ).Fooooooooooo.Fooooooooooo;\n    yield (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n    return new (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n    throw new (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n    void new (\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    (glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    (glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    (glimseGlyphsHazardNoopsTieTie === 0 &&\n        kochabCooieGameOnOboleUnweave === Math.PI\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n    glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n).annularCooeedSplicesWalksWayWay\n    .annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n    .annularCooeedSplicesWalksWayWay();\n\nfoo = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)?.()?.()?.();\n\nfoo = (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n        ? baaaaaaaaaaaaaaaaaaaaar\n        : baaaaaaaaaaaaaaaaaaaaaz\n)()()();\n\nfoo =\n    foo.bar.baz[\n        coooooooooooooooooooooooooooooooooooooooooooooooooooond\n            ? baaaaaaaaaaaaaaaaaaaaar\n            : baaaaaaaaaaaaaaaaaaaaaz\n    ];\n\nconst decorated = (arg, ignoreRequestError) => {\n    return (\n        typeof arg === \"string\" ||\n        (arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n            ? $delegate(arg, ignoreRequestError)\n            : handleAsyncOperations(arg, ignoreRequestError)\n    ).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).prop,\n);\n\nfn(\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).prop,\n);\n\nbifornCringerMoshedPerplexSawder = fn?.(\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).prop,\n);\n\nfn?.(\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).prop,\n);\n\nbifornCringerMoshedPerplexSawder =\n    fn[\n        (glimseGlyphsHazardNoopsTieTie === 0\n            ? averredBathersBoxroomBuggyNurl\n            : anodyneCondosMalateOverateRetinol\n        ).prop\n    ];\n\nfn[\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n    fn?.[\n        (glimseGlyphsHazardNoopsTieTie === 0\n            ? averredBathersBoxroomBuggyNurl\n            : anodyneCondosMalateOverateRetinol\n        ).prop\n    ];\n\nfn?.[\n    (glimseGlyphsHazardNoopsTieTie === 0\n        ? averredBathersBoxroomBuggyNurl\n        : anodyneCondosMalateOverateRetinol\n    ).prop\n];");
}
#[test]
fn test_indent_after_paren_js_use_tabstrue_format_1_26da51a3() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("foo7 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfunction foo10() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo11() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo12() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfoo13 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n  return new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n  throw new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n  void new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n  glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).annularCooeedSplicesWalksWayWay\n    .annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n    .annularCooeedSplicesWalksWayWay();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.()?.()?.();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)()()();\n\nfoo =\n  foo.bar.baz[\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ];\n\nconst decorated = (arg, ignoreRequestError) => {\n  return (\n    typeof arg === \"string\" ||\n    (arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n      ? $delegate(arg, ignoreRequestError)\n      : handleAsyncOperations(arg, ignoreRequestError)\n  ).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder = fn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder =\n  fn[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n  fn?.[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn?.[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "foo7 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)[Fooooooooooo];\n\nfunction foo10() {\n\treturn (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)[Fooooooooooo];\n}\n\nfunction foo11() {\n\tthrow (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)[Fooooooooooo];\n}\n\nfunction foo12() {\n\tvoid (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)[Fooooooooooo];\n}\n\nfoo13 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n\treturn (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n\tthrow (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n\tvoid (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n\treturn (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n\tthrow (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n\tvoid (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n\treturn (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n\tthrow (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n\tvoid (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n\tyield (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)?.(Fooooooooooo.Fooooooooooo);\n\tyield (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)(Fooooooooooo.Fooooooooooo);\n\tyield (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t).Fooooooooooo.Fooooooooooo;\n\tyield (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n\treturn new (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n\tthrow new (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n\tvoid new (\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n\taskTrovenaBeenaDependsRowans +\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n\taskTrovenaBeenaDependsRowans +\n\t(glimseGlyphsHazardNoopsTieTie === 0 &&\n\tkochabCooieGameOnOboleUnweave === Math.PI\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n\taskTrovenaBeenaDependsRowans +\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n\taskTrovenaBeenaDependsRowans +\n\t(glimseGlyphsHazardNoopsTieTie === 0 &&\n\tkochabCooieGameOnOboleUnweave === Math.PI\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n\taskTrovenaBeenaDependsRowans +\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n\taskTrovenaBeenaDependsRowans +\n\t(glimseGlyphsHazardNoopsTieTie === 0 &&\n\t\tkochabCooieGameOnOboleUnweave === Math.PI\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n\tglimseGlyphsHazardNoopsTieTie === 0 &&\n\tkochabCooieGameOnOboleUnweave === Math.PI\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n).annularCooeedSplicesWalksWayWay\n\t.annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n\t.annularCooeedSplicesWalksWayWay();\n\nfoo = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)?.()?.()?.();\n\nfoo = (\n\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t: baaaaaaaaaaaaaaaaaaaaaz\n)()()();\n\nfoo =\n\tfoo.bar.baz[\n\t\tcoooooooooooooooooooooooooooooooooooooooooooooooooooond\n\t\t\t? baaaaaaaaaaaaaaaaaaaaar\n\t\t\t: baaaaaaaaaaaaaaaaaaaaaz\n\t];\n\nconst decorated = (arg, ignoreRequestError) => {\n\treturn (\n\t\ttypeof arg === \"string\" ||\n\t\t(arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n\t\t\t? $delegate(arg, ignoreRequestError)\n\t\t\t: handleAsyncOperations(arg, ignoreRequestError)\n\t).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).prop,\n);\n\nfn(\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).prop,\n);\n\nbifornCringerMoshedPerplexSawder = fn?.(\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).prop,\n);\n\nfn?.(\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).prop,\n);\n\nbifornCringerMoshedPerplexSawder =\n\tfn[\n\t\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t\t? averredBathersBoxroomBuggyNurl\n\t\t\t: anodyneCondosMalateOverateRetinol\n\t\t).prop\n\t];\n\nfn[\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n\tfn?.[\n\t\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t\t? averredBathersBoxroomBuggyNurl\n\t\t\t: anodyneCondosMalateOverateRetinol\n\t\t).prop\n\t];\n\nfn?.[\n\t(glimseGlyphsHazardNoopsTieTie === 0\n\t\t? averredBathersBoxroomBuggyNurl\n\t\t: anodyneCondosMalateOverateRetinol\n\t).prop\n];");
}
#[test]
fn test_indent_after_paren_js_format_1_26da51a3() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("foo7 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n\nfunction foo10() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo11() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfunction foo12() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo];\n}\n\nfoo13 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n  return (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n  throw (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n  void (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)?.(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz)(Fooooooooooo.Fooooooooooo);\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz).Fooooooooooo.Fooooooooooo;\n  yield (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz)[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n  return new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n  throw new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n  void new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay]);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  ((glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol).Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n\nbifornCringerMoshedPerplexSawder =\n    askTrovenaBeenaDependsRowans +\n    ((glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo));\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n  glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).annularCooeedSplicesWalksWayWay\n    .annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n    .annularCooeedSplicesWalksWayWay();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)?.()?.()?.();\n\nfoo = (coooooooooooooooooooooooooooooooooooooooooooooooooooond\n  ? baaaaaaaaaaaaaaaaaaaaar\n  : baaaaaaaaaaaaaaaaaaaaaz)()()();\n\nfoo =\n  foo.bar.baz[\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ];\n\nconst decorated = (arg, ignoreRequestError) => {\n  return (\n    typeof arg === \"string\" ||\n    (arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n      ? $delegate(arg, ignoreRequestError)\n      : handleAsyncOperations(arg, ignoreRequestError)\n  ).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder = fn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n);\n\nfn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n)\n\nbifornCringerMoshedPerplexSawder =\n  fn[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n  fn?.[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn?.[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "foo7 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)[Fooooooooooo];\n\nfoo8 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo9 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)[Fooooooooooo];\n\nfunction foo10() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )[Fooooooooooo];\n}\n\nfunction foo11() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )[Fooooooooooo];\n}\n\nfunction foo12() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )[Fooooooooooo];\n}\n\nfoo13 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfoo14 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo15 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n).Fooooooooooo.Fooooooooooo;\n\nfunction foo16() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo17() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfunction foo18() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n}\n\nfoo19 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfoo20 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo21 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo22() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo23() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo24() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo25 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)?.(Fooooooooooo.Fooooooooooo);\n\nfoo26 = (condition ? firstValue : secondValue)[SomeType];\n\nconst foo27 = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)?.(Fooooooooooo.Fooooooooooo);\n\nfunction foo28() {\n  return (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo29() {\n  throw (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo30() {\n  void (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )?.(Fooooooooooo.Fooooooooooo);\n}\n\nfunction* foo31() {\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )?.(Fooooooooooo.Fooooooooooo);\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ).Fooooooooooo.Fooooooooooo;\n  yield (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )[Fooooooooooo.Fooooooooooo];\n}\n\nconst foo32 = new (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nfunction foo33() {\n  return new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo34() {\n  throw new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfunction foo35() {\n  void new (\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  )(Fooooooooooo.Fooooooooooo);\n}\n\nfoo36 = new (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)[AnnularCooeedSplicesWalksWayWay];\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).Fooooooooooo.Fooooooooooo;\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n\nbifornCringerMoshedPerplexSawder =\n  askTrovenaBeenaDependsRowans +\n  (glimseGlyphsHazardNoopsTieTie === 0 &&\n    kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol)(Fooooooooooo.Fooooooooooo);\n// TODO(rattrayalex): try to fix this case\n\nbifornCringerMoshedPerplexSawder = (\n  glimseGlyphsHazardNoopsTieTie === 0 &&\n  kochabCooieGameOnOboleUnweave === Math.PI\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n).annularCooeedSplicesWalksWayWay\n  .annularCooeedSplicesWalksWayWay(annularCooeedSplicesWalksWayWay)\n  .annularCooeedSplicesWalksWayWay();\n\nfoo = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)?.()?.()?.();\n\nfoo = (\n  coooooooooooooooooooooooooooooooooooooooooooooooooooond\n    ? baaaaaaaaaaaaaaaaaaaaar\n    : baaaaaaaaaaaaaaaaaaaaaz\n)()()();\n\nfoo =\n  foo.bar.baz[\n    coooooooooooooooooooooooooooooooooooooooooooooooooooond\n      ? baaaaaaaaaaaaaaaaaaaaar\n      : baaaaaaaaaaaaaaaaaaaaaz\n  ];\n\nconst decorated = (arg, ignoreRequestError) => {\n  return (\n    typeof arg === \"string\" ||\n    (arg && arg.valueOf && typeof arg.valueOf() === \"string\")\n      ? $delegate(arg, ignoreRequestError)\n      : handleAsyncOperations(arg, ignoreRequestError)\n  ).foo();\n};\n\nbifornCringerMoshedPerplexSawder = fn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nfn(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nbifornCringerMoshedPerplexSawder = fn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nfn?.(\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop,\n);\n\nbifornCringerMoshedPerplexSawder =\n  fn[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];\n\nbifornCringerMoshedPerplexSawder =\n  fn?.[\n    (glimseGlyphsHazardNoopsTieTie === 0\n      ? averredBathersBoxroomBuggyNurl\n      : anodyneCondosMalateOverateRetinol\n    ).prop\n  ];\n\nfn?.[\n  (glimseGlyphsHazardNoopsTieTie === 0\n    ? averredBathersBoxroomBuggyNurl\n    : anodyneCondosMalateOverateRetinol\n  ).prop\n];");
}
#[test]
fn test_nested_js_experimental_ternariestrue_format_1_851fa149() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("let icecream = what == \"cone\"\n  ? p => !!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`\n  : p => \\`here's your \\${p} \\${what}\\`;\n\nconst value = condition1\n? value1\n: condition2\n    ? value2\n    : condition3\n        ? value3\n        : value4;\n\n\nconst StorybookLoader = ({ match }) => (\n  match.params.storyId === \"button\"\n    ? <ButtonStorybook />\n    : match.params.storyId === \"color\"\n    ? <ColorBook />\n    : match.params.storyId === \"typography\"\n    ? <TypographyBook />\n    : match.params.storyId === \"loading\"\n    ? <LoaderStorybook />\n    : match.params.storyId === \"deal-list\"\n    ? <DealListStory />\n    : (\n      <Message>\n        <Title>{'Missing story book'}</Title>\n        <Content>\n          <BackButton/>\n        </Content>\n      </Message>\n    )\n)\n\nconst message =\n    i % 3 === 0 && i % 5 === 0 ?\n        'fizzbuzz'\n    : i % 3 === 0 ?\n        'fizz'\n    : i % 5 === 0 ?\n        'buzz'\n    :\n        String(i)\n\nconst paymentMessage = state == 'success'\n  ? 'Payment completed successfully'\n\n: state == 'processing'\n  ? 'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 'There was an issue with your CVC number'\n\n: state == 'invalid_expiry'\n  ? 'Expiry must be sometime in the past.'\n\n  : 'There was an issue with the payment.  Please contact support.'\n\nconst paymentMessage2 = state == 'success'\n  ? 1 //'Payment completed successfully'\n\n: state == 'processing'\n  ? 2 //'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 3 //'There was an issue with your CVC number'\n\n: true //state == 'invalid_expiry'\n  ? 4 //'Expiry must be sometime in the past.'\n\n  : 5 // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>\n\t{medals[0].record ? (\n\t\ti18n('Record')\n\t) : medals[0].unique ? (\n\t\ti18n('Unique')\n\t) : medals[0].type === 0 ? (\n\t\ti18n('Silver')\n\t) : medals[0].type === 1 ? (\n\t\ti18n('Gold')\n\t) : medals[0].type === 2 ? (\n\t\ti18n('Platinum')\n\t) : (\n\t\ti18n('Theme')\n\t)}\n</div>\n\na\n    ? literalline\n    : {\n      123: 12\n    }\n    ? line\n    : softline\n\nconst config = {\n    onFailure: onFailure !== undefined ? onFailure :   (\n      error => {\n          notify(\n              typeof error === 'string' ?\n                  error\n              : error.message || 'ra.notification.http_error',\n              'warning',\n              {\n                  _:\n                      typeof error === 'string' ? error\n                      : error && error.message ? error.message\n                      : undefined,\n              }\n          );\n          refresh();\n      }\n    )\n}\n\nshowNotification(\n    typeof error === 'string' ? error :   error.message || body,\n    level || 'warning',\n    {\n        messageArgs,\n        undoable: false,\n    }\n)\n\nconst result = children && !isEmptyChildren(children)\n  ? children\n  : props.match\n    ? component\n      ? React.createElement(component, props)\n      : render\n        ? render(props)\n        : null\n    : null;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "let icecream =\n  what == \"cone\" ?\n    (p) => (!!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`)\n  : (p) => \\`here's your \\${p} \\${what}\\`;\n\nconst value =\n  condition1 ? value1\n  : condition2 ? value2\n  : condition3 ? value3\n  : value4;\n\nconst StorybookLoader = ({ match }) =>\n  match.params.storyId === \"button\" ? <ButtonStorybook />\n  : match.params.storyId === \"color\" ? <ColorBook />\n  : match.params.storyId === \"typography\" ? <TypographyBook />\n  : match.params.storyId === \"loading\" ? <LoaderStorybook />\n  : match.params.storyId === \"deal-list\" ? <DealListStory />\n  : <Message>\n      <Title>{\"Missing story book\"}</Title>\n      <Content>\n        <BackButton />\n      </Content>\n    </Message>;\n\nconst message =\n  i % 3 === 0 && i % 5 === 0 ? \"fizzbuzz\"\n  : i % 3 === 0 ? \"fizz\"\n  : i % 5 === 0 ? \"buzz\"\n  : String(i);\n\nconst paymentMessage =\n  state == \"success\" ? \"Payment completed successfully\"\n  : state == \"processing\" ? \"Payment processing\"\n  : state == \"invalid_cvc\" ? \"There was an issue with your CVC number\"\n  : state == \"invalid_expiry\" ? \"Expiry must be sometime in the past.\"\n  : \"There was an issue with the payment.  Please contact support.\";\n\nconst paymentMessage2 =\n  state == \"success\" ?\n    1 //'Payment completed successfully'\n  : state == \"processing\" ?\n    2 //'Payment processing'\n  : state == \"invalid_cvc\" ?\n    3 //'There was an issue with your CVC number'\n  : (\n    true //state == 'invalid_expiry'\n  ) ?\n    4 //'Expiry must be sometime in the past.'\n  : 5; // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = (\n  <div\n    className={\n      \"match-achievement-medal-type type\" +\n      (medals[0].record ? \"-record\"\n      : medals[0].unique ? \"-unique\"\n      : medals[0].type)\n    }\n  >\n    {medals[0].record ?\n      i18n(\"Record\")\n    : medals[0].unique ?\n      i18n(\"Unique\")\n    : medals[0].type === 0 ?\n      i18n(\"Silver\")\n    : medals[0].type === 1 ?\n      i18n(\"Gold\")\n    : medals[0].type === 2 ?\n      i18n(\"Platinum\")\n    : i18n(\"Theme\")}\n  </div>\n);\n\na ? literalline\n: (\n  {\n    123: 12,\n  }\n) ?\n  line\n: softline;\n\nconst config = {\n  onFailure:\n    onFailure !== undefined ? onFailure : (\n      (error) => {\n        notify(\n          typeof error === \"string\" ? error : (\n            error.message || \"ra.notification.http_error\"\n          ),\n          \"warning\",\n          {\n            _:\n              typeof error === \"string\" ? error\n              : error && error.message ? error.message\n              : undefined,\n          },\n        );\n        refresh();\n      }\n    ),\n};\n\nshowNotification(\n  typeof error === \"string\" ? error : error.message || body,\n  level || \"warning\",\n  {\n    messageArgs,\n    undoable: false,\n  },\n);\n\nconst result =\n  children && !isEmptyChildren(children) ? children\n  : props.match ?\n    component ? React.createElement(component, props)\n    : render ? render(props)\n    : null\n  : null;");
}
#[test]
fn test_nested_js_tab_width_4_format_1_851fa149() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("let icecream = what == \"cone\"\n  ? p => !!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`\n  : p => \\`here's your \\${p} \\${what}\\`;\n\nconst value = condition1\n? value1\n: condition2\n    ? value2\n    : condition3\n        ? value3\n        : value4;\n\n\nconst StorybookLoader = ({ match }) => (\n  match.params.storyId === \"button\"\n    ? <ButtonStorybook />\n    : match.params.storyId === \"color\"\n    ? <ColorBook />\n    : match.params.storyId === \"typography\"\n    ? <TypographyBook />\n    : match.params.storyId === \"loading\"\n    ? <LoaderStorybook />\n    : match.params.storyId === \"deal-list\"\n    ? <DealListStory />\n    : (\n      <Message>\n        <Title>{'Missing story book'}</Title>\n        <Content>\n          <BackButton/>\n        </Content>\n      </Message>\n    )\n)\n\nconst message =\n    i % 3 === 0 && i % 5 === 0 ?\n        'fizzbuzz'\n    : i % 3 === 0 ?\n        'fizz'\n    : i % 5 === 0 ?\n        'buzz'\n    :\n        String(i)\n\nconst paymentMessage = state == 'success'\n  ? 'Payment completed successfully'\n\n: state == 'processing'\n  ? 'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 'There was an issue with your CVC number'\n\n: state == 'invalid_expiry'\n  ? 'Expiry must be sometime in the past.'\n\n  : 'There was an issue with the payment.  Please contact support.'\n\nconst paymentMessage2 = state == 'success'\n  ? 1 //'Payment completed successfully'\n\n: state == 'processing'\n  ? 2 //'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 3 //'There was an issue with your CVC number'\n\n: true //state == 'invalid_expiry'\n  ? 4 //'Expiry must be sometime in the past.'\n\n  : 5 // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>\n\t{medals[0].record ? (\n\t\ti18n('Record')\n\t) : medals[0].unique ? (\n\t\ti18n('Unique')\n\t) : medals[0].type === 0 ? (\n\t\ti18n('Silver')\n\t) : medals[0].type === 1 ? (\n\t\ti18n('Gold')\n\t) : medals[0].type === 2 ? (\n\t\ti18n('Platinum')\n\t) : (\n\t\ti18n('Theme')\n\t)}\n</div>\n\na\n    ? literalline\n    : {\n      123: 12\n    }\n    ? line\n    : softline\n\nconst config = {\n    onFailure: onFailure !== undefined ? onFailure :   (\n      error => {\n          notify(\n              typeof error === 'string' ?\n                  error\n              : error.message || 'ra.notification.http_error',\n              'warning',\n              {\n                  _:\n                      typeof error === 'string' ? error\n                      : error && error.message ? error.message\n                      : undefined,\n              }\n          );\n          refresh();\n      }\n    )\n}\n\nshowNotification(\n    typeof error === 'string' ? error :   error.message || body,\n    level || 'warning',\n    {\n        messageArgs,\n        undoable: false,\n    }\n)\n\nconst result = children && !isEmptyChildren(children)\n  ? children\n  : props.match\n    ? component\n      ? React.createElement(component, props)\n      : render\n        ? render(props)\n        : null\n    : null;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "let icecream =\n    what == \"cone\"\n        ? (p) => (!!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`)\n        : (p) => \\`here's your \\${p} \\${what}\\`;\n\nconst value = condition1\n    ? value1\n    : condition2\n      ? value2\n      : condition3\n        ? value3\n        : value4;\n\nconst StorybookLoader = ({ match }) =>\n    match.params.storyId === \"button\" ? (\n        <ButtonStorybook />\n    ) : match.params.storyId === \"color\" ? (\n        <ColorBook />\n    ) : match.params.storyId === \"typography\" ? (\n        <TypographyBook />\n    ) : match.params.storyId === \"loading\" ? (\n        <LoaderStorybook />\n    ) : match.params.storyId === \"deal-list\" ? (\n        <DealListStory />\n    ) : (\n        <Message>\n            <Title>{\"Missing story book\"}</Title>\n            <Content>\n                <BackButton />\n            </Content>\n        </Message>\n    );\n\nconst message =\n    i % 3 === 0 && i % 5 === 0\n        ? \"fizzbuzz\"\n        : i % 3 === 0\n          ? \"fizz\"\n          : i % 5 === 0\n            ? \"buzz\"\n            : String(i);\n\nconst paymentMessage =\n    state == \"success\"\n        ? \"Payment completed successfully\"\n        : state == \"processing\"\n          ? \"Payment processing\"\n          : state == \"invalid_cvc\"\n            ? \"There was an issue with your CVC number\"\n            : state == \"invalid_expiry\"\n              ? \"Expiry must be sometime in the past.\"\n              : \"There was an issue with the payment.  Please contact support.\";\n\nconst paymentMessage2 =\n    state == \"success\"\n        ? 1 //'Payment completed successfully'\n        : state == \"processing\"\n          ? 2 //'Payment processing'\n          : state == \"invalid_cvc\"\n            ? 3 //'There was an issue with your CVC number'\n            : true //state == 'invalid_expiry'\n              ? 4 //'Expiry must be sometime in the past.'\n              : 5; // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = (\n    <div\n        className={\n            \"match-achievement-medal-type type\" +\n            (medals[0].record\n                ? \"-record\"\n                : medals[0].unique\n                  ? \"-unique\"\n                  : medals[0].type)\n        }\n    >\n        {medals[0].record\n            ? i18n(\"Record\")\n            : medals[0].unique\n              ? i18n(\"Unique\")\n              : medals[0].type === 0\n                ? i18n(\"Silver\")\n                : medals[0].type === 1\n                  ? i18n(\"Gold\")\n                  : medals[0].type === 2\n                    ? i18n(\"Platinum\")\n                    : i18n(\"Theme\")}\n    </div>\n);\n\na\n    ? literalline\n    : {\n            123: 12,\n        }\n      ? line\n      : softline;\n\nconst config = {\n    onFailure:\n        onFailure !== undefined\n            ? onFailure\n            : (error) => {\n                  notify(\n                      typeof error === \"string\"\n                          ? error\n                          : error.message || \"ra.notification.http_error\",\n                      \"warning\",\n                      {\n                          _:\n                              typeof error === \"string\"\n                                  ? error\n                                  : error && error.message\n                                    ? error.message\n                                    : undefined,\n                      },\n                  );\n                  refresh();\n              },\n};\n\nshowNotification(\n    typeof error === \"string\" ? error : error.message || body,\n    level || \"warning\",\n    {\n        messageArgs,\n        undoable: false,\n    },\n);\n\nconst result =\n    children && !isEmptyChildren(children)\n        ? children\n        : props.match\n          ? component\n              ? React.createElement(component, props)\n              : render\n                ? render(props)\n                : null\n          : null;");
}
#[test]
fn test_nested_js_use_tabstrue_format_1_851fa149() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("let icecream = what == \"cone\"\n  ? p => !!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`\n  : p => \\`here's your \\${p} \\${what}\\`;\n\nconst value = condition1\n? value1\n: condition2\n    ? value2\n    : condition3\n        ? value3\n        : value4;\n\n\nconst StorybookLoader = ({ match }) => (\n  match.params.storyId === \"button\"\n    ? <ButtonStorybook />\n    : match.params.storyId === \"color\"\n    ? <ColorBook />\n    : match.params.storyId === \"typography\"\n    ? <TypographyBook />\n    : match.params.storyId === \"loading\"\n    ? <LoaderStorybook />\n    : match.params.storyId === \"deal-list\"\n    ? <DealListStory />\n    : (\n      <Message>\n        <Title>{'Missing story book'}</Title>\n        <Content>\n          <BackButton/>\n        </Content>\n      </Message>\n    )\n)\n\nconst message =\n    i % 3 === 0 && i % 5 === 0 ?\n        'fizzbuzz'\n    : i % 3 === 0 ?\n        'fizz'\n    : i % 5 === 0 ?\n        'buzz'\n    :\n        String(i)\n\nconst paymentMessage = state == 'success'\n  ? 'Payment completed successfully'\n\n: state == 'processing'\n  ? 'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 'There was an issue with your CVC number'\n\n: state == 'invalid_expiry'\n  ? 'Expiry must be sometime in the past.'\n\n  : 'There was an issue with the payment.  Please contact support.'\n\nconst paymentMessage2 = state == 'success'\n  ? 1 //'Payment completed successfully'\n\n: state == 'processing'\n  ? 2 //'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 3 //'There was an issue with your CVC number'\n\n: true //state == 'invalid_expiry'\n  ? 4 //'Expiry must be sometime in the past.'\n\n  : 5 // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>\n\t{medals[0].record ? (\n\t\ti18n('Record')\n\t) : medals[0].unique ? (\n\t\ti18n('Unique')\n\t) : medals[0].type === 0 ? (\n\t\ti18n('Silver')\n\t) : medals[0].type === 1 ? (\n\t\ti18n('Gold')\n\t) : medals[0].type === 2 ? (\n\t\ti18n('Platinum')\n\t) : (\n\t\ti18n('Theme')\n\t)}\n</div>\n\na\n    ? literalline\n    : {\n      123: 12\n    }\n    ? line\n    : softline\n\nconst config = {\n    onFailure: onFailure !== undefined ? onFailure :   (\n      error => {\n          notify(\n              typeof error === 'string' ?\n                  error\n              : error.message || 'ra.notification.http_error',\n              'warning',\n              {\n                  _:\n                      typeof error === 'string' ? error\n                      : error && error.message ? error.message\n                      : undefined,\n              }\n          );\n          refresh();\n      }\n    )\n}\n\nshowNotification(\n    typeof error === 'string' ? error :   error.message || body,\n    level || 'warning',\n    {\n        messageArgs,\n        undoable: false,\n    }\n)\n\nconst result = children && !isEmptyChildren(children)\n  ? children\n  : props.match\n    ? component\n      ? React.createElement(component, props)\n      : render\n        ? render(props)\n        : null\n    : null;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "let icecream =\n\twhat == \"cone\"\n\t\t? (p) => (!!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`)\n\t\t: (p) => \\`here's your \\${p} \\${what}\\`;\n\nconst value = condition1\n\t? value1\n\t: condition2\n\t  ? value2\n\t  : condition3\n\t    ? value3\n\t    : value4;\n\nconst StorybookLoader = ({ match }) =>\n\tmatch.params.storyId === \"button\" ? (\n\t\t<ButtonStorybook />\n\t) : match.params.storyId === \"color\" ? (\n\t\t<ColorBook />\n\t) : match.params.storyId === \"typography\" ? (\n\t\t<TypographyBook />\n\t) : match.params.storyId === \"loading\" ? (\n\t\t<LoaderStorybook />\n\t) : match.params.storyId === \"deal-list\" ? (\n\t\t<DealListStory />\n\t) : (\n\t\t<Message>\n\t\t\t<Title>{\"Missing story book\"}</Title>\n\t\t\t<Content>\n\t\t\t\t<BackButton />\n\t\t\t</Content>\n\t\t</Message>\n\t);\n\nconst message =\n\ti % 3 === 0 && i % 5 === 0\n\t\t? \"fizzbuzz\"\n\t\t: i % 3 === 0\n\t\t  ? \"fizz\"\n\t\t  : i % 5 === 0\n\t\t    ? \"buzz\"\n\t\t    : String(i);\n\nconst paymentMessage =\n\tstate == \"success\"\n\t\t? \"Payment completed successfully\"\n\t\t: state == \"processing\"\n\t\t  ? \"Payment processing\"\n\t\t  : state == \"invalid_cvc\"\n\t\t    ? \"There was an issue with your CVC number\"\n\t\t    : state == \"invalid_expiry\"\n\t\t      ? \"Expiry must be sometime in the past.\"\n\t\t      : \"There was an issue with the payment.  Please contact support.\";\n\nconst paymentMessage2 =\n\tstate == \"success\"\n\t\t? 1 //'Payment completed successfully'\n\t\t: state == \"processing\"\n\t\t  ? 2 //'Payment processing'\n\t\t  : state == \"invalid_cvc\"\n\t\t    ? 3 //'There was an issue with your CVC number'\n\t\t    : true //state == 'invalid_expiry'\n\t\t      ? 4 //'Expiry must be sometime in the past.'\n\t\t      : 5; // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = (\n\t<div\n\t\tclassName={\n\t\t\t\"match-achievement-medal-type type\" +\n\t\t\t(medals[0].record\n\t\t\t\t? \"-record\"\n\t\t\t\t: medals[0].unique\n\t\t\t\t  ? \"-unique\"\n\t\t\t\t  : medals[0].type)\n\t\t}\n\t>\n\t\t{medals[0].record\n\t\t\t? i18n(\"Record\")\n\t\t\t: medals[0].unique\n\t\t\t  ? i18n(\"Unique\")\n\t\t\t  : medals[0].type === 0\n\t\t\t    ? i18n(\"Silver\")\n\t\t\t    : medals[0].type === 1\n\t\t\t      ? i18n(\"Gold\")\n\t\t\t      : medals[0].type === 2\n\t\t\t        ? i18n(\"Platinum\")\n\t\t\t        : i18n(\"Theme\")}\n\t</div>\n);\n\na\n\t? literalline\n\t: {\n\t\t\t\t123: 12,\n\t    }\n\t  ? line\n\t  : softline;\n\nconst config = {\n\tonFailure:\n\t\tonFailure !== undefined\n\t\t\t? onFailure\n\t\t\t: (error) => {\n\t\t\t\t\tnotify(\n\t\t\t\t\t\ttypeof error === \"string\"\n\t\t\t\t\t\t\t? error\n\t\t\t\t\t\t\t: error.message || \"ra.notification.http_error\",\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_:\n\t\t\t\t\t\t\t\ttypeof error === \"string\"\n\t\t\t\t\t\t\t\t\t? error\n\t\t\t\t\t\t\t\t\t: error && error.message\n\t\t\t\t\t\t\t\t\t  ? error.message\n\t\t\t\t\t\t\t\t\t  : undefined,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\trefresh();\n\t\t\t  },\n};\n\nshowNotification(\n\ttypeof error === \"string\" ? error : error.message || body,\n\tlevel || \"warning\",\n\t{\n\t\tmessageArgs,\n\t\tundoable: false,\n\t},\n);\n\nconst result =\n\tchildren && !isEmptyChildren(children)\n\t\t? children\n\t\t: props.match\n\t\t  ? component\n\t\t\t\t? React.createElement(component, props)\n\t\t\t\t: render\n\t\t\t\t  ? render(props)\n\t\t\t\t  : null\n\t\t  : null;");
}
#[test]
fn test_nested_js_format_1_851fa149() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("let icecream = what == \"cone\"\n  ? p => !!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`\n  : p => \\`here's your \\${p} \\${what}\\`;\n\nconst value = condition1\n? value1\n: condition2\n    ? value2\n    : condition3\n        ? value3\n        : value4;\n\n\nconst StorybookLoader = ({ match }) => (\n  match.params.storyId === \"button\"\n    ? <ButtonStorybook />\n    : match.params.storyId === \"color\"\n    ? <ColorBook />\n    : match.params.storyId === \"typography\"\n    ? <TypographyBook />\n    : match.params.storyId === \"loading\"\n    ? <LoaderStorybook />\n    : match.params.storyId === \"deal-list\"\n    ? <DealListStory />\n    : (\n      <Message>\n        <Title>{'Missing story book'}</Title>\n        <Content>\n          <BackButton/>\n        </Content>\n      </Message>\n    )\n)\n\nconst message =\n    i % 3 === 0 && i % 5 === 0 ?\n        'fizzbuzz'\n    : i % 3 === 0 ?\n        'fizz'\n    : i % 5 === 0 ?\n        'buzz'\n    :\n        String(i)\n\nconst paymentMessage = state == 'success'\n  ? 'Payment completed successfully'\n\n: state == 'processing'\n  ? 'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 'There was an issue with your CVC number'\n\n: state == 'invalid_expiry'\n  ? 'Expiry must be sometime in the past.'\n\n  : 'There was an issue with the payment.  Please contact support.'\n\nconst paymentMessage2 = state == 'success'\n  ? 1 //'Payment completed successfully'\n\n: state == 'processing'\n  ? 2 //'Payment processing'\n\n: state == 'invalid_cvc'\n  ? 3 //'There was an issue with your CVC number'\n\n: true //state == 'invalid_expiry'\n  ? 4 //'Expiry must be sometime in the past.'\n\n  : 5 // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>\n\t{medals[0].record ? (\n\t\ti18n('Record')\n\t) : medals[0].unique ? (\n\t\ti18n('Unique')\n\t) : medals[0].type === 0 ? (\n\t\ti18n('Silver')\n\t) : medals[0].type === 1 ? (\n\t\ti18n('Gold')\n\t) : medals[0].type === 2 ? (\n\t\ti18n('Platinum')\n\t) : (\n\t\ti18n('Theme')\n\t)}\n</div>\n\na\n    ? literalline\n    : {\n      123: 12\n    }\n    ? line\n    : softline\n\nconst config = {\n    onFailure: onFailure !== undefined ? onFailure :   (\n      error => {\n          notify(\n              typeof error === 'string' ?\n                  error\n              : error.message || 'ra.notification.http_error',\n              'warning',\n              {\n                  _:\n                      typeof error === 'string' ? error\n                      : error && error.message ? error.message\n                      : undefined,\n              }\n          );\n          refresh();\n      }\n    )\n}\n\nshowNotification(\n    typeof error === 'string' ? error :   error.message || body,\n    level || 'warning',\n    {\n        messageArgs,\n        undoable: false,\n    }\n)\n\nconst result = children && !isEmptyChildren(children)\n  ? children\n  : props.match\n    ? component\n      ? React.createElement(component, props)\n      : render\n        ? render(props)\n        : null\n    : null;") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "let icecream =\n  what == \"cone\"\n    ? (p) => (!!p ? \\`here's your \\${p} cone\\` : \\`just the empty cone for you\\`)\n    : (p) => \\`here's your \\${p} \\${what}\\`;\n\nconst value = condition1\n  ? value1\n  : condition2\n    ? value2\n    : condition3\n      ? value3\n      : value4;\n\nconst StorybookLoader = ({ match }) =>\n  match.params.storyId === \"button\" ? (\n    <ButtonStorybook />\n  ) : match.params.storyId === \"color\" ? (\n    <ColorBook />\n  ) : match.params.storyId === \"typography\" ? (\n    <TypographyBook />\n  ) : match.params.storyId === \"loading\" ? (\n    <LoaderStorybook />\n  ) : match.params.storyId === \"deal-list\" ? (\n    <DealListStory />\n  ) : (\n    <Message>\n      <Title>{\"Missing story book\"}</Title>\n      <Content>\n        <BackButton />\n      </Content>\n    </Message>\n  );\n\nconst message =\n  i % 3 === 0 && i % 5 === 0\n    ? \"fizzbuzz\"\n    : i % 3 === 0\n      ? \"fizz\"\n      : i % 5 === 0\n        ? \"buzz\"\n        : String(i);\n\nconst paymentMessage =\n  state == \"success\"\n    ? \"Payment completed successfully\"\n    : state == \"processing\"\n      ? \"Payment processing\"\n      : state == \"invalid_cvc\"\n        ? \"There was an issue with your CVC number\"\n        : state == \"invalid_expiry\"\n          ? \"Expiry must be sometime in the past.\"\n          : \"There was an issue with the payment.  Please contact support.\";\n\nconst paymentMessage2 =\n  state == \"success\"\n    ? 1 //'Payment completed successfully'\n    : state == \"processing\"\n      ? 2 //'Payment processing'\n      : state == \"invalid_cvc\"\n        ? 3 //'There was an issue with your CVC number'\n        : true //state == 'invalid_expiry'\n          ? 4 //'Expiry must be sometime in the past.'\n          : 5; // 'There was an issue with the payment.  Please contact support.'\n\nconst foo = (\n  <div\n    className={\n      \"match-achievement-medal-type type\" +\n      (medals[0].record\n        ? \"-record\"\n        : medals[0].unique\n          ? \"-unique\"\n          : medals[0].type)\n    }\n  >\n    {medals[0].record\n      ? i18n(\"Record\")\n      : medals[0].unique\n        ? i18n(\"Unique\")\n        : medals[0].type === 0\n          ? i18n(\"Silver\")\n          : medals[0].type === 1\n            ? i18n(\"Gold\")\n            : medals[0].type === 2\n              ? i18n(\"Platinum\")\n              : i18n(\"Theme\")}\n  </div>\n);\n\na\n  ? literalline\n  : {\n        123: 12,\n      }\n    ? line\n    : softline;\n\nconst config = {\n  onFailure:\n    onFailure !== undefined\n      ? onFailure\n      : (error) => {\n          notify(\n            typeof error === \"string\"\n              ? error\n              : error.message || \"ra.notification.http_error\",\n            \"warning\",\n            {\n              _:\n                typeof error === \"string\"\n                  ? error\n                  : error && error.message\n                    ? error.message\n                    : undefined,\n            },\n          );\n          refresh();\n        },\n};\n\nshowNotification(\n  typeof error === \"string\" ? error : error.message || body,\n  level || \"warning\",\n  {\n    messageArgs,\n    undoable: false,\n  },\n);\n\nconst result =\n  children && !isEmptyChildren(children)\n    ? children\n    : props.match\n      ? component\n        ? React.createElement(component, props)\n        : render\n          ? render(props)\n          : null\n      : null;");
}
#[test]
fn test_nested_in_condition_js_experimental_ternariestrue_format_1_5da827b7() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("$var = ($number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20)\n? kochabCooieGameOnOboleUnweave\n: annularCooeedSplicesWalksWayWay)\n  ? anodyneCondosMalateOverateRetinol\n  : averredBathersBoxroomBuggyNurl;\n\nconst value = (bifornCringerMoshedPerplexSawder\n? askTrovenaBeenaDependsRowans\n: glimseGlyphsHazardNoopsTieTie)\n  ? true\n    ? true\n    : false\n  : true\n  ? true\n  : false;\n\n(bifornCringerMoshedPerplexSawder ? (\n  askTrovenaBeenaDependsRowans\n) : (\n  glimseGlyphsHazardNoopsTieTie\n)) ? (\n  <Element>\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element>\n) : (\n  <Element2>\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element2>\n);") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "$var =\n  (\n    $number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20) ?\n      kochabCooieGameOnOboleUnweave\n    : annularCooeedSplicesWalksWayWay\n  ) ?\n    anodyneCondosMalateOverateRetinol\n  : averredBathersBoxroomBuggyNurl;\n\nconst value =\n  (\n    bifornCringerMoshedPerplexSawder ? askTrovenaBeenaDependsRowans\n    : glimseGlyphsHazardNoopsTieTie\n  ) ?\n    true ? true\n    : false\n  : true ? true\n  : false;\n\n(\n  bifornCringerMoshedPerplexSawder ? askTrovenaBeenaDependsRowans\n  : glimseGlyphsHazardNoopsTieTie\n) ?\n  <Element>\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element>\n: <Element2>\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element2>;");
}
#[test]
fn test_nested_in_condition_js_tab_width_4_format_1_5da827b7() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("$var = ($number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20)\n? kochabCooieGameOnOboleUnweave\n: annularCooeedSplicesWalksWayWay)\n  ? anodyneCondosMalateOverateRetinol\n  : averredBathersBoxroomBuggyNurl;\n\nconst value = (bifornCringerMoshedPerplexSawder\n? askTrovenaBeenaDependsRowans\n: glimseGlyphsHazardNoopsTieTie)\n  ? true\n    ? true\n    : false\n  : true\n  ? true\n  : false;\n\n(bifornCringerMoshedPerplexSawder ? (\n  askTrovenaBeenaDependsRowans\n) : (\n  glimseGlyphsHazardNoopsTieTie\n)) ? (\n  <Element>\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element>\n) : (\n  <Element2>\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element2>\n);") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "$var = (\n    $number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20)\n        ? kochabCooieGameOnOboleUnweave\n        : annularCooeedSplicesWalksWayWay\n)\n    ? anodyneCondosMalateOverateRetinol\n    : averredBathersBoxroomBuggyNurl;\n\nconst value = (\n    bifornCringerMoshedPerplexSawder\n        ? askTrovenaBeenaDependsRowans\n        : glimseGlyphsHazardNoopsTieTie\n)\n    ? true\n        ? true\n        : false\n    : true\n      ? true\n      : false;\n\n(\n    bifornCringerMoshedPerplexSawder\n        ? askTrovenaBeenaDependsRowans\n        : glimseGlyphsHazardNoopsTieTie\n) ? (\n    <Element>\n        <Sub />\n        <Sub />\n        <Sub />\n        <Sub />\n        <Sub />\n        <Sub />\n    </Element>\n) : (\n    <Element2>\n        <Sub />\n        <Sub />\n        <Sub />\n    </Element2>\n);");
}
#[test]
fn test_nested_in_condition_js_use_tabstrue_format_1_5da827b7() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("$var = ($number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20)\n? kochabCooieGameOnOboleUnweave\n: annularCooeedSplicesWalksWayWay)\n  ? anodyneCondosMalateOverateRetinol\n  : averredBathersBoxroomBuggyNurl;\n\nconst value = (bifornCringerMoshedPerplexSawder\n? askTrovenaBeenaDependsRowans\n: glimseGlyphsHazardNoopsTieTie)\n  ? true\n    ? true\n    : false\n  : true\n  ? true\n  : false;\n\n(bifornCringerMoshedPerplexSawder ? (\n  askTrovenaBeenaDependsRowans\n) : (\n  glimseGlyphsHazardNoopsTieTie\n)) ? (\n  <Element>\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element>\n) : (\n  <Element2>\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element2>\n);") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "$var = (\n\t$number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20)\n\t\t? kochabCooieGameOnOboleUnweave\n\t\t: annularCooeedSplicesWalksWayWay\n)\n\t? anodyneCondosMalateOverateRetinol\n\t: averredBathersBoxroomBuggyNurl;\n\nconst value = (\n\tbifornCringerMoshedPerplexSawder\n\t\t? askTrovenaBeenaDependsRowans\n\t\t: glimseGlyphsHazardNoopsTieTie\n)\n\t? true\n\t\t? true\n\t\t: false\n\t: true\n\t  ? true\n\t  : false;\n\n(\n\tbifornCringerMoshedPerplexSawder\n\t\t? askTrovenaBeenaDependsRowans\n\t\t: glimseGlyphsHazardNoopsTieTie\n) ? (\n\t<Element>\n\t\t<Sub />\n\t\t<Sub />\n\t\t<Sub />\n\t\t<Sub />\n\t\t<Sub />\n\t\t<Sub />\n\t</Element>\n) : (\n\t<Element2>\n\t\t<Sub />\n\t\t<Sub />\n\t\t<Sub />\n\t</Element2>\n);");
}
#[test]
fn test_nested_in_condition_js_format_1_5da827b7() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("$var = ($number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20)\n? kochabCooieGameOnOboleUnweave\n: annularCooeedSplicesWalksWayWay)\n  ? anodyneCondosMalateOverateRetinol\n  : averredBathersBoxroomBuggyNurl;\n\nconst value = (bifornCringerMoshedPerplexSawder\n? askTrovenaBeenaDependsRowans\n: glimseGlyphsHazardNoopsTieTie)\n  ? true\n    ? true\n    : false\n  : true\n  ? true\n  : false;\n\n(bifornCringerMoshedPerplexSawder ? (\n  askTrovenaBeenaDependsRowans\n) : (\n  glimseGlyphsHazardNoopsTieTie\n)) ? (\n  <Element>\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element>\n) : (\n  <Element2>\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element2>\n);") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "$var = (\n  $number % 10 >= 2 && ($number % 100 < 10 || $number % 100 >= 20)\n    ? kochabCooieGameOnOboleUnweave\n    : annularCooeedSplicesWalksWayWay\n)\n  ? anodyneCondosMalateOverateRetinol\n  : averredBathersBoxroomBuggyNurl;\n\nconst value = (\n  bifornCringerMoshedPerplexSawder\n    ? askTrovenaBeenaDependsRowans\n    : glimseGlyphsHazardNoopsTieTie\n)\n  ? true\n    ? true\n    : false\n  : true\n    ? true\n    : false;\n\n(\n  bifornCringerMoshedPerplexSawder\n    ? askTrovenaBeenaDependsRowans\n    : glimseGlyphsHazardNoopsTieTie\n) ? (\n  <Element>\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element>\n) : (\n  <Element2>\n    <Sub />\n    <Sub />\n    <Sub />\n  </Element2>\n);");
}
#[test]
fn test_parenthesis_js_experimental_ternariestrue_format_1_7d14d1f6() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("debug ? this.state.isVisible ? \"partially visible\" : \"hidden\" : null;\ndebug ? this.state.isVisible && somethingComplex ? \"partially visible\" : \"hidden\" : null;\n\na => a ? () => {a} : () => {a}\na => a ? a : a\na => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "debug ?\n  this.state.isVisible ?\n    \"partially visible\"\n  : \"hidden\"\n: null;\ndebug ?\n  this.state.isVisible && somethingComplex ?\n    \"partially visible\"\n  : \"hidden\"\n: null;\n\n(a) =>\n  a ?\n    () => {\n      a;\n    }\n  : () => {\n      a;\n    };\n(a) => (a ? a : a);\n(a) =>\n  a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;");
}
#[test]
fn test_parenthesis_js_tab_width_4_format_1_7d14d1f6() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("debug ? this.state.isVisible ? \"partially visible\" : \"hidden\" : null;\ndebug ? this.state.isVisible && somethingComplex ? \"partially visible\" : \"hidden\" : null;\n\na => a ? () => {a} : () => {a}\na => a ? a : a\na => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "debug ? (this.state.isVisible ? \"partially visible\" : \"hidden\") : null;\ndebug\n    ? this.state.isVisible && somethingComplex\n        ? \"partially visible\"\n        : \"hidden\"\n    : null;\n\n(a) =>\n    a\n        ? () => {\n              a;\n          }\n        : () => {\n              a;\n          };\n(a) => (a ? a : a);\n(a) =>\n    a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;");
}
#[test]
fn test_parenthesis_js_use_tabstrue_format_1_7d14d1f6() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("debug ? this.state.isVisible ? \"partially visible\" : \"hidden\" : null;\ndebug ? this.state.isVisible && somethingComplex ? \"partially visible\" : \"hidden\" : null;\n\na => a ? () => {a} : () => {a}\na => a ? a : a\na => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "debug ? (this.state.isVisible ? \"partially visible\" : \"hidden\") : null;\ndebug\n\t? this.state.isVisible && somethingComplex\n\t\t? \"partially visible\"\n\t\t: \"hidden\"\n\t: null;\n\n(a) =>\n\ta\n\t\t? () => {\n\t\t\t\ta;\n\t\t  }\n\t\t: () => {\n\t\t\t\ta;\n\t\t  };\n(a) => (a ? a : a);\n(a) =>\n\ta ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;");
}
#[test]
fn test_parenthesis_js_format_1_7d14d1f6() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("debug ? this.state.isVisible ? \"partially visible\" : \"hidden\" : null;\ndebug ? this.state.isVisible && somethingComplex ? \"partially visible\" : \"hidden\" : null;\n\na => a ? () => {a} : () => {a}\na => a ? a : a\na => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "debug ? (this.state.isVisible ? \"partially visible\" : \"hidden\") : null;\ndebug\n  ? this.state.isVisible && somethingComplex\n    ? \"partially visible\"\n    : \"hidden\"\n  : null;\n\n(a) =>\n  a\n    ? () => {\n        a;\n      }\n    : () => {\n        a;\n      };\n(a) => (a ? a : a);\n(a) =>\n  a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;");
}
#[test]
fn test_test_js_experimental_ternariestrue_format_1_6093e2b4() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .experimental_ternaries(true)
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const obj0 = conditionIsTruthy ? shortThing : otherShortThing\n\nconst obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }\n\nconst obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }\n\nconst obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const obj0 = conditionIsTruthy ? shortThing : otherShortThing;\n\nconst obj1 =\n  conditionIsTruthy ?\n    { some: \"long\", object: \"with\", lots: \"of\", stuff }\n  : shortThing;\n\nconst obj2 =\n  conditionIsTruthy ? shortThing : (\n    { some: \"long\", object: \"with\", lots: \"of\", stuff }\n  );\n\nconst obj3 =\n  conditionIsTruthy ?\n    {\n      some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n      object: \"with\",\n      lots: \"of\",\n      stuff,\n    }\n  : shortThing;\n\nconst obj4 =\n  conditionIsTruthy ? shortThing : (\n    {\n      some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n      object: \"with\",\n      lots: \"of\",\n      stuff,\n    }\n  );\n\nconst obj5 =\n  conditionIsTruthy ?\n    { some: \"long\", object: \"with\", lots: \"of\", stuff }\n  : {\n      some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n      object: \"with\",\n      lots: \"of\",\n      stuff,\n    };");
}
#[test]
fn test_test_js_tab_width_4_format_1_6093e2b4() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .tab_width(4)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const obj0 = conditionIsTruthy ? shortThing : otherShortThing\n\nconst obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }\n\nconst obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }\n\nconst obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const obj0 = conditionIsTruthy ? shortThing : otherShortThing;\n\nconst obj1 = conditionIsTruthy\n    ? { some: \"long\", object: \"with\", lots: \"of\", stuff }\n    : shortThing;\n\nconst obj2 = conditionIsTruthy\n    ? shortThing\n    : { some: \"long\", object: \"with\", lots: \"of\", stuff };\n\nconst obj3 = conditionIsTruthy\n    ? {\n          some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n          object: \"with\",\n          lots: \"of\",\n          stuff,\n      }\n    : shortThing;\n\nconst obj4 = conditionIsTruthy\n    ? shortThing\n    : {\n          some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n          object: \"with\",\n          lots: \"of\",\n          stuff,\n      };\n\nconst obj5 = conditionIsTruthy\n    ? { some: \"long\", object: \"with\", lots: \"of\", stuff }\n    : {\n          some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n          object: \"with\",\n          lots: \"of\",\n          stuff,\n      };");
}
#[test]
fn test_test_js_use_tabstrue_format_1_6093e2b4() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .use_tabs(true)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const obj0 = conditionIsTruthy ? shortThing : otherShortThing\n\nconst obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }\n\nconst obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }\n\nconst obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const obj0 = conditionIsTruthy ? shortThing : otherShortThing;\n\nconst obj1 = conditionIsTruthy\n\t? { some: \"long\", object: \"with\", lots: \"of\", stuff }\n\t: shortThing;\n\nconst obj2 = conditionIsTruthy\n\t? shortThing\n\t: { some: \"long\", object: \"with\", lots: \"of\", stuff };\n\nconst obj3 = conditionIsTruthy\n\t? {\n\t\t\tsome: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n\t\t\tobject: \"with\",\n\t\t\tlots: \"of\",\n\t\t\tstuff,\n\t  }\n\t: shortThing;\n\nconst obj4 = conditionIsTruthy\n\t? shortThing\n\t: {\n\t\t\tsome: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n\t\t\tobject: \"with\",\n\t\t\tlots: \"of\",\n\t\t\tstuff,\n\t  };\n\nconst obj5 = conditionIsTruthy\n\t? { some: \"long\", object: \"with\", lots: \"of\", stuff }\n\t: {\n\t\t\tsome: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n\t\t\tobject: \"with\",\n\t\t\tlots: \"of\",\n\t\t\tstuff,\n\t  };");
}
#[test]
fn test_test_js_format_1_6093e2b4() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("js")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("const obj0 = conditionIsTruthy ? shortThing : otherShortThing\n\nconst obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }\n\nconst obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing\n\nconst obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }\n\nconst obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "const obj0 = conditionIsTruthy ? shortThing : otherShortThing;\n\nconst obj1 = conditionIsTruthy\n  ? { some: \"long\", object: \"with\", lots: \"of\", stuff }\n  : shortThing;\n\nconst obj2 = conditionIsTruthy\n  ? shortThing\n  : { some: \"long\", object: \"with\", lots: \"of\", stuff };\n\nconst obj3 = conditionIsTruthy\n  ? {\n      some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n      object: \"with\",\n      lots: \"of\",\n      stuff,\n    }\n  : shortThing;\n\nconst obj4 = conditionIsTruthy\n  ? shortThing\n  : {\n      some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n      object: \"with\",\n      lots: \"of\",\n      stuff,\n    };\n\nconst obj5 = conditionIsTruthy\n  ? { some: \"long\", object: \"with\", lots: \"of\", stuff }\n  : {\n      some: \"eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger\",\n      object: \"with\",\n      lots: \"of\",\n      stuff,\n    };");
}
