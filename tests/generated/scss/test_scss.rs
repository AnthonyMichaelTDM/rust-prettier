#[allow(unused_imports)]
use rust_prettier::PrettyPrinterBuilder;
#[allow(dead_code)]
static INFINITY: usize = usize::MAX;
#[test]
fn test_arbitrary_arguments_scss_trailing_commaes_5_format_1_d7434aeb() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("body {\n  test: foo(return-list($list)...);\n}\nbody {\n  test: foo(bar($list)...);\n}\nbody {\n  test: foo($list...);\n}\n@mixin syntax-colors($args...) {\n  @debug meta.keywords($args);\n  // (string: #080, comment: #800, variable: $60b)\n\n  @each $name, $color in meta.keywords($args) {\n    pre span.stx-#{$name} {\n      color: $color;\n    }\n  }\n}\n$form-selectors: \"input.name\", \"input.address\", \"input.zip\" !default;\n@include order(150px, $form-selectors...);\n@mixin linear-gradient($direction, $gradients...) {\n  background-color: nth($gradients, 1);\n  background-image: linear-gradient($direction, $gradients...);\n}\n$parameters: (\n  'c': 'kittens',\n  'a': true,\n  'b': 42\n);\n$value: dummy($parameters...);\n\nbody {\n  background-color: rgba(50, 50, 50, 50);\n  background-color: rgba(50 50 50 50...);\n  background-color: rgba(50 50 .50 50...);\n  background-color: rgba(50 50 50. .50...);\n  // Input is not technically valid ( output is ), but still nice to know that the \\`.\\` gets dropped as it would for \\`50.\\`\n  background-color: rgba(50 50 50 50....);\n  width: min(50px 20px 30px...);\n}") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "body {\n  test: foo(return-list($list)...);\n}\nbody {\n  test: foo(bar($list)...);\n}\nbody {\n  test: foo($list...);\n}\n@mixin syntax-colors($args...) {\n  @debug meta.keywords($args);\n  // (string: #080, comment: #800, variable: $60b)\n\n  @each $name, $color in meta.keywords($args) {\n    pre span.stx-#{$name} {\n      color: $color;\n    }\n  }\n}\n$form-selectors: \"input.name\", \"input.address\", \"input.zip\" !default;\n@include order(150px, $form-selectors...);\n@mixin linear-gradient($direction, $gradients...) {\n  background-color: nth($gradients, 1);\n  background-image: linear-gradient($direction, $gradients...);\n}\n$parameters: (\n  \"c\": \"kittens\",\n  \"a\": true,\n  \"b\": 42,\n);\n$value: dummy($parameters...);\n\nbody {\n  background-color: rgba(50, 50, 50, 50);\n  background-color: rgba(50 50 50 50...);\n  background-color: rgba(50 50 0.5 50...);\n  background-color: rgba(50 50 50 0.5...);\n  // Input is not technically valid ( output is ), but still nice to know that the \\`.\\` gets dropped as it would for \\`50.\\`\n  background-color: rgba(50 50 50 50...);\n  width: min(50px 20px 30px...);\n}");
}
#[test]
fn test_arbitrary_arguments_scss_trailing_commanone_format_1_d7434aeb() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("body {\n  test: foo(return-list($list)...);\n}\nbody {\n  test: foo(bar($list)...);\n}\nbody {\n  test: foo($list...);\n}\n@mixin syntax-colors($args...) {\n  @debug meta.keywords($args);\n  // (string: #080, comment: #800, variable: $60b)\n\n  @each $name, $color in meta.keywords($args) {\n    pre span.stx-#{$name} {\n      color: $color;\n    }\n  }\n}\n$form-selectors: \"input.name\", \"input.address\", \"input.zip\" !default;\n@include order(150px, $form-selectors...);\n@mixin linear-gradient($direction, $gradients...) {\n  background-color: nth($gradients, 1);\n  background-image: linear-gradient($direction, $gradients...);\n}\n$parameters: (\n  'c': 'kittens',\n  'a': true,\n  'b': 42\n);\n$value: dummy($parameters...);\n\nbody {\n  background-color: rgba(50, 50, 50, 50);\n  background-color: rgba(50 50 50 50...);\n  background-color: rgba(50 50 .50 50...);\n  background-color: rgba(50 50 50. .50...);\n  // Input is not technically valid ( output is ), but still nice to know that the \\`.\\` gets dropped as it would for \\`50.\\`\n  background-color: rgba(50 50 50 50....);\n  width: min(50px 20px 30px...);\n}") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "body {\n  test: foo(return-list($list)...);\n}\nbody {\n  test: foo(bar($list)...);\n}\nbody {\n  test: foo($list...);\n}\n@mixin syntax-colors($args...) {\n  @debug meta.keywords($args);\n  // (string: #080, comment: #800, variable: $60b)\n\n  @each $name, $color in meta.keywords($args) {\n    pre span.stx-#{$name} {\n      color: $color;\n    }\n  }\n}\n$form-selectors: \"input.name\", \"input.address\", \"input.zip\" !default;\n@include order(150px, $form-selectors...);\n@mixin linear-gradient($direction, $gradients...) {\n  background-color: nth($gradients, 1);\n  background-image: linear-gradient($direction, $gradients...);\n}\n$parameters: (\n  \"c\": \"kittens\",\n  \"a\": true,\n  \"b\": 42\n);\n$value: dummy($parameters...);\n\nbody {\n  background-color: rgba(50, 50, 50, 50);\n  background-color: rgba(50 50 50 50...);\n  background-color: rgba(50 50 0.5 50...);\n  background-color: rgba(50 50 50 0.5...);\n  // Input is not technically valid ( output is ), but still nice to know that the \\`.\\` gets dropped as it would for \\`50.\\`\n  background-color: rgba(50 50 50 50...);\n  width: min(50px 20px 30px...);\n}");
}
#[test]
fn test_arbitrary_arguments_comment_scss_trailing_commaes_5_format_1_57f71871() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@include bar (\n    rgba(\n    50 \n    50 \n    .50 \n    50            ...\n    // comment\n  )\n)") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq!(
        formatted,
        "@include bar(\n  rgba(\n    50 50 0.5 50... // comment\n  )\n);"
    );
}
#[test]
fn test_arbitrary_arguments_comment_scss_trailing_commanone_format_1_57f71871() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@include bar (\n    rgba(\n    50 \n    50 \n    .50 \n    50            ...\n    // comment\n  )\n)") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq!(
        formatted,
        "@include bar(\n  rgba(\n    50 50 0.5 50... // comment\n  )\n);"
    );
}
#[test]
fn test_comments_scss_trailing_commaes_5_format_1_7e5a5dc1() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("// This comment won't be included in the CSS. \n//This comment won't be included in the CSS.\n//     This comment won't be included in the CSS.     \n\n/* But this comment will, except in compressed mode. */\n/*     But this comment will, except in compressed mode.     */\n/*But this comment will, except in compressed mode.*/\n\n/*! This comment will be included even in compressed mode. */\n\n/// Computes an exponent.\n///// Computes an exponent.") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "// This comment won't be included in the CSS.\n//This comment won't be included in the CSS.\n//     This comment won't be included in the CSS.\n\n/* But this comment will, except in compressed mode. */\n/*     But this comment will, except in compressed mode.     */\n/*But this comment will, except in compressed mode.*/\n\n/*! This comment will be included even in compressed mode. */\n\n/// Computes an exponent.\n///// Computes an exponent.");
}
#[test]
fn test_comments_scss_trailing_commanone_format_1_7e5a5dc1() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("// This comment won't be included in the CSS. \n//This comment won't be included in the CSS.\n//     This comment won't be included in the CSS.     \n\n/* But this comment will, except in compressed mode. */\n/*     But this comment will, except in compressed mode.     */\n/*But this comment will, except in compressed mode.*/\n\n/*! This comment will be included even in compressed mode. */\n\n/// Computes an exponent.\n///// Computes an exponent.") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "// This comment won't be included in the CSS.\n//This comment won't be included in the CSS.\n//     This comment won't be included in the CSS.\n\n/* But this comment will, except in compressed mode. */\n/*     But this comment will, except in compressed mode.     */\n/*But this comment will, except in compressed mode.*/\n\n/*! This comment will be included even in compressed mode. */\n\n/// Computes an exponent.\n///// Computes an exponent.");
}
#[test]
fn test_directives_scss_trailing_commaes_5_format_1_7eb7b986() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer.format("@qux .foo\n// .bar \n\n{}");
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq!(formatted, "@qux .foo\n// .bar\n{\n}");
}
#[test]
fn test_directives_scss_trailing_commanone_format_1_7eb7b986() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer.format("@qux .foo\n// .bar \n\n{}");
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq!(formatted, "@qux .foo\n// .bar\n{\n}");
}
#[test]
fn test_function_in_url_scss_trailing_commaes_5_format_1_3750f8d5() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@function concat($strings...) {\n  $result: '';\n  @each $string in $strings {\n    $sum: $result + $string;\n  }\n  @return $result;\n}\n\na {\n backround: url(concat('http://', 'example.com', '/image.png'));\n}") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "@function concat($strings...) {\n  $result: \"\";\n  @each $string in $strings {\n    $sum: $result + $string;\n  }\n  @return $result;\n}\n\na {\n  backround: url(concat(\"http://\", \"example.com\", \"/image.png\"));\n}");
}
#[test]
fn test_function_in_url_scss_trailing_commanone_format_1_3750f8d5() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@function concat($strings...) {\n  $result: '';\n  @each $string in $strings {\n    $sum: $result + $string;\n  }\n  @return $result;\n}\n\na {\n backround: url(concat('http://', 'example.com', '/image.png'));\n}") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "@function concat($strings...) {\n  $result: \"\";\n  @each $string in $strings {\n    $sum: $result + $string;\n  }\n  @return $result;\n}\n\na {\n  backround: url(concat(\"http://\", \"example.com\", \"/image.png\"));\n}");
}
#[test]
fn test_import_comma_scss_trailing_commaes_5_format_1_5294c912() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer.format("@import \"rounded-corners\", \"text-shadow\";");
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq!(formatted, "@import \"rounded-corners\", \"text-shadow\";");
}
#[test]
fn test_import_comma_scss_trailing_commanone_format_1_5294c912() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer.format("@import \"rounded-corners\", \"text-shadow\";");
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq!(formatted, "@import \"rounded-corners\", \"text-shadow\";");
}
#[test]
fn test_scss_scss_trailing_commaes_5_format_1_0dc64244() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@media #{$g-breakpoint-tiny} {}\n.#{$fa-css-prefix}-glass:before { content: $fa-var-glass; }\na {height: calc(#{$foo} + 1);}\ndiv {\n  background: {\n      size: auto 60%;\n      position: bottom 2px left;\n  }\n}\na { margin: 0 { left: 10px; } }\n\n$default: #111111 !default;\n$default: #111111   !default;\n$default: #111111\n!default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"   !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"\n!default;\n\n$global: #111111 !global;\n$global: #111111   !global;\n$global: #111111\n!global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"   !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"\n!global;\n\n$map: (key: value, other-key: other-value);\n$map: (key: value, other-key: other-value) !default;\n$map: (key: value, other-key: other-value)  !default;\n$map: (key: value, other-key: other-value)\n!default;\n$map:\n(key: value, other-key: other-value)\n!default;\n$map: ( key : value , other-key : other-value);\n$map: (  key  :  value  ,  other-key  :  other-value  );\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\nkey: value,\nother-key: other-value\n);\n$map: (\nkey\n:\nvalue,\nother-key\n:\nother-value\n);\n$map: (\nkey\n:\nvalue\n,\nother-key\n:\nother-value\n);\n$map: (very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value, very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value);\n$map: ( very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key : very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value , very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key : very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value );\n$map: (  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key  :  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value  ,  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value  );\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map:\n(\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key\n:\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value\n,\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key\n:\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  key: (#d82d2d, #666),\n  other-key: (#52bf4a, #fff),\n  other-other-key: (#c23435, #fff)\n);\n$map: (\nkey: (#d82d2d, #666),\nother-key: (#52bf4a, #fff),\nother-other-key: (#c23435, #fff)\n);\n$map: (\n  key : ( #d82d2d , #666 ),\n  other-key : ( #52bf4a , #fff ),\n  other-other-key : ( #c23435 , #fff )\n);\n$map: (\n  key  : (  #d82d2d  ,  #666  )  ,\n  other-key  :  (  #52bf4a  ,  #fff  ),\n  other-other-key  :  (  #c23435  ,  #fff  )\n);\n$map: (\nkey\n:\n(\n#d82d2d,\n#666\n)\n,\nother-key\n:\n(\n#52bf4a,\n#fff\n)\n,\nother-other-key\n:\n(\n#c23435\n,\n#fff\n)\n);\n$map: map-merge($map, ($key: $value));\n$map: map-merge( $map , ( $key : $value ) );\n$map: map-merge(  $map  ,  (  $key  :  $value  )  );\n$map: map-merge(\n  $map,\n  ($key:  $value)\n);\n$map: map-merge(\n$map,\n($key:  $value)\n);\n$map:\nmap-merge(\n$map\n,\n(\n$key\n:\n$value\n)\n);\n\n$longVariable: (\n(mobile $mobile) (tablet $tablet) (desktop $desktop) (wide $wide)\n);\n\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space:\"item-1\"\"item-2\"\"item-3\";\n$list-space:  \"item-1\"  \"item-2\"  \"item-3\"  ;\n$list-space: \"item-1\"\n  \"item-2\"\n  \"item-3\";\n$list-space\n:\n\"item-1\"\n\"item-2\"\n\"item-3\"\n;\n$list-space\n\n:\n\n\"item-1\"\n\n\"item-2\"\n\n\"item-3\"\n\n;\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma:\"item-1\",\"item-2\",\"item-3\";\n$list-comma:  \"item-1\"  ,  \"item-2\"  ,  \"item-3\"  ;\n$list-comma: \"item-1\",\n  \"item-2\",\n  \"item-3\";\n$list-comma\n:\n\"item-1\"\n,\n\"item-2\"\n,\n\"item-3\"\n;\n$list-comma\n\n:\n\n\"item-1\"\n\n,\n\n\"item-2\"\n\n,\n\n\"item-3\"\n\n;\n$list: \"item-1.1\" \"item-1.2\" \"item-1.3\", \"item-2.1\" \"item-2.2\" \"item-2.3\", \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\"item-1.1\"\"item-1.2\"\"item-1.3\",\"item-2.1\"\"item-2.2\"\"item-2.3\",\"item-3.1\"\"item-3.2\"\"item-3.3\";\n$list:  \"item-1.1\"  \"item-1.2\"  \"item-1.3\"  ,  \"item-2.1\"  \"item-2.2\"  \"item-2.3\"  ,  \"item-3.1\"  \"item-3.2\"  \"item-3.3\"  ;\n$list: \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list\n:\n\"item-1.1\"\n\"item-1.2\"\n\"item-1.3\"\n,\n\"item-2.1\"\n\"item-2.2\"\n\"item-2.3\"\n,\n\"item-3.1\"\n\"item-3.2\"\n\"item-3.3\"\n;\n$list\n\n:\n\n\"item-1.1\"\n\n\"item-1.2\"\n\n\"item-1.3\"\n\n,\n\n\"item-2.1\"\n\n\"item-2.2\"\n\n\"item-2.3\"\n\n,\n\n\"item-3.1\"\n\n\"item-3.2\"\n\n\"item-3.3\"\n\n;\n$list: ((\"item-1.1\", \"item-1.2\", \"item-1.3\"), (\"item-2.1\", \"item-2.2\", \"item-2.3\"), (\"item-3.1\", \"item-3.2\", \"item-3.3\"));\n$list:((\"item-1.1\",\"item-1.2\",\"item-1.3\"),(\"item-2.1\",\"item-2.2\",\"item-2.3\"),(\"item-3.1\",\"item-3.2\",\"item-3.3\"));\n$list:  (  (  \"item-1.1\"  ,  \"item-1.2\"  ,  \"item-1.3\"  )  ,  (  \"item-2.1\"  ,  \"item-2.2\"  ,  \"item-2.3\"  )  ,  (  \"item-3.1\"  ,  \"item-3.2\"  ,  \"item-3.3\"  )  )  ;\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list\n:\n(\n(\n\"item-1.1\"\n,\n\"item-1.2\"\n,\n\"item-1.3\"\n)\n,\n(\n\"item-2.1\"\n,\n\"item-2.2\"\n,\n\"item-2.3\"\n)\n,\n(\n\"item-3.1\"\n,\n\"item-3.2\"\n,\n\"item-3.3\"\n)\n)\n;\n$list\n\n:\n\n(\n\n(\n\n\"item-1.1\"\n\n,\n\n\"item-1.2\"\n\n,\n\n\"item-1.3\"\n\n)\n\n,\n\n(\n\n\"item-2.1\"\n\n,\n\n\"item-2.2\"\n\n,\n\n\"item-2.3\"\n\n)\n\n,\n\n(\n\n\"item-3.1\"\n\n,\n\n\"item-3.2\"\n\n,\n\n\"item-3.3\"\n\n)\n\n)\n\n;\n\n$var: (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0);\n$space-scale: (0, \"0\") (0.25, \"0-25\") (0.5, \"0-5\") (0.75, \"0-75\") (1, \"1\") (1.25, \"1-25\") (1.5, \"1-5\") (1.75, \"1-75\") (2, \"2\") (2.25, \"2-25\") (2.5, \"2-5\") (2.75, \"2-75\") (3, \"3\") (3.25, \"3-25\") (3.5, \"3-5\") (3.75, \"3-75\") (4, \"4\");\n\n.card-column-simple {\n  @include breakpoint( getBp( md ) ) {\n    padding: $spacing_content-sm $spacing_content-md;\n  }\n\n  @include breakpoint (getBp(md)) {\n    &:nth-child(2n + 3) {\n      clear: both;\n    }\n  }\n\n  @include breakpoint (getBp(xl)) {\n    &:nth-child(2n + 3) {\n      clear: none;\n    }\n    &:nth-child(3n + 4) {\n      clear: both;\n    }\n  }\n}\n\n@warn \"Warn (#{$message}).\";\n@warn  \"Warn (#{$message}).\";\n@warn   \"Warn (#{$message}).\";\n@warn #{$message};\n@warn \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@warn\n  \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error  \"Error (#{$message}).\";\n@error   \"Error (#{$message}).\";\n@error #{$message};\n@error \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n@error\n  \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n\n$buttonConfig: \"save\" 50px, 'cancel' 50px, \"help\" 100PX;\n\n$locale: \"en_us\";\nhtml[lang=#{$locale}] {\n  font-size: 10px;\n}\n$alertClass: \"error\";\np.message-#{$alertClass} {\n  color: red;\n}\n$mediumBreakpoint: 768px;\n@media (max-width: #{$mediumBreakpoint}) {\n  a {\n    font-size: 18px;\n  }\n}\n\np {\n  @media (max-width: 768px) {\n    font-size: 150%;\n\n    @media (orientation: landscape) {\n        line-height: 75%;\n    }\n  }\n}\n\n.popularAnimal {\n    background: gray;\n}\n.GoodBoy {\n    color: green;\n}\n.dog {\n  @extend .popularAnimal;\n  @extend .GoodBoy;\n  color: white;\n}\n\n%animal {\n  background: gray;\n}\n.cat {\n  @extend %animal;\n  color: white;\n}\n.dog {\n  @extend %animal;\n  color: black;\n}\n\n%mfw-standing-out {\n  font-size: 150%;\n  font-style: italic;\n  padding: 25px;\n}\n%mfwSlightlyShadowed {\n  @include box-shadow(black 2px 2px 10px); // from Compass\n}\n%MFWRounded {\n  @include border-radius(25px); // from Compass\n}\n#join-button {\n  @extend %mfw-standing-out;\n  @extend %mfwSlightlyShadowed;\n  @extend %MFWRounded;\n  background: green;\n  color: white;\n}\n\na {\n  &:hover {\n    color: red;\n  }\n}\np {\n  body.no-touch & {\n    display: none;\n  }\n}\n.foo.bar .baz.bang, .bip.qux {\n  $selector: &;\n}\n@mixin does-parent-exist {\n  @if & {\n    &:hover {\n      color: red;\n    }\n  } @else {\n    a {\n      color: red;\n    }\n  }\n}\n\np {\n  @if 1 + 1 == 2 {\n    border: 1px solid;\n  }\n  @if 5 < 3 {\n    border: 2px dotted;\n  }\n  @if null {\n    border: 3px double;\n  }\n}\n\n$mosterType: monster;\np {\n  @if $mosterType == ocean {\n    color: blue;\n  } @else if $mosterType == matador {\n    color: red;\n  } @else if $mosterType == monster {\n    color: green;\n  } @else if $mosterType == nightKing {\n    color: green;\n  } @else if $mosterType == VeryWickedWolf {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n\n@for $i from 1 through 3 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n}\n\n@each $animal in puma, sea-slug, cheerfulDog, BigSalamander, \"string\", 'another-string', \"camelCaseString\", \"PascalCaseString\" {\n  .#{$animal}-icon {\n    background-image: url('/images/#{$animal}.png');\n  }\n}\n\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}\n\n@mixin cool-border($width: 10px, $coolStyle: 'solid', $AwesomeColor: \"black\") {\n  border: $width $coolStyle $AwesomeColor;\n}\n\np {\n  @include cool-border(1px, \"solid\", $fff);\n}\np {\n  @include cool-border($width: 1px, $coolStyle: 'solid', $AwesomeColor: #fff);\n}\np {\n  @include coolBorder();\n}\n\n@mixin coolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include coolBorder(1px, \"solid\", $fff);\n}\n\n@mixin CoolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include CoolBorder(1px, \"solid\", $fff);\n}\n\n@mixin box-shadow($shadows...) {\n  -moz-box-shadow: $shadows;\n  -webkit-box-shadow: $shadows;\n  box-shadow: $shadows;\n}\n.shadows {\n  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);\n}\n\n@mixin apply-to-ie6-only {\n  * html {\n    @content;\n  }\n}\n@include apply-to-ie6-only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin applyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include applyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin ApplyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include ApplyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin config-icon-colors($prefix, $colors...) {\n  @each $i in $colors {\n    .#{$prefix}#{nth($i, 1)} {\n      color: nth($i, 2);\n    }\n  }\n}\n@include config-icon-colors(\n  \"icon-\",\n  \"save\" green,\n  \"cancel\" gray,\n  \"delete\" red,\n  'wait' blue\n);\n\n@function my-calculation-function($some-number, $anotherNumber, $BigNumber){\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function myCalculationFunction($some-number, $anotherNumber, $BigNumber){\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function AnotherMyCalculationFunction($some-number, $anotherNumber, $BigNumber: 100px){\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function border($borders...) {\n  @return $borders;\n}\n.foo {\n  padding: my-calculation-function(10px, 5px, 100px);\n  margin: myCalculationFunction($some-number: 10px, $anotherNumber: 5px, $BigNumber: 100px);\n  width: AnotherMyCalculationFunction(10px, 5px);\n  border: border(25px, 35px);\n}\n\n$sm-only: '(min-width: 768px) and (max-width: 991px)';\n$lg-and-up: '(min-width: 1200px)';\n\n@media screen and #{$sm-only, $lg-and-up} {\n  color: #000;\n}\n\n.class-#{$var} {\n  #{$var}: #7b3d66;\n  #{$attr}-color: blue;\n  #{$prop}-#{$side}: $value;\n  background-#{$var}: #7b3d66;\n  animation-name: #{var};\n  line-height: #{strip-unit($line-height)}em;\n  height: 1#{$var};\n  width: calc(100% - #{$sidebar-width});\n  max-width: calc(#{$m*100}vw #{$sign} #{$b});\n  font: #{$font-size}/#{$line-height};\n  content: \"I have #{8 + 2} books on SASS!\";\n  border: #{$var} #{$var} #{$var};\n  filter: #{$var}#{$var}#{$var};\n  prop:  #{  $var  +  $var  }  #{  $var  +  $var  }  #{  $var  +  $var  };\n  prop2:\n      #{\n      $var\n      +\n      $var\n      }\n\n      #{\n      $var\n      +\n      $var\n      }\n\n      #{\n      $var\n      +\n      $var\n      }\n      ;\n  prop3:\n\n      #{\n\n      $var\n\n      +\n\n      $var\n\n      }\n\n      #{\n\n      $var\n\n      +\n\n      $var\n\n      }\n\n      #{\n\n      $var\n\n      +\n\n      $var\n\n      }\n      ;\n  prop4: -#{$loader-icon-duration};\n  prop5: +#{$loader-icon-duration};\n  prop6: calc(-#{$loader-icon-duration} + 10);\n  prop7: calc(10 + -#{$loader-icon-duration});\n}\n\n/* Framework version for the generated CSS is #{$version}. */\n\n.selector {\n  foo: bar;\n  #{$active} {\n    baz: qux;\n  }\n}\n\n.el:nth-of-type(#{$i}) {}\n\n@media #{$value} {}\n\n$foundation-dir: 'foundation';\n@import url('#{$foundation-dir}/components/grid');\n@import url(#{$foundation-dir}/components/grid);\n@import url($foundation-dir/components/grid);\n@import url($foundation-dir+\"/components/grid\");\n\n@function get-font-family($family) {\n  @return $family;\n}\n@import url(\"//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap\");\n@import url(//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap);\n\n\n@keyframes loader {\n  0% {\n    transform: translate3d(0, 0, 0);\n  }\n\n  #{50% - $loader-icon-duration} {\n    transform: translate3d(0, $bounce-height, 0);\n  }\n\n  50% {\n    transform: translate3d(0, $bounce-height, 0) scale($loader-bounce-horizontal-expansion, $loader-bounce-vertical-compression);\n  }\n}\n\n$icons: wifi \"\\\\600\", wifi-hotspot \"\\\\601\", weather \"\\\\602\";\n\n@each $icon in $icons {\n  .icon-#{nth($icon, 1)}, %icon-#{nth($icon, 1)} {\n    content: \"#{nth($icon, 2)}\";\n  }\n}\n\n.foo {\n  prop: -($grid-gutter-width / 2);\n  prop1: -(  $grid-gutter-width  /  2  );\n  prop2: -$grid-gutter-width / 2;\n  prop3: +($grid-gutter-width / 2);\n  prop4: 10px/8px; /* Plain CSS, no division */\n  prop5: $width / 2; /* Uses a variable, does division */\n  prop6: round(1.5) / 2; /* Uses a function, does division */\n  prop7: (500px / 2); /* Uses parentheses, does division */\n  prop8: 5px + 8px / 2px; //* Uses +, does division */\n  prop9: (italic bold 10px/8px); /* In a list, parentheses don't count */\n  prop10: #010203 + #040506;\n  prop11: #010203 * 2;\n  prop12: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n  prop13: progid:DXImageTransform.Microsoft.gradient(enabled='false', startColorstr='#{ie-hex-str($green)}', endColorstr='#{ie-hex-str($translucent-red)}');\n  prop14: e + -resize;\n  prop15: sans- + \"serif\";\n  prop16: 1em + (2em * 3);\n  prop17: rotate(-2deg);\n  prop18:  rotate(  -2deg  )  ;\n  _:_;\n  prop19: 10 - ($grid-gutter-width / 2);\n  prop20: 10 + -($grid-gutter-width / 2);\n  prop21:  10  +  -  (  $grid-gutter-width  /  2  )  ;\n  prop22: - ( $grid-gutter-width / 2 ) ;\n  prop23:  -  (  $grid-gutter-width  /  2  )  ;\n  prop24: -$grid-gutter-width;\n  prop25: + ( $grid-gutter-width / 2 ) ;\n  prop26:  +  (  $grid-gutter-width  /  2  )  ;\n  prop27: +$grid-gutter-width;\n  prop28: --($grid-gutter-width / 2);\n  prop28: ++($grid-gutter-width / 2);\n  prop29:  rotate(  -  2deg  )  ;\n}\n\n$last:nth($juggler,length($juggler));\n$x:if($last%2==0,1/2,3/2);\n$new:pow($last,$x);\n$sequence:1,1 1,2 1,1 2 1 1, 1 1 1 2 2 1;\n$new-entry:();\n$new-entry : ( ) ;\n$new-entry  :  (  )  ;\n$new-entry\n:\n(\n)\n;\n\nbody:before {\n  content: quote(to-string(fibonacci(100), ' \\\\A '));\n  white-space: pre-wrap;\n}\n\nwidth: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);\nwidth\n:\n(\n(\n100%\n-\n(\n(\n$numPerRow\n-\n1\n)\n*\n$margin\n)\n)\n/\n$numPerRow\n)\n;\n\na:nth-child(#{$numPerRow}n) {\n  margin-right: 0;\n  margin-bottom: 0;\n}\n\n@function em($pixels, $context: $browser-context) {\n  @return #{ $pixels / $context }em\n}\n\n.navigation {\n  @extend %updated-#{$flag};\n  @extend .selected-#{$flag};\n  @extend %#{$item};\n}\n\n.icon-#{$icon-name} {\n  background-image: '/images/#{$icon-name}.svg';\n}\n\n$extmods:(eot:\"?\",svg:\"#\" + str-replace($name,\" \",\"_\"));\n\n@mixin keyframes {@-moz-keyframes{@content;}@-webkit-keyframes{@content;}}\n\n@function gcd($a,$b){\n  // From: http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\n  @if ($b != 0) {\n    @return gcd($b,$a % $b);\n  }@else{\n    @return abs($a);\n  }\n}\n\n$colors: (\nprimary: (\nbase: #00abc9,\nlight: #daf1f6,\ndark: #12799a\n),\nsecondary: (\nbase: #424d55,\nlight: #ccc,\nlightest: #efefef,\ndark: #404247\n),\nsuccess: (\nbase: #bbd33e,\nlight: #eaf0c6\n)\n);\n\n@function color($color, $tone: \"base\") {\n@return map-get(map-get($colors, $color), $tone);\n}\n\n@media only screen and (max-width: 767px) {\n  @include widths(2 3 4, \\\\@small);\n}\n\n$widths-breakpoint-separator: \\\\@small;\n\na {\n  transition-timing-function: func1(\n      func2(\n          func3(\n              \"veryVeryVeryVeryVeryLongValue\",\n              \"veryVeryVeryVeryVeryLongValue\",\n              \"veryVeryVeryVeryVeryLongValue\",\n              \"veryVeryVeryVeryVeryLongValue\",\n          ),\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n      ),\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      func3(\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\"\n      )\n  );\n}\n\n$empty-map: ();\n$empty-nested-map: (\nnested-key: (empty-key: (color: red)),\nempty-key: (),\nempty-key: (),\nempty-key: ()\n);\n\n$o-grid-default-config: (\ncolumns: 12,\ngutter: 10px,\nmin-width: 240px,\nmax-width: 1330px,\nlayouts: (\nS:  370px,\nM:  610px,\nL:  850px,\nXL: 1090px\n),\nfluid: true,\ndebug: false,\nfixed-layout: M,\nenhanced-experience: true\n);\n\n$a: ();\n$b: unquote('');\n$c: null;\n$d: (null);\n\n$threads-properties: map-merge($threads-properties,  ($border-label: ()));\n$o-grid-default-config: (layouts: (S:  370px));\n\n$map: (\nkey: (value),\nother-key: (key: other-other-value)\n);\n\na {\n  content: \"#{\".5\"}\";\n  content: my-fn(\"_\");\n  content: \"#{my-fn(\"_\")}\";\n  content: my-fn(\"-\");\n  content: \"#{my-fn(\"-\")}\";\n  content: my-fn(\"-a\");\n  content: \"#{my-fn(\"-a\")}\";\n  content: my-fn(\"a-\");\n  content: \"#{my-fn(\"a-\")}\";\n  content: my-fn(\"foo\");\n  content: \"#{my-fn(\"foo\")}\";\n  content: 1 \"#{my-fn(\"foo\")}\" 2;\n  content: foo \"#{my-fn(\"foo\")}\" bar;\n  content: \"foo #{$description} bar\";\n\n  content: \"#{my-fn(\"foo\",\"bar\")}\";\n  content: \"#{my-fn( \"foo\" , \"bar\" )}\";\n  content: \"#{my-fn(  \"foo\"  ,  \"bar\"  )}\";\n\n  content: '#{my-fn(\"foo\")}';\n  content: '#{my-fn('foo')}';\n  content: \"#{my-fn('foo')}\";\n  content: \"#{my-fn(\"foo\")}\";\n}\n\n@mixin theme($css-property, $css-value, $theme-classes: t) {\n  @each $selector in & {\n    @each $class in $theme-classes {\n      @each $theme, $theme-properties in c(themes) {\n      $value: $css-value;\n\n        @each $theme-name, $theme-value in $theme-properties {\n          $rgba-value: \"rgba(#{red($theme-value)}, #{green($theme-value)}, #{blue($theme-value)}\";\n          $value: str-replace($value, \"rgba(\\${#{$theme-name}}\", $rgba-value);\n          $value: str-replace($value, \"\\${#{$theme-name}}\", $theme-value);\n        }\n\n        @at-root .#{$class}-#{join($theme, $selector)} {\n          #{$css-property}: unquote($value);\n        }\n      }\n    }\n  }\n}\n\n.foo,\n// Comment\n.bar {\n  // Comment\n  color: red; // Comment\n}\n\n$my-list:\n  'foo', // Comment\n  'bar'; // Comment\n\n$my-map: (\n  'foo': 1, // Comment\n  'bar': 2, // Comment\n  'buz': calc(1 + 2), // Buz\n  'baz': 4, // Baz\n);\n\n[href]:hover &, // Comment\n[href]:focus &, // Comment\n[href]:active & {\n  .tooltip {\n    opacity: 1;\n  }\n}\n\n@import\n  // Comment\n  'mixins',\n  'variables',\n  // Comment\n  'reset',\n  'scaffolding',\n  'type',\n  // Comment\n  'bar',\n  'tabs';\n\n@mixin placeholder {\n  &::placeholder {@content}\n}\n\n.container {\n  @include placeholder {\n    color: $color-silver;\n  }\n}\n\n.something {\n  grid-template-columns: 1 2fr (3 + 4);\n}\n\n// Ignore escape \"\\\\\" in SCSS mixins\n@mixin margin-bottom-1\\\\/3 {\n  margin-bottom: 0.8rem;\n}\n\nlabel {\n  @include margin-bottom-1\\\\/3;\n}\n\n@function someVeryLongFunctionNameForJustAPow($base, $exponent) {\n  $result: 1;\n  @for $_ from 1 through $exponent {\n    $result: $result * $base;\n  }\n  @return $result;\n}\n\n@function pow($base, $exponent){\n  @return someVeryLongFunctionNameForJustAPow($base,$exponent);\n}\n\n.foo{\n  width: someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2,\n  // This next pow is really powerful\n  someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, 2))))))))))))\n}\n\n.bar{\n  width: pow(2, pow(2, pow(2,\n  // This next pow is really powerful\n  pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, 2))))))))))))\n}\n\n// #5636\ndiv {\n  margin: - pow(2, 2) * 100px;\n}\n\ndiv {\n  margin: -double(-double(1em));\n  margin: -double(- double(1em));\n  margin: - double(-double(1em));\n}\n\n@function -double($value) {\n  @return $value * 2;\n}\n\n$foo: (\n    'property1': (),\n    // comment 1\n    // comment 2\n\n    'property2': 1,\n    /** comment 1 */\n    /* comment 2 */\n);") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "@media #{$g-breakpoint-tiny} {\n}\n.#{$fa-css-prefix}-glass:before {\n  content: $fa-var-glass;\n}\na {\n  height: calc(#{$foo} + 1);\n}\ndiv {\n  background: {\n    size: auto 60%;\n    position: bottom 2px left;\n  }\n}\na {\n  margin: 0 {\n    left: 10px;\n  }\n}\n\n$default: #111111 !default;\n$default: #111111 !default;\n$default: #111111 !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n\n$global: #111111 !global;\n$global: #111111 !global;\n$global: #111111 !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n\n$map: (\n  key: value,\n  other-key: other-value,\n);\n$map: (\n  key: value,\n  other-key: other-value,\n) !default;\n$map: (\n  key: value,\n  other-key: other-value,\n) !default;\n$map: (\n  key: value,\n  other-key: other-value,\n) !default;\n$map: (\n  key: value,\n  other-key: other-value,\n) !default;\n$map: (\n  key: value,\n  other-key: other-value,\n);\n$map: (\n  key: value,\n  other-key: other-value,\n);\n$map: (\n  key: value,\n  other-key: other-value,\n);\n$map: (\n  key: value,\n  other-key: other-value,\n);\n$map: (\n  key: value,\n  other-key: other-value,\n);\n$map: (\n  key: value,\n  other-key: other-value,\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value,\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value,\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value,\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value,\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value,\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value,\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666,\n  ),\n  other-key: (\n    #52bf4a,\n    #fff,\n  ),\n  other-other-key: (\n    #c23435,\n    #fff,\n  ),\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666,\n  ),\n  other-key: (\n    #52bf4a,\n    #fff,\n  ),\n  other-other-key: (\n    #c23435,\n    #fff,\n  ),\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666,\n  ),\n  other-key: (\n    #52bf4a,\n    #fff,\n  ),\n  other-other-key: (\n    #c23435,\n    #fff,\n  ),\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666,\n  ),\n  other-key: (\n    #52bf4a,\n    #fff,\n  ),\n  other-other-key: (\n    #c23435,\n    #fff,\n  ),\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666,\n  ),\n  other-key: (\n    #52bf4a,\n    #fff,\n  ),\n  other-other-key: (\n    #c23435,\n    #fff,\n  ),\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value,\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value,\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value,\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value,\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value,\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value,\n  )\n);\n\n$longVariable: (\n  (mobile $mobile) (tablet $tablet) (desktop $desktop) (wide $wide)\n);\n\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n\n$var: (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0)\n  (0 0) (0 0);\n$space-scale: (0, \"0\") (0.25, \"0-25\") (0.5, \"0-5\") (0.75, \"0-75\") (1, \"1\")\n  (1.25, \"1-25\") (1.5, \"1-5\") (1.75, \"1-75\") (2, \"2\") (2.25, \"2-25\")\n  (2.5, \"2-5\") (2.75, \"2-75\") (3, \"3\") (3.25, \"3-25\") (3.5, \"3-5\")\n  (3.75, \"3-75\") (4, \"4\");\n\n.card-column-simple {\n  @include breakpoint(getBp(md)) {\n    padding: $spacing_content-sm $spacing_content-md;\n  }\n\n  @include breakpoint(getBp(md)) {\n    &:nth-child(2n + 3) {\n      clear: both;\n    }\n  }\n\n  @include breakpoint(getBp(xl)) {\n    &:nth-child(2n + 3) {\n      clear: none;\n    }\n    &:nth-child(3n + 4) {\n      clear: both;\n    }\n  }\n}\n\n@warn \"Warn (#{$message}).\";\n@warn \"Warn (#{$message}).\";\n@warn \"Warn (#{$message}).\";\n@warn #{$message};\n@warn \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@warn \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error #{$message};\n@error \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n@error \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n\n$buttonConfig:\n  \"save\" 50px,\n  \"cancel\" 50px,\n  \"help\" 100px;\n\n$locale: \"en_us\";\nhtml[lang=\"#{$locale}\"] {\n  font-size: 10px;\n}\n$alertClass: \"error\";\np.message-#{$alertClass} {\n  color: red;\n}\n$mediumBreakpoint: 768px;\n@media (max-width: #{$mediumBreakpoint}) {\n  a {\n    font-size: 18px;\n  }\n}\n\np {\n  @media (max-width: 768px) {\n    font-size: 150%;\n\n    @media (orientation: landscape) {\n      line-height: 75%;\n    }\n  }\n}\n\n.popularAnimal {\n  background: gray;\n}\n.GoodBoy {\n  color: green;\n}\n.dog {\n  @extend .popularAnimal;\n  @extend .GoodBoy;\n  color: white;\n}\n\n%animal {\n  background: gray;\n}\n.cat {\n  @extend %animal;\n  color: white;\n}\n.dog {\n  @extend %animal;\n  color: black;\n}\n\n%mfw-standing-out {\n  font-size: 150%;\n  font-style: italic;\n  padding: 25px;\n}\n%mfwSlightlyShadowed {\n  @include box-shadow(black 2px 2px 10px); // from Compass\n}\n%MFWRounded {\n  @include border-radius(25px); // from Compass\n}\n#join-button {\n  @extend %mfw-standing-out;\n  @extend %mfwSlightlyShadowed;\n  @extend %MFWRounded;\n  background: green;\n  color: white;\n}\n\na {\n  &:hover {\n    color: red;\n  }\n}\np {\n  body.no-touch & {\n    display: none;\n  }\n}\n.foo.bar .baz.bang,\n.bip.qux {\n  $selector: &;\n}\n@mixin does-parent-exist {\n  @if & {\n    &:hover {\n      color: red;\n    }\n  } @else {\n    a {\n      color: red;\n    }\n  }\n}\n\np {\n  @if 1 + 1 == 2 {\n    border: 1px solid;\n  }\n  @if 5 < 3 {\n    border: 2px dotted;\n  }\n  @if null {\n    border: 3px double;\n  }\n}\n\n$mosterType: monster;\np {\n  @if $mosterType == ocean {\n    color: blue;\n  } @else if $mosterType == matador {\n    color: red;\n  } @else if $mosterType == monster {\n    color: green;\n  } @else if $mosterType == nightKing {\n    color: green;\n  } @else if $mosterType == VeryWickedWolf {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n\n@for $i from 1 through 3 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n}\n\n@each $animal in puma, sea-slug, cheerfulDog, BigSalamander, \"string\",\n  \"another-string\", \"camelCaseString\", \"PascalCaseString\"\n{\n  .#{$animal}-icon {\n    background-image: url(\"/images/#{$animal}.png\");\n  }\n}\n\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}\n\n@mixin cool-border($width: 10px, $coolStyle: \"solid\", $AwesomeColor: \"black\") {\n  border: $width $coolStyle $AwesomeColor;\n}\n\np {\n  @include cool-border(1px, \"solid\", $fff);\n}\np {\n  @include cool-border($width: 1px, $coolStyle: \"solid\", $AwesomeColor: #fff);\n}\np {\n  @include coolBorder();\n}\n\n@mixin coolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include coolBorder(1px, \"solid\", $fff);\n}\n\n@mixin CoolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include CoolBorder(1px, \"solid\", $fff);\n}\n\n@mixin box-shadow($shadows...) {\n  -moz-box-shadow: $shadows;\n  -webkit-box-shadow: $shadows;\n  box-shadow: $shadows;\n}\n.shadows {\n  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);\n}\n\n@mixin apply-to-ie6-only {\n  * html {\n    @content;\n  }\n}\n@include apply-to-ie6-only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin applyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include applyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin ApplyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include ApplyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin config-icon-colors($prefix, $colors...) {\n  @each $i in $colors {\n    .#{$prefix}#{nth($i, 1)} {\n      color: nth($i, 2);\n    }\n  }\n}\n@include config-icon-colors(\n  \"icon-\",\n  \"save\" green,\n  \"cancel\" gray,\n  \"delete\" red,\n  \"wait\" blue\n);\n\n@function my-calculation-function($some-number, $anotherNumber, $BigNumber) {\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function myCalculationFunction($some-number, $anotherNumber, $BigNumber) {\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function AnotherMyCalculationFunction(\n  $some-number,\n  $anotherNumber,\n  $BigNumber: 100px\n) {\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function border($borders...) {\n  @return $borders;\n}\n.foo {\n  padding: my-calculation-function(10px, 5px, 100px);\n  margin: myCalculationFunction(\n    $some-number: 10px,\n    $anotherNumber: 5px,\n    $BigNumber: 100px\n  );\n  width: AnotherMyCalculationFunction(10px, 5px);\n  border: border(25px, 35px);\n}\n\n$sm-only: \"(min-width: 768px) and (max-width: 991px)\";\n$lg-and-up: \"(min-width: 1200px)\";\n\n@media screen and #{$sm-only, $lg-and-up} {\n  color: #000;\n}\n\n.class-#{$var} {\n  #{$var}: #7b3d66;\n  #{$attr}-color: blue;\n  #{$prop}-#{$side}: $value;\n  background-#{$var}: #7b3d66;\n  animation-name: #{var};\n  line-height: #{strip-unit($line-height)}em;\n  height: 1#{$var};\n  width: calc(100% - #{$sidebar-width});\n  max-width: calc(#{$m * 100}vw #{$sign} #{$b});\n  font: #{$font-size}/#{$line-height};\n  content: \"I have #{8 + 2} books on SASS!\";\n  border: #{$var} #{$var} #{$var};\n  filter: #{$var}#{$var}#{$var};\n  prop: #{$var + $var} #{$var + $var} #{$var + $var};\n  prop2: #{$var + $var} #{$var + $var} #{$var + $var};\n  prop3: #{$var + $var} #{$var + $var} #{$var + $var};\n  prop4: -#{$loader-icon-duration};\n  prop5: +#{$loader-icon-duration};\n  prop6: calc(-#{$loader-icon-duration} + 10);\n  prop7: calc(10 + -#{$loader-icon-duration});\n}\n\n/* Framework version for the generated CSS is #{$version}. */\n\n.selector {\n  foo: bar;\n  #{$active} {\n    baz: qux;\n  }\n}\n\n.el:nth-of-type(#{$i}) {\n}\n\n@media #{$value} {\n}\n\n$foundation-dir: \"foundation\";\n@import url(\"#{$foundation-dir}/components/grid\");\n@import url(#{$foundation-dir}/components/grid);\n@import url($foundation-dir/components/grid);\n@import url($foundation-dir + \"/components/grid\");\n\n@function get-font-family($family) {\n  @return $family;\n}\n@import url(\"//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap\");\n@import url(//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap);\n\n@keyframes loader {\n  0% {\n    transform: translate3d(0, 0, 0);\n  }\n\n  #{50% - $loader-icon-duration} {\n    transform: translate3d(0, $bounce-height, 0);\n  }\n\n  50% {\n    transform: translate3d(0, $bounce-height, 0)\n      scale(\n        $loader-bounce-horizontal-expansion,\n        $loader-bounce-vertical-compression\n      );\n  }\n}\n\n$icons:\n  wifi \"\\\\600\",\n  wifi-hotspot \"\\\\601\",\n  weather \"\\\\602\";\n\n@each $icon in $icons {\n  .icon-#{nth($icon, 1)},\n  %icon-#{nth($icon, 1)} {\n    content: \"#{nth($icon, 2)}\";\n  }\n}\n\n.foo {\n  prop: -($grid-gutter-width / 2);\n  prop1: -($grid-gutter-width / 2);\n  prop2: -$grid-gutter-width / 2;\n  prop3: +($grid-gutter-width / 2);\n  prop4: 10px/8px; /* Plain CSS, no division */\n  prop5: $width / 2; /* Uses a variable, does division */\n  prop6: round(1.5) / 2; /* Uses a function, does division */\n  prop7: (500px / 2); /* Uses parentheses, does division */\n  prop8: 5px + 8px / 2px; //* Uses +, does division */\n  prop9: (italic bold 10px/8px); /* In a list, parentheses don't count */\n  prop10: #010203 + #040506;\n  prop11: #010203 * 2;\n  prop12: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n  prop13: progid:DXImageTransform.Microsoft.gradient(enabled='false', startColorstr='#{ie-hex-str($green)}', endColorstr='#{ie-hex-str($translucent-red)}');\n  prop14: e + -resize;\n  prop15: sans- + \"serif\";\n  prop16: 1em + (2em * 3);\n  prop17: rotate(-2deg);\n  prop18: rotate(-2deg);\n  _: _;\n  prop19: 10 - ($grid-gutter-width / 2);\n  prop20: 10 + -($grid-gutter-width / 2);\n  prop21: 10 + -($grid-gutter-width / 2);\n  prop22: -($grid-gutter-width / 2);\n  prop23: -($grid-gutter-width / 2);\n  prop24: -$grid-gutter-width;\n  prop25: +($grid-gutter-width / 2);\n  prop26: +($grid-gutter-width / 2);\n  prop27: +$grid-gutter-width;\n  prop28: --($grid-gutter-width / 2);\n  prop28: ++($grid-gutter-width / 2);\n  prop29: rotate(-2deg);\n}\n\n$last: nth($juggler, length($juggler));\n$x: if($last%2==0, 1/2, 3/2);\n$new: pow($last, $x);\n$sequence:\n  1,\n  1 1,\n  2 1,\n  1 2 1 1,\n  1 1 1 2 2 1;\n$new-entry: ();\n$new-entry: ();\n$new-entry: ();\n$new-entry: ();\n\nbody:before {\n  content: quote(to-string(fibonacci(100), \" \\\\A \"));\n  white-space: pre-wrap;\n}\n\nwidth: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);\nwidth: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);\n\na:nth-child(#{$numPerRow}n) {\n  margin-right: 0;\n  margin-bottom: 0;\n}\n\n@function em($pixels, $context: $browser-context) {\n  @return #{$pixels / $context}em;\n}\n\n.navigation {\n  @extend %updated-#{$flag};\n  @extend .selected-#{$flag};\n  @extend %#{$item};\n}\n\n.icon-#{$icon-name} {\n  background-image: \"/images/#{$icon-name}.svg\";\n}\n\n$extmods: (\n  eot: \"?\",\n  svg: \"#\" + str-replace($name, \" \", \"_\"),\n);\n\n@mixin keyframes {\n  @-moz-keyframes {\n    @content;\n  }\n  @-webkit-keyframes {\n    @content;\n  }\n}\n\n@function gcd($a, $b) {\n  // From: http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\n  @if ($b != 0) {\n    @return gcd($b, $a % $b);\n  } @else {\n    @return abs($a);\n  }\n}\n\n$colors: (\n  primary: (\n    base: #00abc9,\n    light: #daf1f6,\n    dark: #12799a,\n  ),\n  secondary: (\n    base: #424d55,\n    light: #ccc,\n    lightest: #efefef,\n    dark: #404247,\n  ),\n  success: (\n    base: #bbd33e,\n    light: #eaf0c6,\n  ),\n);\n\n@function color($color, $tone: \"base\") {\n  @return map-get(map-get($colors, $color), $tone);\n}\n\n@media only screen and (max-width: 767px) {\n  @include widths(2 3 4, \\\\@small);\n}\n\n$widths-breakpoint-separator: \\\\@small;\n\na {\n  transition-timing-function: func1(\n    func2(\n      func3(\n        \"veryVeryVeryVeryVeryLongValue\",\n        \"veryVeryVeryVeryVeryLongValue\",\n        \"veryVeryVeryVeryVeryLongValue\",\n        \"veryVeryVeryVeryVeryLongValue\"\n      ),\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\"\n    ),\n    \"veryVeryVeryVeryVeryLongValue\",\n    \"veryVeryVeryVeryVeryLongValue\",\n    func3(\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\"\n    )\n  );\n}\n\n$empty-map: ();\n$empty-nested-map: (\n  nested-key: (\n    empty-key: (\n      color: red,\n    ),\n  ),\n  empty-key: (),\n  empty-key: (),\n  empty-key: (),\n);\n\n$o-grid-default-config: (\n  columns: 12,\n  gutter: 10px,\n  min-width: 240px,\n  max-width: 1330px,\n  layouts: (\n    S: 370px,\n    M: 610px,\n    L: 850px,\n    XL: 1090px,\n  ),\n  fluid: true,\n  debug: false,\n  fixed-layout: M,\n  enhanced-experience: true,\n);\n\n$a: ();\n$b: unquote(\"\");\n$c: null;\n$d: (null);\n\n$threads-properties: map-merge(\n  $threads-properties,\n  (\n    $border-label: (),\n  )\n);\n$o-grid-default-config: (\n  layouts: (\n    S: 370px,\n  ),\n);\n\n$map: (\n  key: (\n    value,\n  ),\n  other-key: (\n    key: other-other-value,\n  ),\n);\n\na {\n  content: \"#{\"0.5\"}\";\n  content: my-fn(\"_\");\n  content: \"#{my-fn(\"_\")}\";\n  content: my-fn(\"-\");\n  content: \"#{my-fn(\"-\")}\";\n  content: my-fn(\"-a\");\n  content: \"#{my-fn(\"-a\")}\";\n  content: my-fn(\"a-\");\n  content: \"#{my-fn(\"a-\")}\";\n  content: my-fn(\"foo\");\n  content: \"#{my-fn(\"foo\")}\";\n  content: 1 \"#{my-fn(\"foo\")}\" 2;\n  content: foo \"#{my-fn(\"foo\")}\" bar;\n  content: \"foo #{$description} bar\";\n\n  content: \"#{my-fn(\"foo\",\"bar\")}\";\n  content: \"#{my-fn( \"foo\" , \"bar\" )}\";\n  content: \"#{my-fn(  \"foo\"  ,  \"bar\"  )}\";\n\n  content: '#{my-fn(\"foo\")}';\n  content: \"#{my-fn(\"foo\")}\";\n  content: \"#{my-fn('foo')}\";\n  content: \"#{my-fn(\"foo\")}\";\n}\n\n@mixin theme($css-property, $css-value, $theme-classes: t) {\n  @each $selector in & {\n    @each $class in $theme-classes {\n      @each $theme, $theme-properties in c(themes) {\n        $value: $css-value;\n\n        @each $theme-name, $theme-value in $theme-properties {\n          $rgba-value: \"rgba(#{red($theme-value)}, #{green($theme-value)}, #{blue($theme-value)}\";\n          $value: str-replace($value, \"rgba(\\${#{$theme-name}}\", $rgba-value);\n          $value: str-replace($value, \"\\${#{$theme-name}}\", $theme-value);\n        }\n\n        @at-root .#{$class}-#{join($theme, $selector)} {\n          #{$css-property}: unquote($value);\n        }\n      }\n    }\n  }\n}\n\n.foo,\n// Comment\n.bar {\n  // Comment\n  color: red; // Comment\n}\n\n$my-list:\n  \"foo\",\n  // Comment\n  \"bar\"; // Comment\n\n$my-map: (\n  \"foo\": 1,\n  // Comment\n  \"bar\": 2,\n  // Comment\n  \"buz\": calc(1 + 2),\n  // Buz\n  \"baz\": 4,\n  // Baz\n);\n\n[href]:hover &, // Comment\n[href]:focus &, // Comment\n[href]:active & {\n  .tooltip {\n    opacity: 1;\n  }\n}\n\n@import // Comment\n  \"mixins\",\n  \"variables\",\n  // Comment\n  \"reset\",\n  \"scaffolding\", \"type\",\n  // Comment\n  \"bar\",\n  \"tabs\";\n\n@mixin placeholder {\n  &::placeholder {\n    @content;\n  }\n}\n\n.container {\n  @include placeholder {\n    color: $color-silver;\n  }\n}\n\n.something {\n  grid-template-columns: 1 2fr (3 + 4);\n}\n\n// Ignore escape \"\\\\\" in SCSS mixins\n@mixin margin-bottom-1\\\\/3 {\n  margin-bottom: 0.8rem;\n}\n\nlabel {\n  @include margin-bottom-1\\\\/3;\n}\n\n@function someVeryLongFunctionNameForJustAPow($base, $exponent) {\n  $result: 1;\n  @for $_ from 1 through $exponent {\n    $result: $result * $base;\n  }\n  @return $result;\n}\n\n@function pow($base, $exponent) {\n  @return someVeryLongFunctionNameForJustAPow($base, $exponent);\n}\n\n.foo {\n  width: someVeryLongFunctionNameForJustAPow(\n    2,\n    someVeryLongFunctionNameForJustAPow(\n      2,\n      someVeryLongFunctionNameForJustAPow(\n        2,\n        // This next pow is really powerful\n        someVeryLongFunctionNameForJustAPow(\n            2,\n            someVeryLongFunctionNameForJustAPow(\n              2,\n              someVeryLongFunctionNameForJustAPow(\n                2,\n                someVeryLongFunctionNameForJustAPow(\n                  2,\n                  someVeryLongFunctionNameForJustAPow(\n                    2,\n                    someVeryLongFunctionNameForJustAPow(\n                      2,\n                      someVeryLongFunctionNameForJustAPow(\n                        2,\n                        someVeryLongFunctionNameForJustAPow(\n                          2,\n                          someVeryLongFunctionNameForJustAPow(2, 2)\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n      )\n    )\n  );\n}\n\n.bar {\n  width: pow(\n    2,\n    pow(\n      2,\n      pow(\n        2,\n        // This next pow is really powerful\n        pow(\n            2,\n            pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, 2))))))))\n          )\n      )\n    )\n  );\n}\n\n// #5636\ndiv {\n  margin: - pow(2, 2) * 100px;\n}\n\ndiv {\n  margin: -double(-double(1em));\n  margin: -double(- double(1em));\n  margin: - double(-double(1em));\n}\n\n@function -double($value) {\n  @return $value * 2;\n}\n\n$foo: (\n  \"property1\": (),\n  // comment 1\n  // comment 2\n  \"property2\": 1,\n  /** comment 1 */ /* comment 2 */\n);");
}
#[test]
fn test_scss_scss_trailing_commanone_format_1_0dc64244() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("@media #{$g-breakpoint-tiny} {}\n.#{$fa-css-prefix}-glass:before { content: $fa-var-glass; }\na {height: calc(#{$foo} + 1);}\ndiv {\n  background: {\n      size: auto 60%;\n      position: bottom 2px left;\n  }\n}\na { margin: 0 { left: 10px; } }\n\n$default: #111111 !default;\n$default: #111111   !default;\n$default: #111111\n!default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"   !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"\n!default;\n\n$global: #111111 !global;\n$global: #111111   !global;\n$global: #111111\n!global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"   !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\"\n!global;\n\n$map: (key: value, other-key: other-value);\n$map: (key: value, other-key: other-value) !default;\n$map: (key: value, other-key: other-value)  !default;\n$map: (key: value, other-key: other-value)\n!default;\n$map:\n(key: value, other-key: other-value)\n!default;\n$map: ( key : value , other-key : other-value);\n$map: (  key  :  value  ,  other-key  :  other-value  );\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\nkey: value,\nother-key: other-value\n);\n$map: (\nkey\n:\nvalue,\nother-key\n:\nother-value\n);\n$map: (\nkey\n:\nvalue\n,\nother-key\n:\nother-value\n);\n$map: (very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value, very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value);\n$map: ( very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key : very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value , very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key : very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value );\n$map: (  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key  :  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value  ,  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value  );\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key: very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map:\n(\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key\n:\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value\n,\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key\n:\nvery-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  key: (#d82d2d, #666),\n  other-key: (#52bf4a, #fff),\n  other-other-key: (#c23435, #fff)\n);\n$map: (\nkey: (#d82d2d, #666),\nother-key: (#52bf4a, #fff),\nother-other-key: (#c23435, #fff)\n);\n$map: (\n  key : ( #d82d2d , #666 ),\n  other-key : ( #52bf4a , #fff ),\n  other-other-key : ( #c23435 , #fff )\n);\n$map: (\n  key  : (  #d82d2d  ,  #666  )  ,\n  other-key  :  (  #52bf4a  ,  #fff  ),\n  other-other-key  :  (  #c23435  ,  #fff  )\n);\n$map: (\nkey\n:\n(\n#d82d2d,\n#666\n)\n,\nother-key\n:\n(\n#52bf4a,\n#fff\n)\n,\nother-other-key\n:\n(\n#c23435\n,\n#fff\n)\n);\n$map: map-merge($map, ($key: $value));\n$map: map-merge( $map , ( $key : $value ) );\n$map: map-merge(  $map  ,  (  $key  :  $value  )  );\n$map: map-merge(\n  $map,\n  ($key:  $value)\n);\n$map: map-merge(\n$map,\n($key:  $value)\n);\n$map:\nmap-merge(\n$map\n,\n(\n$key\n:\n$value\n)\n);\n\n$longVariable: (\n(mobile $mobile) (tablet $tablet) (desktop $desktop) (wide $wide)\n);\n\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space:\"item-1\"\"item-2\"\"item-3\";\n$list-space:  \"item-1\"  \"item-2\"  \"item-3\"  ;\n$list-space: \"item-1\"\n  \"item-2\"\n  \"item-3\";\n$list-space\n:\n\"item-1\"\n\"item-2\"\n\"item-3\"\n;\n$list-space\n\n:\n\n\"item-1\"\n\n\"item-2\"\n\n\"item-3\"\n\n;\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma:\"item-1\",\"item-2\",\"item-3\";\n$list-comma:  \"item-1\"  ,  \"item-2\"  ,  \"item-3\"  ;\n$list-comma: \"item-1\",\n  \"item-2\",\n  \"item-3\";\n$list-comma\n:\n\"item-1\"\n,\n\"item-2\"\n,\n\"item-3\"\n;\n$list-comma\n\n:\n\n\"item-1\"\n\n,\n\n\"item-2\"\n\n,\n\n\"item-3\"\n\n;\n$list: \"item-1.1\" \"item-1.2\" \"item-1.3\", \"item-2.1\" \"item-2.2\" \"item-2.3\", \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\"item-1.1\"\"item-1.2\"\"item-1.3\",\"item-2.1\"\"item-2.2\"\"item-2.3\",\"item-3.1\"\"item-3.2\"\"item-3.3\";\n$list:  \"item-1.1\"  \"item-1.2\"  \"item-1.3\"  ,  \"item-2.1\"  \"item-2.2\"  \"item-2.3\"  ,  \"item-3.1\"  \"item-3.2\"  \"item-3.3\"  ;\n$list: \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list\n:\n\"item-1.1\"\n\"item-1.2\"\n\"item-1.3\"\n,\n\"item-2.1\"\n\"item-2.2\"\n\"item-2.3\"\n,\n\"item-3.1\"\n\"item-3.2\"\n\"item-3.3\"\n;\n$list\n\n:\n\n\"item-1.1\"\n\n\"item-1.2\"\n\n\"item-1.3\"\n\n,\n\n\"item-2.1\"\n\n\"item-2.2\"\n\n\"item-2.3\"\n\n,\n\n\"item-3.1\"\n\n\"item-3.2\"\n\n\"item-3.3\"\n\n;\n$list: ((\"item-1.1\", \"item-1.2\", \"item-1.3\"), (\"item-2.1\", \"item-2.2\", \"item-2.3\"), (\"item-3.1\", \"item-3.2\", \"item-3.3\"));\n$list:((\"item-1.1\",\"item-1.2\",\"item-1.3\"),(\"item-2.1\",\"item-2.2\",\"item-2.3\"),(\"item-3.1\",\"item-3.2\",\"item-3.3\"));\n$list:  (  (  \"item-1.1\"  ,  \"item-1.2\"  ,  \"item-1.3\"  )  ,  (  \"item-2.1\"  ,  \"item-2.2\"  ,  \"item-2.3\"  )  ,  (  \"item-3.1\"  ,  \"item-3.2\"  ,  \"item-3.3\"  )  )  ;\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list\n:\n(\n(\n\"item-1.1\"\n,\n\"item-1.2\"\n,\n\"item-1.3\"\n)\n,\n(\n\"item-2.1\"\n,\n\"item-2.2\"\n,\n\"item-2.3\"\n)\n,\n(\n\"item-3.1\"\n,\n\"item-3.2\"\n,\n\"item-3.3\"\n)\n)\n;\n$list\n\n:\n\n(\n\n(\n\n\"item-1.1\"\n\n,\n\n\"item-1.2\"\n\n,\n\n\"item-1.3\"\n\n)\n\n,\n\n(\n\n\"item-2.1\"\n\n,\n\n\"item-2.2\"\n\n,\n\n\"item-2.3\"\n\n)\n\n,\n\n(\n\n\"item-3.1\"\n\n,\n\n\"item-3.2\"\n\n,\n\n\"item-3.3\"\n\n)\n\n)\n\n;\n\n$var: (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0);\n$space-scale: (0, \"0\") (0.25, \"0-25\") (0.5, \"0-5\") (0.75, \"0-75\") (1, \"1\") (1.25, \"1-25\") (1.5, \"1-5\") (1.75, \"1-75\") (2, \"2\") (2.25, \"2-25\") (2.5, \"2-5\") (2.75, \"2-75\") (3, \"3\") (3.25, \"3-25\") (3.5, \"3-5\") (3.75, \"3-75\") (4, \"4\");\n\n.card-column-simple {\n  @include breakpoint( getBp( md ) ) {\n    padding: $spacing_content-sm $spacing_content-md;\n  }\n\n  @include breakpoint (getBp(md)) {\n    &:nth-child(2n + 3) {\n      clear: both;\n    }\n  }\n\n  @include breakpoint (getBp(xl)) {\n    &:nth-child(2n + 3) {\n      clear: none;\n    }\n    &:nth-child(3n + 4) {\n      clear: both;\n    }\n  }\n}\n\n@warn \"Warn (#{$message}).\";\n@warn  \"Warn (#{$message}).\";\n@warn   \"Warn (#{$message}).\";\n@warn #{$message};\n@warn \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@warn\n  \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error  \"Error (#{$message}).\";\n@error   \"Error (#{$message}).\";\n@error #{$message};\n@error \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n@error\n  \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n\n$buttonConfig: \"save\" 50px, 'cancel' 50px, \"help\" 100PX;\n\n$locale: \"en_us\";\nhtml[lang=#{$locale}] {\n  font-size: 10px;\n}\n$alertClass: \"error\";\np.message-#{$alertClass} {\n  color: red;\n}\n$mediumBreakpoint: 768px;\n@media (max-width: #{$mediumBreakpoint}) {\n  a {\n    font-size: 18px;\n  }\n}\n\np {\n  @media (max-width: 768px) {\n    font-size: 150%;\n\n    @media (orientation: landscape) {\n        line-height: 75%;\n    }\n  }\n}\n\n.popularAnimal {\n    background: gray;\n}\n.GoodBoy {\n    color: green;\n}\n.dog {\n  @extend .popularAnimal;\n  @extend .GoodBoy;\n  color: white;\n}\n\n%animal {\n  background: gray;\n}\n.cat {\n  @extend %animal;\n  color: white;\n}\n.dog {\n  @extend %animal;\n  color: black;\n}\n\n%mfw-standing-out {\n  font-size: 150%;\n  font-style: italic;\n  padding: 25px;\n}\n%mfwSlightlyShadowed {\n  @include box-shadow(black 2px 2px 10px); // from Compass\n}\n%MFWRounded {\n  @include border-radius(25px); // from Compass\n}\n#join-button {\n  @extend %mfw-standing-out;\n  @extend %mfwSlightlyShadowed;\n  @extend %MFWRounded;\n  background: green;\n  color: white;\n}\n\na {\n  &:hover {\n    color: red;\n  }\n}\np {\n  body.no-touch & {\n    display: none;\n  }\n}\n.foo.bar .baz.bang, .bip.qux {\n  $selector: &;\n}\n@mixin does-parent-exist {\n  @if & {\n    &:hover {\n      color: red;\n    }\n  } @else {\n    a {\n      color: red;\n    }\n  }\n}\n\np {\n  @if 1 + 1 == 2 {\n    border: 1px solid;\n  }\n  @if 5 < 3 {\n    border: 2px dotted;\n  }\n  @if null {\n    border: 3px double;\n  }\n}\n\n$mosterType: monster;\np {\n  @if $mosterType == ocean {\n    color: blue;\n  } @else if $mosterType == matador {\n    color: red;\n  } @else if $mosterType == monster {\n    color: green;\n  } @else if $mosterType == nightKing {\n    color: green;\n  } @else if $mosterType == VeryWickedWolf {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n\n@for $i from 1 through 3 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n}\n\n@each $animal in puma, sea-slug, cheerfulDog, BigSalamander, \"string\", 'another-string', \"camelCaseString\", \"PascalCaseString\" {\n  .#{$animal}-icon {\n    background-image: url('/images/#{$animal}.png');\n  }\n}\n\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}\n\n@mixin cool-border($width: 10px, $coolStyle: 'solid', $AwesomeColor: \"black\") {\n  border: $width $coolStyle $AwesomeColor;\n}\n\np {\n  @include cool-border(1px, \"solid\", $fff);\n}\np {\n  @include cool-border($width: 1px, $coolStyle: 'solid', $AwesomeColor: #fff);\n}\np {\n  @include coolBorder();\n}\n\n@mixin coolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include coolBorder(1px, \"solid\", $fff);\n}\n\n@mixin CoolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include CoolBorder(1px, \"solid\", $fff);\n}\n\n@mixin box-shadow($shadows...) {\n  -moz-box-shadow: $shadows;\n  -webkit-box-shadow: $shadows;\n  box-shadow: $shadows;\n}\n.shadows {\n  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);\n}\n\n@mixin apply-to-ie6-only {\n  * html {\n    @content;\n  }\n}\n@include apply-to-ie6-only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin applyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include applyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin ApplyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include ApplyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin config-icon-colors($prefix, $colors...) {\n  @each $i in $colors {\n    .#{$prefix}#{nth($i, 1)} {\n      color: nth($i, 2);\n    }\n  }\n}\n@include config-icon-colors(\n  \"icon-\",\n  \"save\" green,\n  \"cancel\" gray,\n  \"delete\" red,\n  'wait' blue\n);\n\n@function my-calculation-function($some-number, $anotherNumber, $BigNumber){\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function myCalculationFunction($some-number, $anotherNumber, $BigNumber){\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function AnotherMyCalculationFunction($some-number, $anotherNumber, $BigNumber: 100px){\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function border($borders...) {\n  @return $borders;\n}\n.foo {\n  padding: my-calculation-function(10px, 5px, 100px);\n  margin: myCalculationFunction($some-number: 10px, $anotherNumber: 5px, $BigNumber: 100px);\n  width: AnotherMyCalculationFunction(10px, 5px);\n  border: border(25px, 35px);\n}\n\n$sm-only: '(min-width: 768px) and (max-width: 991px)';\n$lg-and-up: '(min-width: 1200px)';\n\n@media screen and #{$sm-only, $lg-and-up} {\n  color: #000;\n}\n\n.class-#{$var} {\n  #{$var}: #7b3d66;\n  #{$attr}-color: blue;\n  #{$prop}-#{$side}: $value;\n  background-#{$var}: #7b3d66;\n  animation-name: #{var};\n  line-height: #{strip-unit($line-height)}em;\n  height: 1#{$var};\n  width: calc(100% - #{$sidebar-width});\n  max-width: calc(#{$m*100}vw #{$sign} #{$b});\n  font: #{$font-size}/#{$line-height};\n  content: \"I have #{8 + 2} books on SASS!\";\n  border: #{$var} #{$var} #{$var};\n  filter: #{$var}#{$var}#{$var};\n  prop:  #{  $var  +  $var  }  #{  $var  +  $var  }  #{  $var  +  $var  };\n  prop2:\n      #{\n      $var\n      +\n      $var\n      }\n\n      #{\n      $var\n      +\n      $var\n      }\n\n      #{\n      $var\n      +\n      $var\n      }\n      ;\n  prop3:\n\n      #{\n\n      $var\n\n      +\n\n      $var\n\n      }\n\n      #{\n\n      $var\n\n      +\n\n      $var\n\n      }\n\n      #{\n\n      $var\n\n      +\n\n      $var\n\n      }\n      ;\n  prop4: -#{$loader-icon-duration};\n  prop5: +#{$loader-icon-duration};\n  prop6: calc(-#{$loader-icon-duration} + 10);\n  prop7: calc(10 + -#{$loader-icon-duration});\n}\n\n/* Framework version for the generated CSS is #{$version}. */\n\n.selector {\n  foo: bar;\n  #{$active} {\n    baz: qux;\n  }\n}\n\n.el:nth-of-type(#{$i}) {}\n\n@media #{$value} {}\n\n$foundation-dir: 'foundation';\n@import url('#{$foundation-dir}/components/grid');\n@import url(#{$foundation-dir}/components/grid);\n@import url($foundation-dir/components/grid);\n@import url($foundation-dir+\"/components/grid\");\n\n@function get-font-family($family) {\n  @return $family;\n}\n@import url(\"//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap\");\n@import url(//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap);\n\n\n@keyframes loader {\n  0% {\n    transform: translate3d(0, 0, 0);\n  }\n\n  #{50% - $loader-icon-duration} {\n    transform: translate3d(0, $bounce-height, 0);\n  }\n\n  50% {\n    transform: translate3d(0, $bounce-height, 0) scale($loader-bounce-horizontal-expansion, $loader-bounce-vertical-compression);\n  }\n}\n\n$icons: wifi \"\\\\600\", wifi-hotspot \"\\\\601\", weather \"\\\\602\";\n\n@each $icon in $icons {\n  .icon-#{nth($icon, 1)}, %icon-#{nth($icon, 1)} {\n    content: \"#{nth($icon, 2)}\";\n  }\n}\n\n.foo {\n  prop: -($grid-gutter-width / 2);\n  prop1: -(  $grid-gutter-width  /  2  );\n  prop2: -$grid-gutter-width / 2;\n  prop3: +($grid-gutter-width / 2);\n  prop4: 10px/8px; /* Plain CSS, no division */\n  prop5: $width / 2; /* Uses a variable, does division */\n  prop6: round(1.5) / 2; /* Uses a function, does division */\n  prop7: (500px / 2); /* Uses parentheses, does division */\n  prop8: 5px + 8px / 2px; //* Uses +, does division */\n  prop9: (italic bold 10px/8px); /* In a list, parentheses don't count */\n  prop10: #010203 + #040506;\n  prop11: #010203 * 2;\n  prop12: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n  prop13: progid:DXImageTransform.Microsoft.gradient(enabled='false', startColorstr='#{ie-hex-str($green)}', endColorstr='#{ie-hex-str($translucent-red)}');\n  prop14: e + -resize;\n  prop15: sans- + \"serif\";\n  prop16: 1em + (2em * 3);\n  prop17: rotate(-2deg);\n  prop18:  rotate(  -2deg  )  ;\n  _:_;\n  prop19: 10 - ($grid-gutter-width / 2);\n  prop20: 10 + -($grid-gutter-width / 2);\n  prop21:  10  +  -  (  $grid-gutter-width  /  2  )  ;\n  prop22: - ( $grid-gutter-width / 2 ) ;\n  prop23:  -  (  $grid-gutter-width  /  2  )  ;\n  prop24: -$grid-gutter-width;\n  prop25: + ( $grid-gutter-width / 2 ) ;\n  prop26:  +  (  $grid-gutter-width  /  2  )  ;\n  prop27: +$grid-gutter-width;\n  prop28: --($grid-gutter-width / 2);\n  prop28: ++($grid-gutter-width / 2);\n  prop29:  rotate(  -  2deg  )  ;\n}\n\n$last:nth($juggler,length($juggler));\n$x:if($last%2==0,1/2,3/2);\n$new:pow($last,$x);\n$sequence:1,1 1,2 1,1 2 1 1, 1 1 1 2 2 1;\n$new-entry:();\n$new-entry : ( ) ;\n$new-entry  :  (  )  ;\n$new-entry\n:\n(\n)\n;\n\nbody:before {\n  content: quote(to-string(fibonacci(100), ' \\\\A '));\n  white-space: pre-wrap;\n}\n\nwidth: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);\nwidth\n:\n(\n(\n100%\n-\n(\n(\n$numPerRow\n-\n1\n)\n*\n$margin\n)\n)\n/\n$numPerRow\n)\n;\n\na:nth-child(#{$numPerRow}n) {\n  margin-right: 0;\n  margin-bottom: 0;\n}\n\n@function em($pixels, $context: $browser-context) {\n  @return #{ $pixels / $context }em\n}\n\n.navigation {\n  @extend %updated-#{$flag};\n  @extend .selected-#{$flag};\n  @extend %#{$item};\n}\n\n.icon-#{$icon-name} {\n  background-image: '/images/#{$icon-name}.svg';\n}\n\n$extmods:(eot:\"?\",svg:\"#\" + str-replace($name,\" \",\"_\"));\n\n@mixin keyframes {@-moz-keyframes{@content;}@-webkit-keyframes{@content;}}\n\n@function gcd($a,$b){\n  // From: http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\n  @if ($b != 0) {\n    @return gcd($b,$a % $b);\n  }@else{\n    @return abs($a);\n  }\n}\n\n$colors: (\nprimary: (\nbase: #00abc9,\nlight: #daf1f6,\ndark: #12799a\n),\nsecondary: (\nbase: #424d55,\nlight: #ccc,\nlightest: #efefef,\ndark: #404247\n),\nsuccess: (\nbase: #bbd33e,\nlight: #eaf0c6\n)\n);\n\n@function color($color, $tone: \"base\") {\n@return map-get(map-get($colors, $color), $tone);\n}\n\n@media only screen and (max-width: 767px) {\n  @include widths(2 3 4, \\\\@small);\n}\n\n$widths-breakpoint-separator: \\\\@small;\n\na {\n  transition-timing-function: func1(\n      func2(\n          func3(\n              \"veryVeryVeryVeryVeryLongValue\",\n              \"veryVeryVeryVeryVeryLongValue\",\n              \"veryVeryVeryVeryVeryLongValue\",\n              \"veryVeryVeryVeryVeryLongValue\",\n          ),\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n      ),\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      func3(\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\",\n          \"veryVeryVeryVeryVeryLongValue\"\n      )\n  );\n}\n\n$empty-map: ();\n$empty-nested-map: (\nnested-key: (empty-key: (color: red)),\nempty-key: (),\nempty-key: (),\nempty-key: ()\n);\n\n$o-grid-default-config: (\ncolumns: 12,\ngutter: 10px,\nmin-width: 240px,\nmax-width: 1330px,\nlayouts: (\nS:  370px,\nM:  610px,\nL:  850px,\nXL: 1090px\n),\nfluid: true,\ndebug: false,\nfixed-layout: M,\nenhanced-experience: true\n);\n\n$a: ();\n$b: unquote('');\n$c: null;\n$d: (null);\n\n$threads-properties: map-merge($threads-properties,  ($border-label: ()));\n$o-grid-default-config: (layouts: (S:  370px));\n\n$map: (\nkey: (value),\nother-key: (key: other-other-value)\n);\n\na {\n  content: \"#{\".5\"}\";\n  content: my-fn(\"_\");\n  content: \"#{my-fn(\"_\")}\";\n  content: my-fn(\"-\");\n  content: \"#{my-fn(\"-\")}\";\n  content: my-fn(\"-a\");\n  content: \"#{my-fn(\"-a\")}\";\n  content: my-fn(\"a-\");\n  content: \"#{my-fn(\"a-\")}\";\n  content: my-fn(\"foo\");\n  content: \"#{my-fn(\"foo\")}\";\n  content: 1 \"#{my-fn(\"foo\")}\" 2;\n  content: foo \"#{my-fn(\"foo\")}\" bar;\n  content: \"foo #{$description} bar\";\n\n  content: \"#{my-fn(\"foo\",\"bar\")}\";\n  content: \"#{my-fn( \"foo\" , \"bar\" )}\";\n  content: \"#{my-fn(  \"foo\"  ,  \"bar\"  )}\";\n\n  content: '#{my-fn(\"foo\")}';\n  content: '#{my-fn('foo')}';\n  content: \"#{my-fn('foo')}\";\n  content: \"#{my-fn(\"foo\")}\";\n}\n\n@mixin theme($css-property, $css-value, $theme-classes: t) {\n  @each $selector in & {\n    @each $class in $theme-classes {\n      @each $theme, $theme-properties in c(themes) {\n      $value: $css-value;\n\n        @each $theme-name, $theme-value in $theme-properties {\n          $rgba-value: \"rgba(#{red($theme-value)}, #{green($theme-value)}, #{blue($theme-value)}\";\n          $value: str-replace($value, \"rgba(\\${#{$theme-name}}\", $rgba-value);\n          $value: str-replace($value, \"\\${#{$theme-name}}\", $theme-value);\n        }\n\n        @at-root .#{$class}-#{join($theme, $selector)} {\n          #{$css-property}: unquote($value);\n        }\n      }\n    }\n  }\n}\n\n.foo,\n// Comment\n.bar {\n  // Comment\n  color: red; // Comment\n}\n\n$my-list:\n  'foo', // Comment\n  'bar'; // Comment\n\n$my-map: (\n  'foo': 1, // Comment\n  'bar': 2, // Comment\n  'buz': calc(1 + 2), // Buz\n  'baz': 4, // Baz\n);\n\n[href]:hover &, // Comment\n[href]:focus &, // Comment\n[href]:active & {\n  .tooltip {\n    opacity: 1;\n  }\n}\n\n@import\n  // Comment\n  'mixins',\n  'variables',\n  // Comment\n  'reset',\n  'scaffolding',\n  'type',\n  // Comment\n  'bar',\n  'tabs';\n\n@mixin placeholder {\n  &::placeholder {@content}\n}\n\n.container {\n  @include placeholder {\n    color: $color-silver;\n  }\n}\n\n.something {\n  grid-template-columns: 1 2fr (3 + 4);\n}\n\n// Ignore escape \"\\\\\" in SCSS mixins\n@mixin margin-bottom-1\\\\/3 {\n  margin-bottom: 0.8rem;\n}\n\nlabel {\n  @include margin-bottom-1\\\\/3;\n}\n\n@function someVeryLongFunctionNameForJustAPow($base, $exponent) {\n  $result: 1;\n  @for $_ from 1 through $exponent {\n    $result: $result * $base;\n  }\n  @return $result;\n}\n\n@function pow($base, $exponent){\n  @return someVeryLongFunctionNameForJustAPow($base,$exponent);\n}\n\n.foo{\n  width: someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2,\n  // This next pow is really powerful\n  someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, someVeryLongFunctionNameForJustAPow(2, 2))))))))))))\n}\n\n.bar{\n  width: pow(2, pow(2, pow(2,\n  // This next pow is really powerful\n  pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, 2))))))))))))\n}\n\n// #5636\ndiv {\n  margin: - pow(2, 2) * 100px;\n}\n\ndiv {\n  margin: -double(-double(1em));\n  margin: -double(- double(1em));\n  margin: - double(-double(1em));\n}\n\n@function -double($value) {\n  @return $value * 2;\n}\n\n$foo: (\n    'property1': (),\n    // comment 1\n    // comment 2\n\n    'property2': 1,\n    /** comment 1 */\n    /* comment 2 */\n);") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "@media #{$g-breakpoint-tiny} {\n}\n.#{$fa-css-prefix}-glass:before {\n  content: $fa-var-glass;\n}\na {\n  height: calc(#{$foo} + 1);\n}\ndiv {\n  background: {\n    size: auto 60%;\n    position: bottom 2px left;\n  }\n}\na {\n  margin: 0 {\n    left: 10px;\n  }\n}\n\n$default: #111111 !default;\n$default: #111111 !default;\n$default: #111111 !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n$default: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !default;\n\n$global: #111111 !global;\n$global: #111111 !global;\n$global: #111111 !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n$global: \"very-long-long-long-long-long-long-long-long-long-long-long-value\" !global;\n\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\n  key: value,\n  other-key: other-value\n) !default;\n$map: (\n  key: value,\n  other-key: other-value\n) !default;\n$map: (\n  key: value,\n  other-key: other-value\n) !default;\n$map: (\n  key: value,\n  other-key: other-value\n) !default;\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\n  key: value,\n  other-key: other-value\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-value,\n  very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-key:\n    very-very-very-very-very-very-very-very-very-very-very-very-very-very-very-verylong-other-value\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666\n  ),\n  other-key: (\n    #52bf4a,\n    #fff\n  ),\n  other-other-key: (\n    #c23435,\n    #fff\n  )\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666\n  ),\n  other-key: (\n    #52bf4a,\n    #fff\n  ),\n  other-other-key: (\n    #c23435,\n    #fff\n  )\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666\n  ),\n  other-key: (\n    #52bf4a,\n    #fff\n  ),\n  other-other-key: (\n    #c23435,\n    #fff\n  )\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666\n  ),\n  other-key: (\n    #52bf4a,\n    #fff\n  ),\n  other-other-key: (\n    #c23435,\n    #fff\n  )\n);\n$map: (\n  key: (\n    #d82d2d,\n    #666\n  ),\n  other-key: (\n    #52bf4a,\n    #fff\n  ),\n  other-other-key: (\n    #c23435,\n    #fff\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value\n  )\n);\n$map: map-merge(\n  $map,\n  (\n    $key: $value\n  )\n);\n\n$longVariable: (\n  (mobile $mobile) (tablet $tablet) (desktop $desktop) (wide $wide)\n);\n\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-space: \"item-1\" \"item-2\" \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list-comma: \"item-1\", \"item-2\", \"item-3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list:\n  \"item-1.1\" \"item-1.2\" \"item-1.3\",\n  \"item-2.1\" \"item-2.2\" \"item-2.3\",\n  \"item-3.1\" \"item-3.2\" \"item-3.3\";\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n$list: (\n  (\"item-1.1\", \"item-1.2\", \"item-1.3\"),\n  (\"item-2.1\", \"item-2.2\", \"item-2.3\"),\n  (\"item-3.1\", \"item-3.2\", \"item-3.3\")\n);\n\n$var: (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0)\n  (0 0) (0 0);\n$space-scale: (0, \"0\") (0.25, \"0-25\") (0.5, \"0-5\") (0.75, \"0-75\") (1, \"1\")\n  (1.25, \"1-25\") (1.5, \"1-5\") (1.75, \"1-75\") (2, \"2\") (2.25, \"2-25\")\n  (2.5, \"2-5\") (2.75, \"2-75\") (3, \"3\") (3.25, \"3-25\") (3.5, \"3-5\")\n  (3.75, \"3-75\") (4, \"4\");\n\n.card-column-simple {\n  @include breakpoint(getBp(md)) {\n    padding: $spacing_content-sm $spacing_content-md;\n  }\n\n  @include breakpoint(getBp(md)) {\n    &:nth-child(2n + 3) {\n      clear: both;\n    }\n  }\n\n  @include breakpoint(getBp(xl)) {\n    &:nth-child(2n + 3) {\n      clear: none;\n    }\n    &:nth-child(3n + 4) {\n      clear: both;\n    }\n  }\n}\n\n@warn \"Warn (#{$message}).\";\n@warn \"Warn (#{$message}).\";\n@warn \"Warn (#{$message}).\";\n@warn #{$message};\n@warn \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@warn \"Very long long long long long long long long long long long long long line (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error \"Error (#{$message}).\";\n@error #{$message};\n@error \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n@error \"Very long long long long long long long long long long long long long line Error (#{$message}).\";\n\n$buttonConfig:\n  \"save\" 50px,\n  \"cancel\" 50px,\n  \"help\" 100px;\n\n$locale: \"en_us\";\nhtml[lang=\"#{$locale}\"] {\n  font-size: 10px;\n}\n$alertClass: \"error\";\np.message-#{$alertClass} {\n  color: red;\n}\n$mediumBreakpoint: 768px;\n@media (max-width: #{$mediumBreakpoint}) {\n  a {\n    font-size: 18px;\n  }\n}\n\np {\n  @media (max-width: 768px) {\n    font-size: 150%;\n\n    @media (orientation: landscape) {\n      line-height: 75%;\n    }\n  }\n}\n\n.popularAnimal {\n  background: gray;\n}\n.GoodBoy {\n  color: green;\n}\n.dog {\n  @extend .popularAnimal;\n  @extend .GoodBoy;\n  color: white;\n}\n\n%animal {\n  background: gray;\n}\n.cat {\n  @extend %animal;\n  color: white;\n}\n.dog {\n  @extend %animal;\n  color: black;\n}\n\n%mfw-standing-out {\n  font-size: 150%;\n  font-style: italic;\n  padding: 25px;\n}\n%mfwSlightlyShadowed {\n  @include box-shadow(black 2px 2px 10px); // from Compass\n}\n%MFWRounded {\n  @include border-radius(25px); // from Compass\n}\n#join-button {\n  @extend %mfw-standing-out;\n  @extend %mfwSlightlyShadowed;\n  @extend %MFWRounded;\n  background: green;\n  color: white;\n}\n\na {\n  &:hover {\n    color: red;\n  }\n}\np {\n  body.no-touch & {\n    display: none;\n  }\n}\n.foo.bar .baz.bang,\n.bip.qux {\n  $selector: &;\n}\n@mixin does-parent-exist {\n  @if & {\n    &:hover {\n      color: red;\n    }\n  } @else {\n    a {\n      color: red;\n    }\n  }\n}\n\np {\n  @if 1 + 1 == 2 {\n    border: 1px solid;\n  }\n  @if 5 < 3 {\n    border: 2px dotted;\n  }\n  @if null {\n    border: 3px double;\n  }\n}\n\n$mosterType: monster;\np {\n  @if $mosterType == ocean {\n    color: blue;\n  } @else if $mosterType == matador {\n    color: red;\n  } @else if $mosterType == monster {\n    color: green;\n  } @else if $mosterType == nightKing {\n    color: green;\n  } @else if $mosterType == VeryWickedWolf {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n\n@for $i from 1 through 3 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n}\n\n@each $animal in puma, sea-slug, cheerfulDog, BigSalamander, \"string\",\n  \"another-string\", \"camelCaseString\", \"PascalCaseString\"\n{\n  .#{$animal}-icon {\n    background-image: url(\"/images/#{$animal}.png\");\n  }\n}\n\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}\n\n@mixin cool-border($width: 10px, $coolStyle: \"solid\", $AwesomeColor: \"black\") {\n  border: $width $coolStyle $AwesomeColor;\n}\n\np {\n  @include cool-border(1px, \"solid\", $fff);\n}\np {\n  @include cool-border($width: 1px, $coolStyle: \"solid\", $AwesomeColor: #fff);\n}\np {\n  @include coolBorder();\n}\n\n@mixin coolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include coolBorder(1px, \"solid\", $fff);\n}\n\n@mixin CoolBorder() {\n  border: 10px solid #fff;\n}\np {\n  @include CoolBorder(1px, \"solid\", $fff);\n}\n\n@mixin box-shadow($shadows...) {\n  -moz-box-shadow: $shadows;\n  -webkit-box-shadow: $shadows;\n  box-shadow: $shadows;\n}\n.shadows {\n  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);\n}\n\n@mixin apply-to-ie6-only {\n  * html {\n    @content;\n  }\n}\n@include apply-to-ie6-only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin applyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include applyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin ApplyToIe6Only {\n  * html {\n    @content;\n  }\n}\n@include ApplyToIe6Only {\n  #logo {\n    background-image: url(/logo.gif);\n  }\n}\n\n@mixin config-icon-colors($prefix, $colors...) {\n  @each $i in $colors {\n    .#{$prefix}#{nth($i, 1)} {\n      color: nth($i, 2);\n    }\n  }\n}\n@include config-icon-colors(\n  \"icon-\",\n  \"save\" green,\n  \"cancel\" gray,\n  \"delete\" red,\n  \"wait\" blue\n);\n\n@function my-calculation-function($some-number, $anotherNumber, $BigNumber) {\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function myCalculationFunction($some-number, $anotherNumber, $BigNumber) {\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function AnotherMyCalculationFunction(\n  $some-number,\n  $anotherNumber,\n  $BigNumber: 100px\n) {\n  @return $some-number + $anotherNumber + $BigNumber;\n}\n@function border($borders...) {\n  @return $borders;\n}\n.foo {\n  padding: my-calculation-function(10px, 5px, 100px);\n  margin: myCalculationFunction(\n    $some-number: 10px,\n    $anotherNumber: 5px,\n    $BigNumber: 100px\n  );\n  width: AnotherMyCalculationFunction(10px, 5px);\n  border: border(25px, 35px);\n}\n\n$sm-only: \"(min-width: 768px) and (max-width: 991px)\";\n$lg-and-up: \"(min-width: 1200px)\";\n\n@media screen and #{$sm-only, $lg-and-up} {\n  color: #000;\n}\n\n.class-#{$var} {\n  #{$var}: #7b3d66;\n  #{$attr}-color: blue;\n  #{$prop}-#{$side}: $value;\n  background-#{$var}: #7b3d66;\n  animation-name: #{var};\n  line-height: #{strip-unit($line-height)}em;\n  height: 1#{$var};\n  width: calc(100% - #{$sidebar-width});\n  max-width: calc(#{$m * 100}vw #{$sign} #{$b});\n  font: #{$font-size}/#{$line-height};\n  content: \"I have #{8 + 2} books on SASS!\";\n  border: #{$var} #{$var} #{$var};\n  filter: #{$var}#{$var}#{$var};\n  prop: #{$var + $var} #{$var + $var} #{$var + $var};\n  prop2: #{$var + $var} #{$var + $var} #{$var + $var};\n  prop3: #{$var + $var} #{$var + $var} #{$var + $var};\n  prop4: -#{$loader-icon-duration};\n  prop5: +#{$loader-icon-duration};\n  prop6: calc(-#{$loader-icon-duration} + 10);\n  prop7: calc(10 + -#{$loader-icon-duration});\n}\n\n/* Framework version for the generated CSS is #{$version}. */\n\n.selector {\n  foo: bar;\n  #{$active} {\n    baz: qux;\n  }\n}\n\n.el:nth-of-type(#{$i}) {\n}\n\n@media #{$value} {\n}\n\n$foundation-dir: \"foundation\";\n@import url(\"#{$foundation-dir}/components/grid\");\n@import url(#{$foundation-dir}/components/grid);\n@import url($foundation-dir/components/grid);\n@import url($foundation-dir + \"/components/grid\");\n\n@function get-font-family($family) {\n  @return $family;\n}\n@import url(\"//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap\");\n@import url(//fonts.googleapis.com/css?family=#{ get-font-family('Roboto') }:100,300,500,700,900&display=swap);\n\n@keyframes loader {\n  0% {\n    transform: translate3d(0, 0, 0);\n  }\n\n  #{50% - $loader-icon-duration} {\n    transform: translate3d(0, $bounce-height, 0);\n  }\n\n  50% {\n    transform: translate3d(0, $bounce-height, 0)\n      scale(\n        $loader-bounce-horizontal-expansion,\n        $loader-bounce-vertical-compression\n      );\n  }\n}\n\n$icons:\n  wifi \"\\\\600\",\n  wifi-hotspot \"\\\\601\",\n  weather \"\\\\602\";\n\n@each $icon in $icons {\n  .icon-#{nth($icon, 1)},\n  %icon-#{nth($icon, 1)} {\n    content: \"#{nth($icon, 2)}\";\n  }\n}\n\n.foo {\n  prop: -($grid-gutter-width / 2);\n  prop1: -($grid-gutter-width / 2);\n  prop2: -$grid-gutter-width / 2;\n  prop3: +($grid-gutter-width / 2);\n  prop4: 10px/8px; /* Plain CSS, no division */\n  prop5: $width / 2; /* Uses a variable, does division */\n  prop6: round(1.5) / 2; /* Uses a function, does division */\n  prop7: (500px / 2); /* Uses parentheses, does division */\n  prop8: 5px + 8px / 2px; //* Uses +, does division */\n  prop9: (italic bold 10px/8px); /* In a list, parentheses don't count */\n  prop10: #010203 + #040506;\n  prop11: #010203 * 2;\n  prop12: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n  prop13: progid:DXImageTransform.Microsoft.gradient(enabled='false', startColorstr='#{ie-hex-str($green)}', endColorstr='#{ie-hex-str($translucent-red)}');\n  prop14: e + -resize;\n  prop15: sans- + \"serif\";\n  prop16: 1em + (2em * 3);\n  prop17: rotate(-2deg);\n  prop18: rotate(-2deg);\n  _: _;\n  prop19: 10 - ($grid-gutter-width / 2);\n  prop20: 10 + -($grid-gutter-width / 2);\n  prop21: 10 + -($grid-gutter-width / 2);\n  prop22: -($grid-gutter-width / 2);\n  prop23: -($grid-gutter-width / 2);\n  prop24: -$grid-gutter-width;\n  prop25: +($grid-gutter-width / 2);\n  prop26: +($grid-gutter-width / 2);\n  prop27: +$grid-gutter-width;\n  prop28: --($grid-gutter-width / 2);\n  prop28: ++($grid-gutter-width / 2);\n  prop29: rotate(-2deg);\n}\n\n$last: nth($juggler, length($juggler));\n$x: if($last%2==0, 1/2, 3/2);\n$new: pow($last, $x);\n$sequence:\n  1,\n  1 1,\n  2 1,\n  1 2 1 1,\n  1 1 1 2 2 1;\n$new-entry: ();\n$new-entry: ();\n$new-entry: ();\n$new-entry: ();\n\nbody:before {\n  content: quote(to-string(fibonacci(100), \" \\\\A \"));\n  white-space: pre-wrap;\n}\n\nwidth: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);\nwidth: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);\n\na:nth-child(#{$numPerRow}n) {\n  margin-right: 0;\n  margin-bottom: 0;\n}\n\n@function em($pixels, $context: $browser-context) {\n  @return #{$pixels / $context}em;\n}\n\n.navigation {\n  @extend %updated-#{$flag};\n  @extend .selected-#{$flag};\n  @extend %#{$item};\n}\n\n.icon-#{$icon-name} {\n  background-image: \"/images/#{$icon-name}.svg\";\n}\n\n$extmods: (\n  eot: \"?\",\n  svg: \"#\" + str-replace($name, \" \", \"_\")\n);\n\n@mixin keyframes {\n  @-moz-keyframes {\n    @content;\n  }\n  @-webkit-keyframes {\n    @content;\n  }\n}\n\n@function gcd($a, $b) {\n  // From: http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\n  @if ($b != 0) {\n    @return gcd($b, $a % $b);\n  } @else {\n    @return abs($a);\n  }\n}\n\n$colors: (\n  primary: (\n    base: #00abc9,\n    light: #daf1f6,\n    dark: #12799a\n  ),\n  secondary: (\n    base: #424d55,\n    light: #ccc,\n    lightest: #efefef,\n    dark: #404247\n  ),\n  success: (\n    base: #bbd33e,\n    light: #eaf0c6\n  )\n);\n\n@function color($color, $tone: \"base\") {\n  @return map-get(map-get($colors, $color), $tone);\n}\n\n@media only screen and (max-width: 767px) {\n  @include widths(2 3 4, \\\\@small);\n}\n\n$widths-breakpoint-separator: \\\\@small;\n\na {\n  transition-timing-function: func1(\n    func2(\n      func3(\n        \"veryVeryVeryVeryVeryLongValue\",\n        \"veryVeryVeryVeryVeryLongValue\",\n        \"veryVeryVeryVeryVeryLongValue\",\n        \"veryVeryVeryVeryVeryLongValue\"\n      ),\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\"\n    ),\n    \"veryVeryVeryVeryVeryLongValue\",\n    \"veryVeryVeryVeryVeryLongValue\",\n    func3(\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\",\n      \"veryVeryVeryVeryVeryLongValue\"\n    )\n  );\n}\n\n$empty-map: ();\n$empty-nested-map: (\n  nested-key: (\n    empty-key: (\n      color: red\n    )\n  ),\n  empty-key: (),\n  empty-key: (),\n  empty-key: ()\n);\n\n$o-grid-default-config: (\n  columns: 12,\n  gutter: 10px,\n  min-width: 240px,\n  max-width: 1330px,\n  layouts: (\n    S: 370px,\n    M: 610px,\n    L: 850px,\n    XL: 1090px\n  ),\n  fluid: true,\n  debug: false,\n  fixed-layout: M,\n  enhanced-experience: true\n);\n\n$a: ();\n$b: unquote(\"\");\n$c: null;\n$d: (null);\n\n$threads-properties: map-merge(\n  $threads-properties,\n  (\n    $border-label: ()\n  )\n);\n$o-grid-default-config: (\n  layouts: (\n    S: 370px\n  )\n);\n\n$map: (\n  key: (\n    value\n  ),\n  other-key: (\n    key: other-other-value\n  )\n);\n\na {\n  content: \"#{\"0.5\"}\";\n  content: my-fn(\"_\");\n  content: \"#{my-fn(\"_\")}\";\n  content: my-fn(\"-\");\n  content: \"#{my-fn(\"-\")}\";\n  content: my-fn(\"-a\");\n  content: \"#{my-fn(\"-a\")}\";\n  content: my-fn(\"a-\");\n  content: \"#{my-fn(\"a-\")}\";\n  content: my-fn(\"foo\");\n  content: \"#{my-fn(\"foo\")}\";\n  content: 1 \"#{my-fn(\"foo\")}\" 2;\n  content: foo \"#{my-fn(\"foo\")}\" bar;\n  content: \"foo #{$description} bar\";\n\n  content: \"#{my-fn(\"foo\",\"bar\")}\";\n  content: \"#{my-fn( \"foo\" , \"bar\" )}\";\n  content: \"#{my-fn(  \"foo\"  ,  \"bar\"  )}\";\n\n  content: '#{my-fn(\"foo\")}';\n  content: \"#{my-fn(\"foo\")}\";\n  content: \"#{my-fn('foo')}\";\n  content: \"#{my-fn(\"foo\")}\";\n}\n\n@mixin theme($css-property, $css-value, $theme-classes: t) {\n  @each $selector in & {\n    @each $class in $theme-classes {\n      @each $theme, $theme-properties in c(themes) {\n        $value: $css-value;\n\n        @each $theme-name, $theme-value in $theme-properties {\n          $rgba-value: \"rgba(#{red($theme-value)}, #{green($theme-value)}, #{blue($theme-value)}\";\n          $value: str-replace($value, \"rgba(\\${#{$theme-name}}\", $rgba-value);\n          $value: str-replace($value, \"\\${#{$theme-name}}\", $theme-value);\n        }\n\n        @at-root .#{$class}-#{join($theme, $selector)} {\n          #{$css-property}: unquote($value);\n        }\n      }\n    }\n  }\n}\n\n.foo,\n// Comment\n.bar {\n  // Comment\n  color: red; // Comment\n}\n\n$my-list:\n  \"foo\",\n  // Comment\n  \"bar\"; // Comment\n\n$my-map: (\n  \"foo\": 1,\n  // Comment\n  \"bar\": 2,\n  // Comment\n  \"buz\": calc(1 + 2),\n  // Buz\n  \"baz\": 4,\n  // Baz\n);\n\n[href]:hover &, // Comment\n[href]:focus &, // Comment\n[href]:active & {\n  .tooltip {\n    opacity: 1;\n  }\n}\n\n@import // Comment\n  \"mixins\",\n  \"variables\",\n  // Comment\n  \"reset\",\n  \"scaffolding\", \"type\",\n  // Comment\n  \"bar\",\n  \"tabs\";\n\n@mixin placeholder {\n  &::placeholder {\n    @content;\n  }\n}\n\n.container {\n  @include placeholder {\n    color: $color-silver;\n  }\n}\n\n.something {\n  grid-template-columns: 1 2fr (3 + 4);\n}\n\n// Ignore escape \"\\\\\" in SCSS mixins\n@mixin margin-bottom-1\\\\/3 {\n  margin-bottom: 0.8rem;\n}\n\nlabel {\n  @include margin-bottom-1\\\\/3;\n}\n\n@function someVeryLongFunctionNameForJustAPow($base, $exponent) {\n  $result: 1;\n  @for $_ from 1 through $exponent {\n    $result: $result * $base;\n  }\n  @return $result;\n}\n\n@function pow($base, $exponent) {\n  @return someVeryLongFunctionNameForJustAPow($base, $exponent);\n}\n\n.foo {\n  width: someVeryLongFunctionNameForJustAPow(\n    2,\n    someVeryLongFunctionNameForJustAPow(\n      2,\n      someVeryLongFunctionNameForJustAPow(\n        2,\n        // This next pow is really powerful\n        someVeryLongFunctionNameForJustAPow(\n            2,\n            someVeryLongFunctionNameForJustAPow(\n              2,\n              someVeryLongFunctionNameForJustAPow(\n                2,\n                someVeryLongFunctionNameForJustAPow(\n                  2,\n                  someVeryLongFunctionNameForJustAPow(\n                    2,\n                    someVeryLongFunctionNameForJustAPow(\n                      2,\n                      someVeryLongFunctionNameForJustAPow(\n                        2,\n                        someVeryLongFunctionNameForJustAPow(\n                          2,\n                          someVeryLongFunctionNameForJustAPow(2, 2)\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n      )\n    )\n  );\n}\n\n.bar {\n  width: pow(\n    2,\n    pow(\n      2,\n      pow(\n        2,\n        // This next pow is really powerful\n        pow(\n            2,\n            pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, pow(2, 2))))))))\n          )\n      )\n    )\n  );\n}\n\n// #5636\ndiv {\n  margin: - pow(2, 2) * 100px;\n}\n\ndiv {\n  margin: -double(-double(1em));\n  margin: -double(- double(1em));\n  margin: - double(-double(1em));\n}\n\n@function -double($value) {\n  @return $value * 2;\n}\n\n$foo: (\n  \"property1\": (),\n  // comment 1\n  // comment 2\n  \"property2\": 1,\n  /** comment 1 */ /* comment 2 */\n);");
}
#[test]
fn test_string_concatanation_scss_trailing_commaes_5_format_1_c5495500() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("es5")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("a {\n  background-image: url($test-path + $test-path);\n  background-image: url($test-path + 'static/test.jpg');\n  background-image: url('../test/' + $test-path);\n  background-image: url('../test/' + 'static/test.jpg');\n  background-image: url($test-path+$test-path);\n}") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "a {\n  background-image: url($test-path + $test-path);\n  background-image: url($test-path + \"static/test.jpg\");\n  background-image: url(\"../test/\" + $test-path);\n  background-image: url(\"../test/\" + \"static/test.jpg\");\n  background-image: url($test-path + $test-path);\n}");
}
#[test]
fn test_string_concatanation_scss_trailing_commanone_format_1_c5495500() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parsers(vec!["scss"])
        .print_width(80)
        .trailing_comma("none")
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("a {\n  background-image: url($test-path + $test-path);\n  background-image: url($test-path + 'static/test.jpg');\n  background-image: url('../test/' + $test-path);\n  background-image: url('../test/' + 'static/test.jpg');\n  background-image: url($test-path+$test-path);\n}") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "a {\n  background-image: url($test-path + $test-path);\n  background-image: url($test-path + \"static/test.jpg\");\n  background-image: url(\"../test/\" + $test-path);\n  background-image: url(\"../test/\" + \"static/test.jpg\");\n  background-image: url($test-path + $test-path);\n}");
}
