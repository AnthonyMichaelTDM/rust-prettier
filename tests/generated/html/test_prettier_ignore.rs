#[allow(unused_imports)]
use rust_prettier::PrettyPrinterBuilder;
#[test]
fn test_cases_html_format_1_861f1c79() {
    let pretty_printer = PrettyPrinterBuilder::default().build().unwrap();
    let formatted = pretty_printer
        .format("123<!--prettier-ignore-->456\n\n<span></span><!--prettier-ignore--><span></span>");
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq!(
        formatted,
        "123<!--prettier-ignore-->456\n\n<span></span\n><!--prettier-ignore--><span></span>"
    );
}
#[test]
fn test_document_html_format_1_f5b604a9() {
    let pretty_printer = PrettyPrinterBuilder::default().build().unwrap();
    let formatted = pretty_printer . format ("<!doctype html>\n<html class=\"no-js\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <title>Title</title>\n  </head>\n  <body>\n    <!-- prettier-ignore -->\n    <p>\n      Test  Test   Test\n    </p>\n\n    <!-- prettier-ignore -->\n    <p attribute  =  \"value\">\n      Test  Test   Test\n    </p>\n\n    <!-- prettier-ignore -->\n    <ul\n      ><li> First  </li\n      ><li>Second<i>1</i><div><div>String</div></div></li\n    ></ul>\n\n    <!-- prettier-ignore -->\n    <div>\n\n\n\n\n\n    </div>\n\n    <!-- prettier-ignore -->\n    <ul><!--\n      --><li>   First   </li><!--\n      --><li>   Second   </li><!--\n    --></ul>\n\n    <!-- prettier-ignore -->\n    <br />\n  </body>\n</html>") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "<!doctype html>\n<html class=\"no-js\" lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n    <title>Title</title>\n  </head>\n  <body>\n    <!-- prettier-ignore -->\n    <p>\n      Test  Test   Test\n    </p>\n\n    <!-- prettier-ignore -->\n    <p attribute  =  \"value\">\n      Test  Test   Test\n    </p>\n\n    <!-- prettier-ignore -->\n    <ul\n      ><li> First  </li\n      ><li>Second<i>1</i><div><div>String</div></div></li\n    ></ul>\n\n    <!-- prettier-ignore -->\n    <div>\n\n\n\n\n\n    </div>\n\n    <!-- prettier-ignore -->\n    <ul><!--\n      --><li>   First   </li><!--\n      --><li>   Second   </li><!--\n    --></ul>\n\n    <!-- prettier-ignore -->\n    <br />\n  </body>\n</html>");
}
#[test]
fn test_long_lines_html_format_1_04dc7fc8() {
    let pretty_printer = PrettyPrinterBuilder::default().build().unwrap();
    let formatted = pretty_printer . format ("<!-- prettier-ignore -->\nA super long string that has been marked as ignore because it was probably generated by some script.\n\n<p>\n    Just some ordinary text that should be wrapped up because it is super long and has not been marked as ignore.\n</p>\n\n<p>\n    <!-- prettier-ignore -->\n    A super long string that has been marked as ignore because it was probably generated by some script.\n</p>\n\n<!-- prettier-ignore -->\n| Dogs | Cats | Weasels | Bats | Pigs | Mice | Hedgehogs | Capybaras | Rats | Tigers |\n| ---- | ---- | ------- | ---- | ---- | ---- | --------- | --------- | ---- | ------ |\n|    1 |    1 |       0 |    0 |    1 |    1 |         5 |        16 |    4 |      0 ") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "<!-- prettier-ignore -->\nA super long string that has been marked as ignore because it was probably generated by some script.\n\n<p>\n  Just some ordinary text that should be wrapped up because it is super long and\n  has not been marked as ignore.\n</p>\n\n<p>\n  <!-- prettier-ignore -->\n  A super long string that has been marked as ignore because it was probably generated by some script.\n</p>\n\n<!-- prettier-ignore -->\n| Dogs | Cats | Weasels | Bats | Pigs | Mice | Hedgehogs | Capybaras | Rats | Tigers |\n| ---- | ---- | ------- | ---- | ---- | ---- | --------- | --------- | ---- | ------ |\n|    1 |    1 |       0 |    0 |    1 |    1 |         5 |        16 |    4 |      0 |");
}
