#[allow(unused_imports)]
use rust_prettier::PrettyPrinterBuilder;
#[allow(dead_code)]
static INFINITY: usize = usize::MAX;
#[test]
fn test_configuration_yml_format_1_71581e8e() {
    let pretty_printer = PrettyPrinterBuilder::default()
        .parser("yml")
        .print_width(80)
        .build()
        .unwrap();
    let formatted = pretty_printer . format ("---\ndefault_config:\ntts:\n  - platform: google_translate\n\nhomeassistant:\n  time_zone: Europe/Amsterdam\n  latitude: 80.1\n  longitude: -160\n\nautomation:\n\n- description: Send notification on Home Assistant start\n  alias: system_start_notification\n  id: 104463f6-7524-48d9-bbe5-2bb09017e946\n  mode: single\n  trigger:\n    platform: homeassistant\n    event: start\n  action:\n  - service: notify.frenck_telegram\n    data:\n      message: Home Assistant is starting up again ðŸŽ‰\n\n- description: Open the hall curtain based on time and type of day\n  alias: hall_curtain_open\n  id: 43178d7d-b1b5-45cc-a557-a918c397708b\n  mode: single\n  trigger:\n    - platform: homeassistant\n      event: start\n    - platform: event\n      event_type: automation_reloaded\n    - platform: state\n      entity_id:\n        - alarm_control_panel.home_alarm\n    - platform: time\n      at: \"08:10:00\"\n    - platform: time\n      at: \"10:00:00\"\n  condition:\n\n  - condition: state\n    entity_id:\n      - alarm_control_panel.home_alarm\n    state:\n      - disarmed\n  - condition: time\n    before: \"19:00:00\"\n  - condition: or\n    conditions:\n      - condition: and\n        conditions:\n          - condition: time\n            after: \"08:10:00\"\n          - condition: state\n            entity_id:\n              - binary_sensor.workday\n            state: \"on\"\n      - condition: and\n        conditions:\n          - condition: time\n            after: \"10:00:00\"\n            weekday:\n              - sat\n          - condition: state\n            entity_id:\n              - binary_sensor.holiday\n            state: \"off\"\n    action:\n      - service: cover.open_cover\n        data:\n          entity_id:\n            - cover.hall_curtain\n\n\nlogger:\n\n  default: info\n  logs:\n    homeassistant.core: warning\n\nswitch:\n- platform: wake_on_lan\n  entity_id:\n    - sensor.attic_boiler_bssid\n\n\n\nhue:\n    bridges:\n        - host: 192.168.1.1") ;
    assert!(formatted.is_ok());
    let formatted = formatted.unwrap();
    assert_eq ! (formatted , "---\ndefault_config:\ntts:\n  - platform: google_translate\n\nhomeassistant:\n  time_zone: Europe/Amsterdam\n  latitude: 80.1\n  longitude: -160\n\nautomation:\n  - description: Send notification on Home Assistant start\n    alias: system_start_notification\n    id: 104463f6-7524-48d9-bbe5-2bb09017e946\n    mode: single\n    trigger:\n      platform: homeassistant\n      event: start\n    action:\n      - service: notify.frenck_telegram\n        data:\n          message: Home Assistant is starting up again ðŸŽ‰\n\n  - description: Open the hall curtain based on time and type of day\n    alias: hall_curtain_open\n    id: 43178d7d-b1b5-45cc-a557-a918c397708b\n    mode: single\n    trigger:\n      - platform: homeassistant\n        event: start\n      - platform: event\n        event_type: automation_reloaded\n      - platform: state\n        entity_id:\n          - alarm_control_panel.home_alarm\n      - platform: time\n        at: \"08:10:00\"\n      - platform: time\n        at: \"10:00:00\"\n    condition:\n      - condition: state\n        entity_id:\n          - alarm_control_panel.home_alarm\n        state:\n          - disarmed\n      - condition: time\n        before: \"19:00:00\"\n      - condition: or\n        conditions:\n          - condition: and\n            conditions:\n              - condition: time\n                after: \"08:10:00\"\n              - condition: state\n                entity_id:\n                  - binary_sensor.workday\n                state: \"on\"\n          - condition: and\n            conditions:\n              - condition: time\n                after: \"10:00:00\"\n                weekday:\n                  - sat\n              - condition: state\n                entity_id:\n                  - binary_sensor.holiday\n                state: \"off\"\n        action:\n          - service: cover.open_cover\n            data:\n              entity_id:\n                - cover.hall_curtain\n\nlogger:\n  default: info\n  logs:\n    homeassistant.core: warning\n\nswitch:\n  - platform: wake_on_lan\n    entity_id:\n      - sensor.attic_boiler_bssid\n\nhue:\n  bridges:\n    - host: 192.168.1.1");
}
